{"version":3,"file":"questionBank.min.js","sources":["../src/questionBank.js"],"sourcesContent":["//import TPDynamicForm from 'local_trainingprogram/dynamicform';\nimport ModalForm from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport homepage from 'theme_academy/homepage';\nimport Ajax from 'core/ajax';\nimport {get_string as getString} from 'core/str';\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport cardPaginate from 'theme_academy/cardPaginate';\nimport cfg from 'core/config';\n\nconst HomePage = new homepage();\nconst Selectors = {\n    actions: {\n        deletequestionbank: '[data-action=\"deletequestionbank\"]',\n        viewquestiontopics: '[data-action=\"viewquestiontopics\"]',\n        viewexperts: '[data-action=\"viewexperts\"]',\n        viewcompetencies: '[data-action=\"viewcompetencies\"]',\n        deletecompetency: '[data-action=\"deletecompetency\"]',\n        deletecourse: '[data-action=\"deletecourse\"]',\n        assignexpert: '[data-action=\"assignexpert\"]',\n        unassignexpert: '[data-action=\"unassignexpert\"]',\n        mapcompetencies: '[data-action=\"mapcompetencies\"]',\n        assignopicstocourse: '[data-action=\"assignopicstocourse\"]',\n        unassigntopic: '[data-action=\"unassigntopic\"]',\n        changestatus: '[data-action=\"changestatus\"]',\n        assignreviewer: '[data-action=\"assignreviewer\"]',\n        programtabs: '[data-action=\"programtabs\"]',\n        movetoprodquestionbank: '[data-action=\"movetoprodquestionbank\"]',\n        viewtopics: '[data-action=\"viewtopics\"]', \n        selectedcourses: '[data-action=\"selectedcourses\"]',\n        bulkchangestatus: '[data-action=\"bulkchangestatus\"]',\n        //reservequestions: '[data-action=\"reservequestions\"]'\n        submit : '[data-action=\"save\"]',\n        selectedexperts : '[role=\"option\"]',\n        cancelbtn: '[data-action=\"cancel\"]',\n    },\n};\n\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        let deletequestionbank = e.target.closest(Selectors.actions.deletequestionbank);\n        if (deletequestionbank) {\n            const workshopid = deletequestionbank.getAttribute('data-id');\n            const workshopname = deletequestionbank.getAttribute('data-name');\n            ModalFactory.create({\n                title: getString('confirm', 'local_questionbank'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deleteconfirm', 'local_questionbank',workshopname)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('deletetext', 'local_questionbank'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.workshopid = workshopid;\n                    params.workshopname = workshopname;\n                    var promise = Ajax.call([{\n                        methodname: 'local_questionbank_delete',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        //console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let viewquestiontopics = e.target.closest(Selectors.actions.viewquestiontopics);\n        if (viewquestiontopics) {\n            const workshopid = viewquestiontopics.getAttribute('data-id');\n            const workshopname = viewquestiontopics.getAttribute('data-name');\n            var params = {};\n            params.workshopid = workshopid;\n            params.workshopname = workshopname;\n            var promise = Ajax.call([{\n                methodname: 'local_questionbank_viewtopics',\n                args: params\n            }]);\n            promise[0].done(function(resp) {\n                ModalFactory.create({\n                    title: getString('viewtopics', 'local_questionbank'),\n                    type: ModalFactory.types.DEFAULT,\n                    body: resp.options,\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.setLarge(true);\n                    modal.show();\n                }.bind(this));\n            }).fail(function() {\n                // do something with the exception\n                 //console.log('exception');\n            });\n        }\n        let unassigntopic  = e.target.closest(Selectors.actions.unassigntopic);\n        if (unassigntopic) {\n            const questionbankid = unassigntopic.getAttribute('data-id');\n            const topicid = unassigntopic.getAttribute('data-topicid');\n            ModalFactory.create({\n                title: getString('unassignconfirmtopic', 'local_questionbank'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('unassigntopic', 'local_questionbank')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('unassign', 'local_questionbank'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.questionbankid = questionbankid;\n                    params.topicid = topicid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_questionbank_unassigntopics',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                       window.location.reload(true);\n                         // modal.destroy();\n                    }).fail(function() {\n                        //console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n            // var params = {};\n            // params.questionbankid = questionbankid;\n            // params.topicid = topicid;\n            // Ajax.call([{\n            //     methodname: 'local_questionbank_unassigntopics',\n            //     args: params\n            // }])[0].done(function() {\n            //         window.location.reload();\n            // });\n        }\n\n        let unassignexpert  = e.target.closest(Selectors.actions.unassignexpert);\n        if (unassignexpert) {\n            const questionbankid = unassignexpert.getAttribute('data-id');\n             const username = unassignexpert.getAttribute('data-user');\n            ModalFactory.create({\n                title: getString('unassignconfirm', 'local_questionbank'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('unassignexpert', 'local_questionbank',username)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('unassign', 'local_questionbank'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.questionbankid = questionbankid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_questionbank_assignexperts',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                       window.location.reload(true);\n                         // modal.destroy();\n                    }).fail(function() {\n                        //console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n            //var params = {};\n            // params.questionbankid = questionbankid;\n            // Ajax.call([{\n            //     methodname: 'local_questionbank_assignexperts',\n            //     args: params\n            // }])[0].done(function() {\n            //         window.location.reload();\n            // });\n        }\n        // let reservequestions = e.target.closest(Selectors.actions.reservequestions);\n        // if (reservequestions) {\n        //     e.preventDefault();\n        //     var params = {};\n        //     params.eid = reservequestions.getAttribute('data-id');\n        //     // slid = hallreserve.getAttribute('data-slid');            \n        //     params.userid = reservequestions.getAttribute('data-userid');\n        //     params.wid = reservequestions.getAttribute('data-wid');\n        //     // params.start = hallreserve.getAttribute('data-start');\n        //     //params.referencecode = $(\"input[name='sesskey']\").val();\n        //     params.qcount = $(\".questionscount\"+params.eid).val();\n        //     available = reservequestions.getAttribute('data-availablequestions');\n        //     var data = {};\n        //     data.available = available;\n\n        //     if(isNaN(params.qcount)){\n        //         HomePage.confirmbox(getString('durationerr', 'local_questionbank'));\n        //     } else if(+params.qcount < 0) {\n        //         HomePage.confirmbox(getString('validquestioncount', 'local_questionbank'));\n        //     }else if(+available < +params.qcount) {\n        //         HomePage.confirmbox(getString('availableqcount', 'local_questionbank',  available));\n        //     } else if(params.qcount == \"\") {\n        //         HomePage.confirmbox(getString('noofquestionserr', 'local_questionbank'));\n        //     }else {\n        //         ModalFactory.create({\n        //             title: getString('confirm', 'local_hall'),\n        //             type: ModalFactory.types.SAVE_CANCEL,\n        //             body: getString('selectedquestions', 'local_questionbank', params.qcount)\n        //         }).done(function(modal) {\n        //             this.modal = modal;\n        //             modal.setSaveButtonText(getString('reserve', 'local_hall'));\n        //             modal.getRoot().on(ModalEvents.save, function(e) {\n        //                 modal.hide();\n        //                 var options = {};\n        //                 options.eid = params.eid;\n        //                 options.userid = params.userid;\n        //                 options.wid = params.wid;\n        //                 options.qcount = params.qcount;\n        //                 options.temp = 'reservequestions';\n        //                // options.methodName = 'local_hall_data';\n        //                 e.preventDefault();\n        //                 var promise = Ajax.call([{\n        //                     methodname: 'reservequestionsforexpert',\n        //                     args: params\n        //                 }]);\n        //                 promise[0].done(function(resp) {\n\n        //                     HomePage.confirmbox(getString('reservationsuccess', 'local_hall'));\n        //                      window.location.reload(true);\n        //                 }).fail(function() {\n        //                      console.log('exception');\n        //                 });\n        //             }.bind(this));\n        //             modal.show();\n        //             // window.location.reload();\n        //         }.bind(this));\n        //     }\n        // }\n        let assignexpert  = e.target.closest(Selectors.actions.assignexpert);\n        if (assignexpert) {\n            e.preventDefault();\n            const title = getString('assignexperts', 'local_questionbank');\n            const form = new ModalForm({\n                formClass: 'local_questionbank\\\\form\\\\expertsform',\n                args: {\n                    questionbankid: assignexpert.getAttribute('data-id')\n                },\n                modalConfig: {title},\n                returnFocus: assignexpert,\n            });\n\n            form.show();\n            form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n                e.preventDefault();\n                const spanElements = document.querySelectorAll('.badge');\n                let allowed_questions = $('#questionallowed').val();\n                var sum = 0;\n                var emptyinput = 0;\n                Array.from(spanElements).forEach((span) => {\n                    const dataValue = span.getAttribute('data-value');\n                    var selectedexperts = parseInt(dataValue, 10);\n\n                    if (!isNaN(selectedexperts)) {\n                        var tag_name = $('#noofquestionsfor_'+selectedexperts)[0].tagName;\n                        if (tag_name == 'INPUT') {\n                            if (!isNaN(parseInt($('#noofquestionsfor_'+selectedexperts).val()))) {\n                                sum = sum + parseInt($('#noofquestionsfor_'+selectedexperts).val());\n                            }else{\n                                emptyinput ++;\n                            }\n                        }\n                    }\n                });\n                if (emptyinput == 0) {\n\n                    var savebtn = document.querySelector('div.modal-footer>button[data-action=\"save\"]');\n                    console.log(sum);\n                    var mform = document.querySelector('.mform');\n                    const inputs = mform.querySelectorAll('input');\n                    if (!isNaN(sum)) {\n                        if (sum <= allowed_questions) {\n                            let formdata = $('form').serializeArray();\n                            var data = JSON.stringify(formdata);\n                            $.ajax({\n                                url: cfg.wwwroot+'/local/questionbank/process.php',\n                                type: 'POST',\n                                data: {jsonformdata: data},\n                                success:function(response){\n                                    var resp = JSON.parse(response);\n                                    console.log(resp);\n                                    if (resp.status == true) {\n                                        window.location.reload();\n                                    }else{\n                                        HomePage.confirmbox(getString('somethingwentwrong', 'local_questionbank'));\n                                    }\n                                }\n                            });\n                        }else{\n                            inputs.forEach(input => {\n                                input.classList.add(\"is-invalid\");\n                            });\n                            savebtn.disabled = true;\n                            HomePage.confirmbox(getString('cannotaddmorequestions', 'local_questionbank', allowed_questions));\n                        }\n                    }else{\n                        inputs.forEach(input => {\n                            input.classList.add(\"is-invalid\");\n                        });\n                        savebtn.disabled = true;\n                        HomePage.confirmbox(getString('invalidvalue', 'local_questionbank'));\n                    }\n                }else{\n                    HomePage.confirmbox(getString('questionnum_cannotbenull', 'local_questionbank'));\n                }\n            });\n            var savebtn = document.querySelector('div.modal-footer>button[data-action=\"save\"]');\n            console.log(savebtn);\n            savebtn.disabled = true;\n        }\n        // Bulk Question Status Update\n        let bulkchangestatus  = e.target.closest(Selectors.actions.bulkchangestatus);\n        let questionselected = [];\n        if (bulkchangestatus) {\n            bulkchangestatus.disabled = true;\n            const selectedquestions = document.querySelectorAll('input[type=\"checkbox\"]');\n            selectedquestions.forEach(function(checkbox) {\n                if (checkbox.checked) {\n                    let questionid = parseInt(checkbox.value)\n                    if (questionid) {\n                        questionselected.push(questionid);\n                    }\n                }\n            });\n            let params = {};\n            // console.log (questionselected);\n            if (questionselected.length !== 0) {\n                status = $('#bulkquestion_statusupdate').val();\n                if (status == '') {\n                    bulkchangestatus.disabled = false;\n                    HomePage.confirmbox(getString('no_status_selected', 'local_questionbank'));\n                }else{\n                    bulkchangestatus.disabled = true;\n                    params.questionids = questionselected.join(',');\n                    params.wid = bulkchangestatus.getAttribute('data-wid');\n                    params.status = status;\n                    // var params\n                    var promise = Ajax.call([{\n                                            methodname: 'local_bulk_update_question_status',\n                                            args: params,\n                                        }]);\n                    promise[0].done(function(resp) {\n                        window.location.reload();\n                    }).fail(function() {\n                        bulkchangestatus.disabled = false;\n                        // do something with the exception\n                         //console.log('exception');\n                    });\n                }\n            }else{\n                bulkchangestatus.disabled = false;\n                HomePage.confirmbox(getString('noquestion_selected', 'local_questionbank'));\n            }\n        }\n        let assignopicstocourse  = e.target.closest(Selectors.actions.assignopicstocourse);\n        if (assignopicstocourse) {\n            e.preventDefault();\n            const title = getString('assignopicstocourse', 'local_questionbank', assignopicstocourse.getAttribute('data-name'));\n            const form = new ModalForm({\n                formClass: 'local_questionbank\\\\form\\\\topicsform',\n                args: {questionbankid: assignopicstocourse.getAttribute('data-id')},\n                modalConfig: {title},\n                returnFocus: assignopicstocourse,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let viewtopics  = e.target.closest(Selectors.actions.viewtopics);\n        if (viewtopics) {\n            e.preventDefault();\n            const questionid = viewtopics.getAttribute('data-id');\n            const workshopid = viewtopics.getAttribute('data-workshop');\n            const questionname = viewtopics.getAttribute('data-name');\n            var params = {};\n            params.workshopid = workshopid;\n            params.questionid = questionid;\n            params.questionname = questionname;\n            \n            var promise = Ajax.call([{\n                methodname: 'local_questionbank_displaytopics',\n                args: params\n            }]);\n            promise[0].done(function(resp) {\n                ModalFactory.create({\n                     title:  getString('targettopic', 'local_questionbank', viewtopics.getAttribute('data-name')),\n                    type: ModalFactory.types.DEFAULT,\n                    body: resp.options,\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.show();\n                }.bind(this));\n            }).fail(function() {\n                // do something with the exception\n                 //console.log('exception');\n            });\n            //const title = getString('targettopic', 'local_questionbank', viewtopics.getAttribute('data-name'));\n          \n        }\n\n        let viewexperts = e.target.closest(Selectors.actions.viewexperts);\n        if (viewexperts) {\n            const workshopid = viewexperts.getAttribute('data-id');\n            const availableseats = viewexperts.getAttribute('data-seats');\n            const workshopname = viewexperts.getAttribute('data-name');\n            const qbstatus = viewexperts.getAttribute('data-qbstatus');\n            var options = {};\n            options.workshopid = workshopid;\n            options.availableseats = availableseats;\n            options.qbstatus = qbstatus;\n            var trigger = $(Selectors.actions.viewexperts);\n            ModalFactory.create({\n                title: getString('experts', 'local_questionbank'),\n                body: Templates.render('local_questionbank/viewexperts',options)\n            }, trigger)\n            .done(function(modal) {\n                modal.show();\n                modal.setLarge(true);\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    modal.destroy();\n                }.bind(this));\n            });\n        }\n        let mapcompetencies = e.target.closest(Selectors.actions.mapcompetencies);\n        if (mapcompetencies) {\n            e.preventDefault();\n            const title = getString('mapcompetencies', 'local_trainingprogram');\n            const form = new ModalForm({\n                formClass: 'local_questionbank\\\\form\\\\competencieslistform',\n                args: {id: mapcompetencies.getAttribute('data-id')},\n                modalConfig: {title},\n                returnFocus: mapcompetencies,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let viewcompetencies = e.target.closest(Selectors.actions.viewcompetencies);\n        if (viewcompetencies) {\n           const workshopid = viewcompetencies.getAttribute('data-id');\n            var options = {};\n            options.workshopid = workshopid;\n            var trigger = $(Selectors.actions.viewcompetencies);\n            ModalFactory.create({\n                title: getString('viewcompetencies', 'local_questionbank'),\n                body: Templates.render('local_questionbank/competencies_display',options)\n            }, trigger)\n            .done(function(modal) {\n                modal.setLarge();\n                modal.show();\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                modal.destroy();\n                }.bind(this));\n            });\n        }\n        let deletecompetency = e.target.closest(Selectors.actions.deletecompetency);\n        if (deletecompetency) {\n            const competencyid = deletecompetency.getAttribute('data-id');\n            const wid = deletecompetency.getAttribute('data-wid');\n            const competencyname = deletecompetency.getAttribute('data-name');\n            ModalFactory.create({\n                title: getString('unassigncompetency', 'local_questionbank'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deletecompetencyconfirm', 'local_questionbank',competencyname)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('unassign', 'local_questionbank'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.competencyid = competencyid;\n                    params.wid = wid;\n                    params.competencyname = competencyname;\n                    var promise = Ajax.call([{\n                        methodname: 'local_questionbank_deletecompetency',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        //console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let deletecourse = e.target.closest(Selectors.actions.deletecourse);\n        if (deletecourse) {\n            const courseid = deletecourse.getAttribute('data-id');\n            const wid = deletecourse.getAttribute('data-wid');\n            const coursename = deletecourse.getAttribute('data-name');\n\n            ModalFactory.create({\n                title: getString('unassigncourse', 'local_questionbank'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deletecourseconfirm', 'local_questionbank',coursename)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('unassign', 'local_questionbank'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.courseid = courseid;\n                    params.wid = wid;\n                    params.coursename = coursename;\n                    var promise = Ajax.call([{\n                        methodname: 'local_questionbank_deletecourse',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        //console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n         let changestatus = e.target.closest(Selectors.actions.changestatus);\n\n        if (changestatus) {\n\n            e.preventDefault();\n            const questionid = changestatus.getAttribute('data-id');\n            const status  = $('#status'+questionid).val(); \n            const hidestatus  = changestatus.getAttribute('data-hidestatus');    \n            const statusText = $('#status'+questionid+' option:selected').text();  \n            // const qstatus = changestatus.getAttribute('data-status');\n            const workshopid = changestatus.getAttribute('data-wid');\n            var params = {};\n                    params.questionid = questionid;\n                    params.workshopid = workshopid;\n                    params.status = status;\n                    var promise = Ajax.call([{\n                        methodname: 'local_questionbank_changestatus',\n                        args: params\n                    }]);\n                    promise[0].done(function(res) {\n                        $('.questioncreation_page #status_span'+questionid).text(statusText);\n                        if(statusText == 'Publish' && hidestatus !=1){\n                           $('.questioncreation_page #status_change'+questionid).hide();\n                        }\n                        if(statusText == 'Publish'){\n                            $('.questioncreation_page #assignreviewerto'+questionid).hide();\n                        }\n                        HomePage.confirmbox(getString('questionstatus', 'local_questionbank', statusText));\n\n                    }).fail(function() {\n                        //console.log('exception');\n                    });\n            // const title = getString('assignopicstocourse', 'local_questionbank');\n            // const form = new ModalForm({\n            //     formClass: 'local_questionbank\\\\form\\\\createquestion',\n            //     args: {questionbankid: changestatus.getAttribute('data-wid'),questionid: changestatus.getAttribute('data-qid')},\n            //     modalConfig: {title},\n            //     returnFocus: changestatus,\n            // });\n            // form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            // form.show();\n        }\n        let assignreviewer = e.target.closest(Selectors.actions.assignreviewer);\n        if (assignreviewer) {\n\n            e.preventDefault();\n            const questionid = assignreviewer.getAttribute('data-id');\n  \n            const reviewerid  = $('#reviewer'+questionid).val(); \n            const dropdown = document.getElementById('reviewer'+questionid);\n            const reviewername = dropdown.options[dropdown.selectedIndex].text;\n            const qstatus = assignreviewer.getAttribute('data-status');\n            const workshopid = assignreviewer.getAttribute('data-wid');\n            var params = {};\n                params.reviewerid = reviewerid;\n                params.questionid = questionid;\n                params.workshopid = workshopid;\n                var promise = Ajax.call([{\n                    methodname: 'local_questionbank_assignreviewer',\n                    args: params\n                }]);\n                promise[0].done(function(response) {\n                    var dropdown = document.querySelector('#reviewer'+params.questionid);\n                    // Remove all existing options\n                    dropdown.options = [];\n                    // Append the new option to the dropdown\n                    dropdown.innerHTML = response.options;\n                    $('.questioncreation_page #reviewer_span'+questionid).text(reviewername);\n                    HomePage.confirmbox(getString('reviewerinfo', 'local_questionbank', reviewername));\n                    // window.location.reload(true);\n                }).fail(function() {\n                    //console.log('exception');\n                });\n        }\n        let movetoprodquestionbank  = e.target.closest(Selectors.actions.movetoprodquestionbank);\n        if (movetoprodquestionbank) {\n            e.preventDefault();\n            const title = getString('moveqcategory', 'local_questionbank');\n            const form = new ModalForm({\n                formClass: 'local_questionbank\\\\form\\\\questioncategoryform',\n                args: {workshopid: movetoprodquestionbank.getAttribute('data-id'),\n                       qcategoryid: movetoprodquestionbank.getAttribute('data-qcat')},\n                modalConfig: {title},\n                returnFocus: movetoprodquestionbank,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let qtypeform = document.getElementById('chooserform');\n        if (qtypeform) {\n            qtypeform.action = M.cfg.wwwroot+\"/local/questionbank/editquestion.php\";\n        }\n    });\n    /**\n     * This set of code is written to prevent experts to change the settings of any question.\n     * \n     */\n    // ************** List of elements to be hidden from an expert ********************\n    \n    let currentuserrole = document.querySelector('#currentuserrole');\n    let id_updatecategory = document.querySelector('#id_updatecategory');\n    let fitem_id_defaultmark = document.querySelector('#fitem_id_defaultmark');\n    let fitem_id_generalfeedback = document.querySelector('#fitem_id_generalfeedback');\n    let fitem_id_idnumber = document.querySelector('#fitem_id_idnumber');\n    let categoryfield = document.querySelector('#fitem_id_category');\n    let fitem_id_usecase = document.querySelector('#fitem_id_usecase');\n    let fitem_id_single = document.querySelector('#fitem_id_single');\n    let fitem_id_answernumbering = document.querySelector('#fitem_id_answernumbering');\n    let fitem_id_showstandardinstruction = document.querySelector('#fitem_id_showstandardinstruction');\n    var checkbox = document.querySelector(\"#id_generalheadercontainer > div:nth-child(9) > div.col-md-9.checkbox\");\n    let fgroup_id_currentgrp = document.querySelector('#fgroup_id_currentgrp');\n    let fitem_id_categorymoveto = document.querySelector('#fitem_id_categorymoveto');\n    \n    if (currentuserrole.innerText == 'expert') {\n        if (categoryfield) {\n            categoryfield.style = 'display:none';\n        }\n        if (id_updatecategory) {\n            id_updatecategory.style = 'display:none';\n        }\n        if (fitem_id_defaultmark) {\n            fitem_id_defaultmark.style = 'display:none';\n        }\n        if (fitem_id_generalfeedback) {\n            fitem_id_generalfeedback.style = 'display:none';\n        }\n        if (fitem_id_idnumber) {\n            fitem_id_idnumber.style = 'display:none';\n        }\n        if (fitem_id_usecase) {\n            fitem_id_usecase.style = 'display:none';\n        }\n        if (fitem_id_single) {\n            fitem_id_single.style = 'display:none';\n        }\n        if (fitem_id_answernumbering) {\n            fitem_id_answernumbering.style = 'display:none';\n        }\n        if (fitem_id_showstandardinstruction) {\n            fitem_id_showstandardinstruction.style = 'display:none';\n        }\n        if (fitem_id_usecase) {\n            fitem_id_usecase.style = 'display:none';\n        }\n        if (checkbox) {\n           checkbox.style.display = \"none\";\n        }\n        if (fgroup_id_currentgrp) {\n            fgroup_id_currentgrp.style = 'display:none';\n        }\n        if (fitem_id_categorymoveto) {\n            fitem_id_categorymoveto.style = 'display:none';\n        }\n        let settings = document.querySelectorAll('fieldset');\n        settings.forEach(function(fieldset){\n\n            if(fieldset.id !== 'id_generalheader'){\n                if ( fieldset.id!== 'id_answerhdr') {\n                    var classes = fieldset.attributes['class'].nodeValue;\n                    console.log(classes);\n                    var classes_array = classes.split(\" \");\n                    if(classes_array[0] == 'clearfix'){\n                        fieldset.style = 'display:none';\n                    }\n                }\n            }\n        }); \n    }\n};\n"],"names":["HomePage","homepage","Selectors","deletequestionbank","viewquestiontopics","viewexperts","viewcompetencies","deletecompetency","deletecourse","assignexpert","unassignexpert","mapcompetencies","assignopicstocourse","unassigntopic","changestatus","assignreviewer","programtabs","movetoprodquestionbank","viewtopics","selectedcourses","bulkchangestatus","submit","selectedexperts","cancelbtn","document","addEventListener","e","target","closest","workshopid","getAttribute","workshopname","create","title","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","preventDefault","params","Ajax","call","methodname","args","window","location","reload","fail","bind","this","show","promise","resp","DEFAULT","options","setLarge","questionbankid","topicid","username","form","ModalForm","formClass","modalConfig","returnFocus","events","FORM_SUBMITTED","spanElements","querySelectorAll","allowed_questions","val","sum","emptyinput","Array","from","forEach","span","dataValue","parseInt","isNaN","tagName","savebtn","querySelector","console","log","inputs","input","classList","add","disabled","confirmbox","formdata","serializeArray","data","JSON","stringify","ajax","url","cfg","wwwroot","jsonformdata","success","response","parse","status","questionselected","checkbox","checked","questionid","value","push","length","questionids","join","wid","questionname","availableseats","qbstatus","trigger","Templates","render","hidden","destroy","id","competencyid","competencyname","courseid","coursename","hidestatus","statusText","text","res","hide","reviewerid","dropdown","getElementById","reviewername","selectedIndex","innerHTML","qcategoryid","qtypeform","action","M","currentuserrole","id_updatecategory","fitem_id_defaultmark","fitem_id_generalfeedback","fitem_id_idnumber","categoryfield","fitem_id_usecase","fitem_id_single","fitem_id_answernumbering","fitem_id_showstandardinstruction","fgroup_id_currentgrp","fitem_id_categorymoveto","innerText","style","display","fieldset","classes","attributes","nodeValue","split"],"mappings":"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"}