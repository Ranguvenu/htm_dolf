{"version":3,"file":"form_selector_datasource.min.js","sources":["../src/form_selector_datasource.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n\n    return /** @alias module:tool_lpmigrate/frameworks_datasource */ {\n\n        /**\n         * Process the results for auto complete elements.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {Array} results An array or results.\n         * @return {Array} New array of results.\n         */\n        processResults: function(selector, results) {\n            var options = [];\n\n            $.each(results.data, function(index, response) {\n                options.push({\n                    value: response.id,\n                    label: response.fullname\n                });\n            });\n            return options;\n        },\n\n        /**\n         * Source of data for Ajax element.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {String} query The query string.\n         * @param {Function} callback A callback function receiving an array of results.\n         */\n        /* eslint-disable promise/no-callback-in-promise */\n        transport: function(selector, query, callback) {\n            var el = $(selector),\n            orgid = 0, trackid = 0,\n            type = el.data('type');\n            switch(type){\n                case 'orglist':\n                    orgid = el.data('orgid');\n                    break;\n                case 'competency':\n                    orgid = el.data('comp');\n                    break;\n                case 'examlist':\n                    orgid = el.data('examid');\n                    trackid = el.data('trackid');\n                    break;\n                case 'programlist':\n                    orgid = el.data('orgid');\n                    trackid = el.data('trackid');\n                    break;\n            }\n            Ajax.call([{\n                methodname: 'local_learningtracks_form_selector',\n                args: {query:query,type: type, orgid: orgid,trackid:trackid}\n            }])[0].then(callback).catch(Notification.exception);\n        }\n    };\n\n});\n"],"names":["define","$","Ajax","Notification","processResults","selector","results","options","each","data","index","response","push","value","id","label","fullname","transport","query","callback","el","orgid","trackid","type","call","methodname","args","then","catch","exception"],"mappings":"AAgBAA,uDAAO,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,oBAEF,CAS7DC,eAAgB,SAASC,SAAUC,aAC3BC,QAAU,UAEdN,EAAEO,KAAKF,QAAQG,MAAM,SAASC,MAAOC,UACjCJ,QAAQK,KAAK,CACTC,MAAOF,SAASG,GAChBC,MAAOJ,SAASK,cAGjBT,SAWXU,UAAW,SAASZ,SAAUa,MAAOC,cAC7BC,GAAKnB,EAAEI,UACXgB,MAAQ,EAAGC,QAAU,EACrBC,KAAOH,GAAGX,KAAK,eACRc,UACE,UACDF,MAAQD,GAAGX,KAAK,mBAEf,aACDY,MAAQD,GAAGX,KAAK,kBAEf,WACDY,MAAQD,GAAGX,KAAK,UAChBa,QAAUF,GAAGX,KAAK,qBAEjB,cACDY,MAAQD,GAAGX,KAAK,SAChBa,QAAUF,GAAGX,KAAK,WAG1BP,KAAKsB,KAAK,CAAC,CACPC,WAAY,qCACZC,KAAM,CAACR,MAAMA,MAAMK,KAAMA,KAAMF,MAAOA,MAAMC,QAAQA,YACpD,GAAGK,KAAKR,UAAUS,MAAMzB,aAAa0B"}
