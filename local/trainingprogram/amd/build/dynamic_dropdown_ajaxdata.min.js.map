{"version":3,"file":"dynamic_dropdown_ajaxdata.min.js","sources":["../src/dynamic_dropdown_ajaxdata.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module dynamic_dropdown_ajaxdata\n *\n * @module     local_trainingprogram/dynamic_dropdown_ajaxdata\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'], function($, Ajax, Notification, Str) {\n\n    return /** @alias module:tool_lpmigrate/frameworks_datasource */ {\n        /**\n         * Process the results for auto complete elements.\n         * @param {String} selector The selector of the auto complete element.\n         * @param {Array} results An array or results.\n         * @return {Array} New array of results.\n         */\n        processResults: function(selector, results) {\n            var options = [];\n\n            $.each(results.data, function(index, response) {\n                options.push({\n                    value: response.id,\n                    label: response.fullname\n                });\n            });\n            return options;\n        },\n        /**\n         * Source of data for Ajax element.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {String} query The query string.\n         * @param {Function} callback A callback function receiving an array of results.\n         */\n        /* eslint-disable promise/no-callback-in-promise */\n        transport: function(selector, query, callback) {\n            var el = $(selector),\n            ctype = 0;\n            programid = 0;\n            offeringid = 0;\n            type = el.data('type');\n            levels = 0;\n            sectors = 0;\n            switch(type){\n                case 'program_competencylevel':\n                    if($(\"select[name='ctype[]']\").val() === undefined ) {\n                        ctype = el.attr('data-ctype');\n                        levels = $(\"select[name='clevels']\").val();\n                    } else {\n                        var ctype = $(\"select[name='ctype[]']  option:selected\").map(function() {\n                            return $(this).val();\n                        }).get().join(',');\n                        levels = $(\"select[name='clevels']\").val();\n                    }\n                    ctype = JSON.stringify(ctype);\n                    programid = el.data('programid');\n                    offeringid = el.data('offeringid');\n                    sectors = sectors;\n                    levels = levels;\n                break;\n                case 'programusers':\n                    ctype = el.data('ctype');\n                    programid = el.data('programid');\n                    offeringid = el.data('offeringid');\n                break;\n                case 'orgofficial':\n                    ctype = el.data('ctype');\n                    programid = $(\"select[name='organization']\").val();\n                    offeringid = el.data('offeringid');\n                break;\n\n                case 'officials':\n                    ctype = el.data('ctype');\n                    programid = el.data('programid');\n                    offeringid = el.data('offeringid');\n                break;\n\n                case 'loginasusers':\n                    ctype = el.data('ctype');\n                    programid = el.data('programid');\n                    offeringid = el.data('offeringid');\n                break;\n                \n                case 'program_competency':\n                    if($(\"select[name='clevels']\").val() === undefined ) {\n                        levels = $(\"select[name='clevels']\").val();\n                    } else {\n                        levels = $(\"select[name='clevels']\").val();\n                    }\n                    levels = levels;\n                break;\n                case 'levels':\n                break;  \n                case 'allentities':\n                    ctype = el.data('ctype');\n                    programid = el.data('programid');\n                    offeringid = el.data('offeringid');\n                break;          \n            }\n            console.log(programid);\n            Ajax.call([{\n                methodname: 'local_trainingprogram_ajaxdatalist',\n                args: {query:query,type: type,ctype: ctype, programid: programid, offeringid: offeringid, sectors: sectors, level: levels}\n            }])[0].then(callback).catch(Notification.exception);\n        },\n\n        organizationchanged: function() {\n            $(\"select[name='orgofficial'] option:selected\").prop('selected', false);\n            $(\"select[name='orgofficial']\").parent().find('.badge-info').html('');\n     \n        },\n        sectorschanged: function() {\n\n            $(\"select[name='segment'] option:selected\").prop('selected', false);\n            $(\"select[name='segment']\").parent().find('.badge-info').html('');\n\n            $(\"select[name='segment[]'] option:selected\").prop('selected', false);\n            $(\"select[name='segment[]']\").parent().find('.badge-info').html('');\n\n            $(\"select[name='targetgroup[]'] option:selected\").prop('selected', false);\n            $(\"select[name='targetgroup[]']\").parent().find('.badge-info').html('');            \n\n            var segment = Str.get_string('segment', 'local_trainingprogram');\n            segment.then(function(title) {\n                $(\"select[name='segment']\").parent().find('.badge-info').html(title);\n            });\n\n            $(\"select[name='jobfamily'] option:selected\").prop('selected', false);\n            $(\"select[name='jobfamily']\").parent().find('.badge-info').html('');\n\n            var jobfamily = Str.get_string('jobfamily', 'local_trainingprogram');\n            jobfamily.then(function(title) {\n                $(\"select[name='jobfamily']\").parent().find('.badge-info').html(title);\n            });\n\n            $(\"select[name='jobrole'] option:selected\").prop('selected', false);\n            $(\"select[name='jobrole']\").parent().find('.badge-info').html('');\n            \n            var jobrole = Str.get_string('jobrole', 'local_trainingprogram');\n            jobrole.then(function(title) {\n                $(\"select[name='jobrole']\").parent().find('.badge-info').html(title);\n            });\n\n            $(\"select[name='segments[]'] option:selected\").prop('selected', false);\n            $(\"select[name='segments[]']\").parent().find('.badge-info').html('');\n\n            $(\"input[name='alltargetgroup\").prop(\"checked\", false);\n\n\n            /***** FA-53 ************************************** */\n            var dropdown = document.getElementById(\"program_sectors\");\n            var selectedValues = [];\n            var promise;\n            var selectedSector;\n            var is_already_added;\n            if(dropdown) {\n                for (var i = 0; i < dropdown.options.length; i++) {\n                    if (dropdown.options[i].selected) {\n                        selectedSector = dropdown.options[i].value;\n                        is_already_added = document.querySelector('.newjobfamilyoptions_'+selectedSector);\n                        if (!is_already_added) {\n                            promise = Ajax.call([{\n                                methodname: 'local_trainingprogram_newjobfamily_options',\n                                args: {sector_id: selectedSector}\n                            }]);\n                            promise[0].done(function(resp) {\n                                $('.newjobfamilyoption').append(resp.str);\n                            }).fail(function(exception) {\n                                console.log(exception);\n                            });\n                        }\n                    }\n                }\n            }\n            /******************************************* */\n        },\n\n        clevels: function() {\n\n            $(\"select[name='ctype[]'] option:selected\").prop('selected', false);\n            $(\"select[name='ctype[]']\").parent().find('.badge-info').html('');\n\n            $(\"select[name='competencylevel[]'] option:selected\").prop('selected', false);\n            $(\"select[name='competencylevel[]']\").parent().find('.badge-info').html('');\n\n        },\n\n        ctype: function() {\n\n            var level = $(\"select[name='clevels']\").val();\n            var competencies = $(\"select[name='competencylevel[]']\").find(\"option\").map(function() { return this.value; }).get().join(',');\n            var ctypes = $(\"select[name='ctype[]']\").map(function() {\n                return $(this).val();\n            }).get().join(',');\n\n            var promise = Ajax.call([{\n                methodname: 'local_trainingprogram_competencies',\n                args: {level:level, ctypes:ctypes, competencies: competencies}\n            }]);\n\n            promise[0].done(function(resp) {\n                resp.forEach(myFunction);\n                function myFunction(item, index) {                \n                    $(\"select[name='competencylevel[]'] option[value='\"+ item.id +\"']\").prop('selected', false);\n                    $(\"select[name='competencylevel[]']\").parent().find('.form-autocomplete-selection').find('span[data-value=\"'+ item.id +'\"]').remove();\n                }\n            }).fail(function() {\n                // do something with the exception\n                 console.log('exception');\n            });\n\n        },\n\n        segmentschanged: function() {\n            \n            $(\"select[name='jobfamily'] option:selected\").prop('selected', false);\n            $(\"select[name='jobfamily']\").parent().find('.badge-info').html('');\n\n            var jobfamily = Str.get_string('jobfamily', 'local_trainingprogram');\n            jobfamily.then(function(title) {\n                $(\"select[name='jobfamily']\").parent().find('.badge-info').html(title);\n            });\n\n            $(\"select[name='jobrole'] option:selected\").prop('selected', false);\n            $(\"select[name='jobrole']\").parent().find('.badge-info').html('');\n\n            var jobrole = Str.get_string('jobrole', 'local_trainingprogram');\n            jobrole.then(function(title) {\n                $(\"select[name='jobrole']\").parent().find('.badge-info').html(title);\n            });\n\n        },\n\n        jfamilychanged: function() {\n\n            $(\"select[name='jobrole'] option:selected\").prop('selected', false);\n            $(\"select[name='jobrole']\").parent().find('.badge-info').html('');\n        \n            var jobrole = Str.get_string('jobrole', 'local_trainingprogram');\n            jobrole.then(function(title) {\n                $(\"select[name='jobrole']\").parent().find('.badge-info').html(title);\n            });\n\n        }\n\n    };\n});\n"],"names":["define","$","Ajax","Notification","Str","processResults","selector","results","options","each","data","index","response","push","value","id","label","fullname","transport","query","callback","el","ctype","programid","offeringid","type","levels","sectors","undefined","val","attr","map","this","get","join","JSON","stringify","console","log","call","methodname","args","level","then","catch","exception","organizationchanged","prop","parent","find","html","sectorschanged","get_string","title","selectedSector","dropdown","document","getElementById","i","length","selected","querySelector","sector_id","done","resp","append","str","fail","clevels","competencies","ctypes","forEach","item","remove","segmentschanged","jfamilychanged"],"mappings":"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"}