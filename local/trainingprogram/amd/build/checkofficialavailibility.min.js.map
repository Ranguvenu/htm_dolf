{"version":3,"file":"checkofficialavailibility.min.js","sources":["../src/checkofficialavailibility.js"],"sourcesContent":["\n/**\n * @module     local_questionbank\n * @copyright  Moodle India\n * @author \t   Ikram Ahmad (ikram.ahmad@moodle.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Ajax from 'core/ajax';\nimport cfg from 'core/config';\nimport {get_string as getString} from 'core/str';\nimport $ from 'jquery';\nimport Notification from 'core/notification';\n\n\nexport const CheckForOfficialAvailableSlot = (element) => {\n\tvar err = getString('error');\n\tvar msg = getString('dateunchecked', 'local_trainingprogram');\n\tvar ok = getString('ok');\n\tvar startdate = document.querySelector('[name=\"startdate[enabled]\"]');\n\tvar enddate = document.querySelector('[name=\"enddate[enabled]\"]');\n\tvar savebtn = document.querySelector('div.modal-footer>button[data-action=\"save\"]');\n\t\n\t// Selected User\n\tvar ele = document.getElementById(element);\n\tvar officialId = ele.value;\n\tif (!isNaN(officialId)) {\n\t\tsavebtn.disabled = true;\n\t\tvar officialName = ele.options[ele.selectedIndex].text;;\n\t\tvar trainingid = document.querySelector('[name=\"trainingid\"]').value;\n\t\t/**\n\t\t * Start date\n\t\t * \n\t\t */\n\t\t// Day\n\t\tvar startday = document.querySelector('[name=\"startdate[day]\"]').value;\n\t\tvar startmonth = document.querySelector('[name=\"startdate[month]\"]').value;\n\t\tvar startyear = document.querySelector('[name=\"startdate[year]\"]').value;\n\t\t/**\n\t\t * Start time\n\t\t * \n\t\t */\n\t\tvar starttimehour = document.querySelector('[name=\"starttime[hours]\"]').value;\n\t\tvar starttimeminute = document.querySelector('[name=\"starttime[minutes]\"]').value;\n\t\t/**\n\t\t * END date\n\t\t * \n\t\t */\n\t\tvar endday = document.querySelector('[name=\"enddate[day]\"]').value;\n\t\tvar endmonth = document.querySelector('[name=\"enddate[month]\"]').value;\n\t\tvar endyear = document.querySelector('[name=\"enddate[year]\"]').value;\n\t\t/**\n\t\t * Start time\n\t\t * \n\t\t */\n\t\tvar endtimehour = document.querySelector('[name=\"endtime[hours]\"]').value;\n\t\tvar endtimeminute = document.querySelector('[name=\"endtime[minutes]\"]').value;\n\t\t/**\n\t\t * Meeting type\n\t\t * \n\t\t */\n\t\tvar meetingtype = document.querySelector('[name=\"meetingtype\"]');\n\t\tvar selectedmeeting = meetingtype.options[meetingtype.selectedIndex].text;\n\n\t\tvar params = {};\n\t\tparams.startday = startday;\n\t\tparams.startmonth = startmonth;\n\t\tparams.startyear = startyear;\n\t\tparams.starttimehrs = starttimehour;\n\t\tparams.starttimemin = starttimeminute;\n\t\tparams.endday = endday;\n\t\tparams.endmonth = endmonth;\n\t\tparams.endyear = endyear;\n\t\tparams.endtimehurs = endtimehour;\n\t\tparams.endtimemin = endtimeminute;\n\t\tparams.officialid = officialId;\n\t\tparams.meetingtype = selectedmeeting;\n\t\tparams.trainingid = trainingid;\n\t\tparams.officialname = officialName;\n\t\tconsole.log(\"Checking if \"+ params.officialname + \"can be assigned to this schedule\");\n\t    var promise = Ajax.call([{\n\t        methodname: 'local_trainingprogram_checkofficial_availibility',\n\t        args: params\n\t    }]);\n\t    promise[0].done(function(resp) {\n\t        // console.log(resp);\n\t        if (resp.status == false) {\n\t\t\t\tconsole.log(\"This Official cannot be assigned to this schedule..!\");\n\t        \tvar title = getString('cannotassign', 'local_trainingprogram');\n\t        \tvar msg = getString('cannotassignofficial', 'local_trainingprogram', resp.official_name);\n\t        \tNotification.alert(title, msg, ok);\n\t        \tsavebtn.disabled = true;\n\t        \tvar ele = document.querySelector('#training-officials');\n\t        \tele.selectedIndex = -1;\n\t        }else{\n\t\t\t\tconsole.log(\"Yes this official can be assgned to this schedule.\");\n\t        \tsavebtn.disabled = false;\n\t        }\n\t    }).fail(function() {\n\t        // do something with the exception\n\t        var ele = document.querySelector('#training-officials');\n\t    \tele.selectedIndex = -1;\n\t         console.log('Something went wrong..!');\n\t    });\n\t}\n}"],"names":["element","ok","savebtn","document","querySelector","ele","getElementById","officialId","value","isNaN","disabled","officialName","options","selectedIndex","text","trainingid","startday","startmonth","startyear","starttimehour","starttimeminute","endday","endmonth","endyear","endtimehour","endtimeminute","meetingtype","selectedmeeting","params","starttimehrs","starttimemin","endtimehurs","endtimemin","officialid","officialname","console","log","Ajax","call","methodname","args","done","resp","status","title","msg","official_name","alert","fail"],"mappings":";;;;;;0TAc6C,SAACA,UACnC,mBAAU,UACV,mBAAU,gBAAiB,6BACjCC,IAAK,mBAAU,MAGfC,SAFYC,SAASC,cAAc,+BACzBD,SAASC,cAAc,6BACvBD,SAASC,cAAc,gDAGjCC,IAAMF,SAASG,eAAeN,SAC9BO,WAAaF,IAAIG,UAChBC,MAAMF,YAAa,CACvBL,QAAQQ,UAAW,MACfC,aAAeN,IAAIO,QAAQP,IAAIQ,eAAeC,KAC9CC,WAAaZ,SAASC,cAAc,uBAAuBI,MAM3DQ,SAAWb,SAASC,cAAc,2BAA2BI,MAC7DS,WAAad,SAASC,cAAc,6BAA6BI,MACjEU,UAAYf,SAASC,cAAc,4BAA4BI,MAK/DW,cAAgBhB,SAASC,cAAc,6BAA6BI,MACpEY,gBAAkBjB,SAASC,cAAc,+BAA+BI,MAKxEa,OAASlB,SAASC,cAAc,yBAAyBI,MACzDc,SAAWnB,SAASC,cAAc,2BAA2BI,MAC7De,QAAUpB,SAASC,cAAc,0BAA0BI,MAK3DgB,YAAcrB,SAASC,cAAc,2BAA2BI,MAChEiB,cAAgBtB,SAASC,cAAc,6BAA6BI,MAKpEkB,YAAcvB,SAASC,cAAc,wBACrCuB,gBAAkBD,YAAYd,QAAQc,YAAYb,eAAeC,KAEjEc,OAAS,GACbA,OAAOZ,SAAWA,SAClBY,OAAOX,WAAaA,WACpBW,OAAOV,UAAYA,UACnBU,OAAOC,aAAeV,cACtBS,OAAOE,aAAeV,gBACtBQ,OAAOP,OAASA,OAChBO,OAAON,SAAWA,SAClBM,OAAOL,QAAUA,QACjBK,OAAOG,YAAcP,YACrBI,OAAOI,WAAaP,cACpBG,OAAOK,WAAa1B,WACpBqB,OAAOF,YAAcC,gBACrBC,OAAOb,WAAaA,WACpBa,OAAOM,aAAevB,aACtBwB,QAAQC,IAAI,eAAgBR,OAAOM,aAAe,oCACjCG,cAAKC,KAAK,CAAC,CACrBC,WAAY,mDACZC,KAAMZ,UAEF,GAAGa,MAAK,SAASC,SAEF,GAAfA,KAAKC,OAAiB,CAC/BR,QAAQC,IAAI,4DACFQ,OAAQ,mBAAU,eAAgB,yBAClCC,KAAM,mBAAU,uBAAwB,wBAAyBH,KAAKI,qCAC7DC,MAAMH,MAAOC,IAAK5C,IAC/BC,QAAQQ,UAAW,EACTP,SAASC,cAAc,uBAC7BS,eAAiB,OAE3BsB,QAAQC,IAAI,sDACNlC,QAAQQ,UAAW,KAErBsC,MAAK,WAEM7C,SAASC,cAAc,uBAChCS,eAAiB,EACjBsB,QAAQC,IAAI"}