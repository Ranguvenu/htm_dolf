{"version":3,"file":"programcancelorreplace.min.js","sources":["../src/programcancelorreplace.js"],"sourcesContent":["import TPDynamicForm from 'local_trainingprogram/dynamicform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport homepage from 'theme_academy/homepage';\nimport Ajax from 'core/ajax';\nimport {get_string as getString} from 'core/str';\n\nconst Selectors = {\n    actions: {\n        \n        replaceprogramuser: '[data-action=\"replaceprogramuser\"]',\n        cancelprogramuser: '[data-action=\"cancelprogramuser\"]',\n    },\n};\n\nlet HomePage = new homepage();\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n\n        let replaceprogramuser = e.target.closest(Selectors.actions.replaceprogramuser);\n        if (replaceprogramuser) {\n            e.preventDefault();\n            e.stopImmediatePropagation()\n            const programid = replaceprogramuser.getAttribute('data-programid');\n            const offeringid = replaceprogramuser.getAttribute('data-offeringid');\n            const userid = replaceprogramuser.getAttribute('data-userid');\n            const username = replaceprogramuser.getAttribute('data-username');\n            const programname = replaceprogramuser.getAttribute('data-programname');\n            const programprice = replaceprogramuser.getAttribute('data-programprice');\n            const useridnumber = replaceprogramuser.getAttribute('data-useridnumber');\n            const replacementfee = replaceprogramuser.getAttribute('data-replacementfee');\n            const isadmin = replaceprogramuser.getAttribute('data-currentuserisadmin');\n            var displayparams = {};\n            displayparams.programid = programid;\n            displayparams.offeringid = offeringid;\n            displayparams.userid = userid;\n            displayparams.useridnumber = useridnumber;\n            displayparams.username = username;\n            displayparams.programname = programname;\n            displayparams.programprice = programprice;\n            displayparams.isadmin = isadmin;\n            ModalFactory.create({\n                title: getString('replaceconfirm', 'local_trainingprogram'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('replaceconfirmmessage', 'local_trainingprogram', displayparams)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('replace', 'local_trainingprogram'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    if(programprice == 0 || isadmin == 1) {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                        modal.hide();\n                        const title = getString('replaceuser', 'local_trainingprogram');\n                        const form = new TPDynamicForm({\n                            formClass: 'local_trainingprogram\\\\form\\\\replaceuserform',\n                            args: {programid: replaceprogramuser.getAttribute('data-programid'),offeringid: replaceprogramuser.getAttribute('data-offeringid'),userid: replaceprogramuser.getAttribute('data-userid'),username: replaceprogramuser.getAttribute('data-username'),useridnumber: replaceprogramuser.getAttribute('data-useridnumber'),programprice: replaceprogramuser.getAttribute('data-programprice')},\n                            modalConfig: {title},\n                            returnFocus: replaceprogramuser,\n                        });\n                        form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n                        form.show();\n                    } else {\n                        ModalFactory.create({                               \n                            type: ModalFactory.types.SAVE_CANCEL,\n                            body: getString('replacementproceedmessage', 'local_trainingprogram',replacementfee)\n                        }).done(function(modal) {\n                            this.modal = modal;\n                            modal.setSaveButtonText(getString('confirm', 'local_trainingprogram'));\n                            modal.getRoot().on(ModalEvents.save, function(e) {\n                                e.preventDefault();\n                                e.stopImmediatePropagation();\n                                modal.hide();\n                                const title = getString('replaceuser', 'local_trainingprogram');\n                                const form = new TPDynamicForm({\n                                    formClass: 'local_trainingprogram\\\\form\\\\replaceuserform',\n                                    args: {programid: replaceprogramuser.getAttribute('data-programid'),offeringid: replaceprogramuser.getAttribute('data-offeringid'),userid: replaceprogramuser.getAttribute('data-userid'),username: replaceprogramuser.getAttribute('data-username'),useridnumber: replaceprogramuser.getAttribute('data-useridnumber'),programprice: replaceprogramuser.getAttribute('data-programprice'),replacementfee: replaceprogramuser.getAttribute('data-replacementfee')},\n                                    modalConfig: {title},\n                                    returnFocus: replaceprogramuser,\n                                });\n                                form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                    event.preventDefault();\n                                    e.preventDefault();\n                                    let productdata;\n                                    productdata = event.detail;\n                                    var replaceparams = {};\n                                    replaceparams.programid = productdata.programid;\n                                    replaceparams.offeringid = productdata.offeringid;\n                                    replaceparams.productid=productdata.productid;\n                                    replaceparams.fromuserid = productdata.fromuserid;\n                                    replaceparams.touserid = productdata.touserid;\n                                    replaceparams.replacementfee = productdata.replacementfee;\n                                    var promise = Ajax.call([{\n                                        methodname: 'local_trainingprogram_replaceprogramuser',\n                                        args: replaceparams\n                                    }]);\n                                    promise[0].done(function(resp) {\n                                        window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+programid;\n                                    }).fail(function(err) {\n                                        HomePage.confirmbox(err.message);\n                                        //console.log('exception');\n                                    });\n                                });\n                                form.show();\n                            }.bind(this));\n                            \n                            modal.show();\n                        }.bind(this));\n                    } \n                    \n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let cancelprogramuser = e.target.closest(Selectors.actions.cancelprogramuser);\n        if (cancelprogramuser) {\n            e.preventDefault();\n            e.stopImmediatePropagation()\n            const programid = cancelprogramuser.getAttribute('data-programid');\n            const offeringid = cancelprogramuser.getAttribute('data-offeringid');\n            const userid = cancelprogramuser.getAttribute('data-userid');\n            const username = cancelprogramuser.getAttribute('data-username');\n            const programname = cancelprogramuser.getAttribute('data-programname');\n            const programprice = cancelprogramuser.getAttribute('data-programprice'); \n            const remainingdays = cancelprogramuser.getAttribute('data-remainingdays');  \n            const programdate = cancelprogramuser.getAttribute('data-programdate'); \n            const isadmin = cancelprogramuser.getAttribute('data-isadmin');   \n                \n            var displayparams = {};\n            displayparams.programid = programid;\n            displayparams.offeringid = offeringid;\n            displayparams.userid = userid;\n            displayparams.username = username;\n            displayparams.programname = programname;\n            displayparams.programprice = programprice;\n            ModalFactory.create({\n                title: getString('cancelconfirm', 'local_trainingprogram'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('cancelconfirmmessage', 'local_trainingprogram', displayparams)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('yes', 'local_trainingprogram'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    if(programprice == 0) {\n                        params.programid = programid;\n                        params.offeringid = offeringid;\n                        params.userid = userid;\n                        params.programprice = 0;\n                        params.amount = 0;\n                        params.refundamount = 0;\n                        params.newinvoiceamount = 0;\n                        params.productid=0;\n                        params.programdate=programdate;\n                        params.policyconfirm=0;\n                        params.invoicenumber=0;\n                        params.isadmin=isadmin;\n                        params.traineeenrolled=0;\n                        var promise = Ajax.call([{\n                            methodname: 'local_trainingprogram_cancelprogramuser',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                            window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+programid;\n                        }).fail(function(err) {\n                            HomePage.confirmbox(err.message);\n                            //console.log('exception');\n                        });\n                    } else {\n                        var canceldataparams = {};\n                        canceldataparams.programid = programid;\n                        canceldataparams.offeringid = offeringid;\n                        canceldataparams.userid = userid;\n                        canceldataparams.programdate = programdate;\n                        \n                        var promise = Ajax.call([{\n                            methodname: 'local_trainingprogram_getdataforprogramcancellation',\n                            args: canceldataparams\n                        }]);\n                        promise[0].done(function(resp) {\n                            var responsedata = {};\n                            responsedata.amount = resp.amount;\n                            responsedata.refundamount = resp.refundamount;\n                            responsedata.newinvoiceamount = resp.newinvoiceamount;\n                            responsedata.invoicenumber = resp.invoicenumber;\n                            responsedata.productid = resp.productid;\n                            responsedata.orgofficialenrolled = resp.orgofficialenrolled;\n\n                            console.log(resp);\n\n                            if(resp.traineeenrolled == 1 && isadmin == 1) {\n                                const title = getString('reasoncancel', 'local_trainingprogram');\n                                const form = new Modalform({\n                                    formClass: 'local_trainingprogram\\\\form\\\\reasonform',\n                                    args: {entitytype: 'program', entityid: programid, userid: userid, productid: resp.productid},\n                                    modalConfig: {title},\n                                    returnFocus: cancelprogramuser,\n                                });\n                                form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                    const data = event.detail;\n                                    console.log(data.policy);\n                                    if(data.policy > 0) {\n                                        var policyconfirm = 1;\n                                    } else {\n                                        var policyconfirm = 0;\n                                    }\n                                    var cancelprogramuserparams = {};\n                                    cancelprogramuserparams.programid = programid;\n                                    cancelprogramuserparams.offeringid = offeringid;\n                                    cancelprogramuserparams.userid = userid;\n                                    cancelprogramuserparams.programprice = 1;\n                                    cancelprogramuserparams.amount = responsedata.amount;\n                                    cancelprogramuserparams.refundamount = responsedata.refundamount;\n                                    cancelprogramuserparams.newinvoiceamount = 0;\n                                    cancelprogramuserparams.productid=responsedata.productid;\n                                    cancelprogramuserparams.policyconfirm=policyconfirm;\n                                    cancelprogramuserparams.programdate=programdate;\n                                    cancelprogramuserparams.invoicenumber=0;\n                                    cancelprogramuserparams.isadmin=1;\n                                    cancelprogramuserparams.traineeenrolled=1;\n                                    var promise = Ajax.call([{\n                                        methodname: 'local_trainingprogram_cancelprogramuser',\n                                        args: cancelprogramuserparams\n                                    }]);\n                                    promise[0].done(function(resp) {\n                                        window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+programid;\n                                    }).fail(function(err) {\n                                        HomePage.confirmbox(err.message);\n                                        //console.log('exception');\n                                    });\n                                });\n                                form.show();\n                            } else if(resp.traineeenrolled == 1 && isadmin == 0) {\n\n                                var cancelprogramuserparams = {};\n                                cancelprogramuserparams.programid = programid;\n                                cancelprogramuserparams.offeringid = offeringid;\n                                cancelprogramuserparams.userid = userid;\n                                cancelprogramuserparams.programprice = 1;\n                                cancelprogramuserparams.amount = responsedata.amount;\n                                cancelprogramuserparams.refundamount = responsedata.refundamount;\n                                cancelprogramuserparams.newinvoiceamount = 0;\n                                cancelprogramuserparams.productid=responsedata.productid;\n                                cancelprogramuserparams.policyconfirm=1;\n                                cancelprogramuserparams.programdate=programdate;\n                                cancelprogramuserparams.invoicenumber=0;\n                                cancelprogramuserparams.isadmin=0;\n                                cancelprogramuserparams.traineeenrolled=1;\n                                var promise = Ajax.call([{\n                                    methodname: 'local_trainingprogram_cancelprogramuser',\n                                    args: params\n                                }]);\n                                promise[0].done(function(resp) {\n                                    window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+programid;\n                                }).fail(function(err) {\n                                    HomePage.confirmbox(err.message);\n                                    //console.log('exception');\n                                });\n\n\n                            } else if(resp.orgofficialenrolled == 0) {\n\n                                var ceparams = {};\n                                ceparams.programid = programid;\n                                ceparams.offeringid = offeringid;\n                                ceparams.userid = userid;\n                                ceparams.productid=resp.productid;\n                                ceparams.programprice = 1;\n                                ceparams.amount = 0;\n                                ceparams.refundamount = 0;\n                                ceparams.newinvoiceamount =0;\n                                ceparams.programdate=programdate;\n                                ceparams.policyconfirm = 0;\n                                ceparams.invoicenumber=0;\n                                ceparams.isadmin=isadmin;\n                                ceparams.traineeenrolled=0;\n                                var promise = Ajax.call([{\n                                    methodname: 'local_trainingprogram_cancelprogramuser',\n                                    args: ceparams\n                                }]);\n                                promise[0].done(function(resp) {\n                                    window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+programid;\n                                }).fail(function() {\n                                    console.log('exception');\n                                });\n\n                            } else if(resp.invoicenumber <= 0) {\n                                HomePage.confirmbox(getString('nopendinginvoiceavailable', 'local_trainingprogram'));\n                            } else if(resp.newinvoiceamount < 50.00) {\n                                HomePage.confirmbox(getString('invoiceamountcantlower', 'local_trainingprogram'));\n                            } else {\n                                ModalFactory.create({                               \n                                    type: ModalFactory.types.SAVE_CANCEL,\n                                    body: getString('generateinvoiceconfirmation', 'local_trainingprogram',responsedata)\n                                }).done(function(modal) {\n                                    this.modal = modal;\n                                    modal.setSaveButtonText(getString('confirm', 'local_trainingprogram'));\n                                    modal.getRoot().on(ModalEvents.save, function(e) {\n                                        e.preventDefault();\n                                        var ceparams = {};\n                                        ceparams.programid = programid;\n                                        ceparams.offeringid = offeringid;\n                                        ceparams.userid = userid;\n                                        ceparams.productid=resp.productid;\n                                        ceparams.programprice = 1;\n                                        ceparams.amount = resp.amount;\n                                        ceparams.refundamount = resp.refundamount;\n                                        ceparams.newinvoiceamount =resp.newinvoiceamount;\n                                        ceparams.programdate=programdate;\n                                        ceparams.policyconfirm = 0;\n                                        ceparams.invoicenumber=resp.invoicenumber;\n                                        ceparams.isadmin=isadmin;\n                                        ceparams.traineeenrolled=0;\n                                        var promise = Ajax.call([{\n                                            methodname: 'local_trainingprogram_cancelprogramuser',\n                                            args: ceparams\n                                        }]);\n                                        promise[0].done(function(resp) {\n                                            window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+programid;\n                                        }).fail(function() {\n                                            console.log('exception');\n                                        });\n                                    }.bind(this));\n                                    modal.show();\n                                }.bind(this));\n                            }    \n                        }).fail(function(err) {\n                            HomePage.confirmbox(err.message);\n                            //console.log('exception');\n                        });\n                    }\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n    });\n};\n"],"names":["Selectors","replaceprogramuser","cancelprogramuser","HomePage","homepage","document","addEventListener","e","target","closest","preventDefault","stopImmediatePropagation","programid","getAttribute","offeringid","userid","username","programname","programprice","useridnumber","replacementfee","isadmin","displayparams","create","title","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","hide","form","TPDynamicForm","formClass","args","modalConfig","returnFocus","events","FORM_SUBMITTED","window","location","reload","show","event","productdata","detail","replaceparams","productid","fromuserid","touserid","Ajax","call","methodname","resp","M","cfg","wwwroot","fail","err","confirmbox","message","bind","this","programdate","params","amount","refundamount","newinvoiceamount","policyconfirm","invoicenumber","traineeenrolled","canceldataparams","responsedata","orgofficialenrolled","console","log","Modalform","entitytype","entityid","data","policy","cancelprogramuserparams","ceparams"],"mappings":"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"}