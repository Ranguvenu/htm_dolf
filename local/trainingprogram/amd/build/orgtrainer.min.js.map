{"version":3,"file":"orgtrainer.min.js","sources":["../src/orgtrainer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n\n    return /** @alias module:tool_lpmigrate/frameworks_datasource */ {\n\n        /**\n         * Process the results for auto complete elements.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {Array} results An array or results.\n         * @return {Array} New array of results.\n         */\n        processResults: function(selector, results) {\n            var options = [];\n\n            $.each(results.data, function(index, response) {\n                options.push({\n                    value: response.id,\n                    label: response.name\n                });\n            });\n            return options;\n        },\n\n        /**\n         * Source of data for Ajax element.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {String} query The query string.\n         * @param {Function} callback A callback function receiving an array of results.\n         */\n        /* eslint-disable promise/no-callback-in-promise */\n        transport: function(selector, query, callback) {\n            var el = $(selector),\n            sectorid=0,sectorlist=0,programid=0,offeringid=0,\n            type = el.data('el_organization');\n            var id = $(\"select[name='organizations']\").val();   \n            programid = el.data('programid');\n            offeringid = el.data('offeringid');\n            Ajax.call([{\n            methodname: 'local_organization_trainers',\n            args: {organizations:id,programid:programid ,offeringid:offeringid }\n            }])[0].then(callback).catch(Notification.exception);\n       \n        }\n    };\n\n});\n"],"names":["define","$","Ajax","Notification","processResults","selector","results","options","each","data","index","response","push","value","id","label","name","transport","query","callback","programid","offeringid","el","val","call","methodname","args","organizations","then","catch","exception"],"mappings":"AAgBAA,0CAAO,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,oBAEF,CAS7DC,eAAgB,SAASC,SAAUC,aAC3BC,QAAU,UAEdN,EAAEO,KAAKF,QAAQG,MAAM,SAASC,MAAOC,UACjCJ,QAAQK,KAAK,CACTC,MAAOF,SAASG,GAChBC,MAAOJ,SAASK,UAGjBT,SAWXU,UAAW,SAASZ,SAAUa,MAAOC,cAETC,UAAYC,WADhCC,GAAKrB,EAAEI,UAGPS,IADGQ,GAAGb,KAAK,mBACNR,EAAE,gCAAgCsB,OAC3CH,UAAYE,GAAGb,KAAK,aACpBY,WAAaC,GAAGb,KAAK,cACrBP,KAAKsB,KAAK,CAAC,CACXC,WAAY,8BACZC,KAAM,CAACC,cAAcb,GAAGM,UAAUA,UAAWC,WAAWA,eACpD,GAAGO,KAAKT,UAAUU,MAAM1B,aAAa2B"}