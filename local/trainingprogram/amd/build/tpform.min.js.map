{"version":3,"file":"tpform.min.js","sources":["../src/tpform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module tpform\n *\n * @module     local_trainingprogram/tpform\n * @copyright  2023 YOUR NAME <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport TPDynamicForm from 'local_trainingprogram/dynamicform';\nimport {get_string as getString} from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport Ajax from 'core/ajax';\nimport ModalForm from 'core_form/modalform';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport homepage from 'theme_academy/homepage';\n\nconst Selectors = {\n    actions: {\n        editCategory: '[data-action=\"createprogram\"]',\n        deleteprogram: '[data-action=\"deleteprogram\"]',\n        publichprogram: '[data-action=\"publichprogram\"]',\n        trainerassign: '[data-action=\"trainerassign\"]',\n        unassignuser: '[data-action=\"unassignuser\"]',\n        createtrainingtopics: '[data-action=\"createtrainingtopics\"]',\n        deletetrainingtopics: '[data-action=\"deletetrainingtopics\"]',\n        createprogramgoal: '[data-action=\"createprogramgoal\"]',\n        unpublichprogram: '[data-action=\"unpublichprogram\"]',\n       \n    },\n};\n\nrequire(['jquery'], function($) {\n    $(document).ready(function(){\n        $('body').on('change','input[name=\"tporoff\"]',function(){\n            var selected1 =$(\"input[name='tporoff']:checked\").val();\n            if(selected1 == 2){\n            $('input[type=radio][name=\"startdatesort\"][value='+ 3 +']').prop('disabled', true);\n            $('input[type=radio][name=\"startdatesort\"][value='+ 4 +']').prop('disabled', true);\n            }\n            else{\n            $('input[type=radio][name=\"startdatesort\"][value='+ 3 +']').prop('disabled', false);\n            $('input[type=radio][name=\"startdatesort\"][value='+ 4 +']').prop('disabled', false);        \n            }\n          });\n    });\n  });\nlet HomePage = new homepage();\nexport const init = () => {\n\n    document.addEventListener('click', function(e) {\n        let element = e.target.closest(Selectors.actions.editCategory);\n        if (element) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            const title = element.getAttribute('data-id') ?\n                getString('updatetp', 'local_trainingprogram') :\n                getString('createtp', 'local_trainingprogram');\n            const form = new TPDynamicForm({\n                formClass: 'local_trainingprogram\\\\form\\\\trainingprogram',\n                args: {id: element.getAttribute('data-id'),courseid: element.getAttribute('data-courseid')},\n                modalConfig: {title},\n                returnFocus: element,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n\n            form.show();    \n        }\n        let deleteprogram = e.target.closest(Selectors.actions.deleteprogram);\n        if (deleteprogram) {\n            e.preventDefault();\n            const programid = deleteprogram.getAttribute('data-id');\n            const programname = deleteprogram.getAttribute('data-name');\n            const programcode = deleteprogram.getAttribute('data-code');\n            const userroleshortname = deleteprogram.getAttribute('data-userroleshortname');\n            var displayparams = {};\n            displayparams.programname = programname;\n            displayparams.programcode = programcode;\n            ModalFactory.create({\n                title: getString('deleteconfirm', 'local_trainingprogram'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('programdeleteconfirm', 'local_trainingprogram',programname)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('deletetext', 'local_trainingprogram'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    if(userroleshortname == 'to') {\n                        var params = {};\n                        params.rootid = programid;\n                        params.etype = 'program';\n                        var promise = Ajax.call([{\n                            methodname: 'local_trainingprogram_tofficialdeleteaction',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                            if(resp.response == 'success') {\n                                modal.hide();\n                                HomePage.confirmbox(getString('programdeletionwaitingfortsuperviser', 'local_trainingprogram',displayparams));\n                                setTimeout(function() {\n                                    location.reload();\n                                },4000);\n                                  \n                            } else {\n                                modal.hide();\n                                HomePage.confirmbox(resp.response);\n                            }\n                        }).fail(function() {\n                            console.log('exception');\n                        });\n                    } else {\n                        var params = {};\n                        params.programid = programid;\n                        var promise = Ajax.call([{\n                            methodname: 'local_trainingprogram_deleteprogram',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                            window.location.reload(true);\n                        }).fail(function() {\n                            console.log('exception');\n                        });\n                    }\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let publichprogram = e.target.closest(Selectors.actions.publichprogram);\n        if (publichprogram) {\n             e.preventDefault();\n             const programid = publichprogram.getAttribute('data-id');\n             const programname = publichprogram.getAttribute('data-name');\n            ModalFactory.create({\n                title: getString('publishconfirm', 'local_trainingprogram'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('programpublishconfirm', 'local_trainingprogram',programname)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('publishtext', 'local_trainingprogram'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.programid = programid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_trainingprogram_publishprogram',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let unpublichprogram = e.target.closest(Selectors.actions.unpublichprogram);\n        if (unpublichprogram) {\n             e.preventDefault();\n             const programid = unpublichprogram.getAttribute('data-id');\n             const programname = unpublichprogram.getAttribute('data-name');\n            ModalFactory.create({\n                title: getString('unpublishconfirm', 'local_trainingprogram'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('programunpublishconfirm', 'local_trainingprogram',programname)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('unpublishtext', 'local_trainingprogram'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.programid = programid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_trainingprogram_unpublishprogram',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let trainerassign = e.target.closest(Selectors.actions.trainerassign);\n        if (trainerassign) {\n            e.preventDefault();\n            const programname = trainerassign.getAttribute('data-programname');\n            const title = getString('enroltoprogram', 'local_trainingprogram',programname);\n            const form = new ModalForm({\n                formClass: 'local_trainingprogram\\\\form\\\\trainerassignform',\n                args: {\n                    programid: trainerassign.getAttribute('data-programid'),\n                    offeringid: trainerassign.getAttribute('data-offeringid'), \n                    roleid: trainerassign.getAttribute('data-role')\n                },\n                modalConfig: {title},\n                returnFocus: trainerassign,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n\n        let unassignuser = e.target.closest(Selectors.actions.unassignuser);\n        if (unassignuser) {\n             e.preventDefault();\n             const userid = unassignuser.getAttribute('data-id');\n             const programid = unassignuser.getAttribute('data-programid');\n             const roleid = unassignuser.getAttribute('data-roleid');\n             const offeringid = unassignuser.getAttribute('data-offeringid');\n             const rolename = unassignuser.getAttribute('data-rolename');\n             const username = unassignuser.getAttribute('data-username');\n             const coursename = unassignuser.getAttribute('data-coursename');\n               var displayparams = {};\n                displayparams.rolename = rolename;\n                displayparams.username = username;\n                displayparams.coursename = coursename;\n            ModalFactory.create({\n                title: getString('unassignconfirm', 'local_trainingprogram'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('programunassignconfirm', 'local_trainingprogram',displayparams)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('unassigntext', 'local_trainingprogram'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.userid = userid;\n                    params.programid = programid;\n                    params.offeringid = offeringid;\n                    params.roleid = roleid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_trainingprogram_unassignuser',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n\n        let createtrainingtopicselement = e.target.closest(Selectors.actions.createtrainingtopics);\n        if (createtrainingtopicselement) {\n            e.preventDefault();\n            const title = createtrainingtopicselement.getAttribute('data-id') ?\n                getString('updatetrainingtopic', 'local_trainingprogram') :\n                getString('createtrainingtopic', 'local_trainingprogram');\n            const form = new TPDynamicForm({\n                formClass: 'local_trainingprogram\\\\form\\\\trainingtopicsform',\n                args: {id: createtrainingtopicselement.getAttribute('data-id')},\n                modalConfig: {title},\n                returnFocus: createtrainingtopicselement,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n\n            form.show();    \n        }\n\n\n        let deletetrainingtopics = e.target.closest(Selectors.actions.deletetrainingtopics);\n        if (deletetrainingtopics) {\n             e.preventDefault();\n             const id = deletetrainingtopics.getAttribute('data-id');\n             const name = deletetrainingtopics.getAttribute('data-name');\n            ModalFactory.create({\n                title: getString('deleteconfirm', 'local_trainingprogram'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('trainingtopicdeleteconfirm', 'local_trainingprogram',name)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('deletetext', 'local_trainingprogram'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.elementid = id;\n                    params.elementtype = 'trainingtopic';\n                    var promise = Ajax.call([{\n                        methodname: 'local_sector_candeleteelement',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        if(resp.candelete == 1) {\n                            modal.hide();\n                            HomePage.confirmbox(getString('remove_dependency', 'local_sector'));\n                        } else {\n                            var params = {};\n                            params.id = id;\n                            var promise = Ajax.call([{\n                                methodname: 'local_trainingprogram_deletetrainingtopic',\n                                args: params\n                            }]);\n                            promise[0].done(function(resp) {\n                                window.location.reload(true);\n                            }).fail(function() {\n                                console.log('exception');\n                            });\n                        }   \n                    }).fail(function() {\n                        console.log('exception');\n                    });       \n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n\n        createprogramgoal = e.target.closest(Selectors.actions. createprogramgoal);\n        if (createprogramgoal) {\n            \n            e.preventDefault();\n            const title = createprogramgoal.getAttribute('data-id') ?\n                getString('updategoals', 'local_trainingprogram', createprogramgoal.getAttribute('data-name')) :\n                getString('addprogramgoal', 'local_trainingprogram');\n            const form = new ModalForm({\n                formClass: 'local_trainingprogram\\\\form\\\\programgoalsform',\n                args: {id: createprogramgoal.getAttribute('data-id'),programid: createprogramgoal.getAttribute('data-programid')},\n                modalConfig: {title},\n                returnFocus: createprogramgoal,\n            });\n         \n        \n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n\n       \n    });\n};\n"],"names":["Selectors","editCategory","deleteprogram","publichprogram","trainerassign","unassignuser","createtrainingtopics","deletetrainingtopics","createprogramgoal","unpublichprogram","require","$","document","ready","on","val","prop","HomePage","homepage","addEventListener","e","element","target","closest","preventDefault","stopImmediatePropagation","title","getAttribute","form","TPDynamicForm","formClass","args","id","courseid","modalConfig","returnFocus","events","FORM_SUBMITTED","window","location","reload","show","programid","programname","programcode","userroleshortname","displayparams","create","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","ModalEvents","save","params","rootid","etype","Ajax","call","methodname","resp","response","hide","confirmbox","setTimeout","fail","console","log","bind","this","ModalForm","offeringid","roleid","userid","rolename","username","coursename","createtrainingtopicselement","name","elementid","elementtype","candelete"],"mappings":"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"}