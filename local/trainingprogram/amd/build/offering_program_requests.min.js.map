{"version":3,"file":"offering_program_requests.min.js","sources":["../src/offering_program_requests.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module offering_program_requests\n *\n * @module     local_trainingprogram/offering_program_requests\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport homepage from 'theme_academy/homepage';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nconst Selectors = {\n    actions: {\n        add_update_delete_entity: '[data-action=\"add_update_delete_entity\"]',\n        viewcurrentoffering :'[data-action=\"viewcurrentoffering\"]', \n    },\n};\nlet HomePage = new homepage();\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        let add_update_delete_entity = e.target.closest(Selectors.actions.add_update_delete_entity);\n        if (add_update_delete_entity) {\n            e.preventDefault();\n            e.stopImmediatePropagation()\n            const rootid = add_update_delete_entity.getAttribute('data-rootid');\n            const entityid = add_update_delete_entity.getAttribute('data-entityid');\n            const entitycode = add_update_delete_entity.getAttribute('data-code');\n            const etype = add_update_delete_entity.getAttribute('data-entitytype');\n            const requesttype = add_update_delete_entity.getAttribute('data-requesttype');\n            const requestby = add_update_delete_entity.getAttribute('data-requestby')\n            const requestbyname = add_update_delete_entity.getAttribute('data-requestbyname')\n            const actiontype = add_update_delete_entity.getAttribute('data-actiontype')\n            var displayparams = {};\n            displayparams.entitycode = entitycode;\n            displayparams.requestbyname = requestbyname;\n            if(requesttype =='Create') {\n                var headermessage = getString('createofferingconfirm', 'local_trainingprogram');\n                var bodymessage = getString('createofferingconfirmmessage', 'local_trainingprogram', displayparams);\n            } else if(requesttype =='update') {\n                var headermessage = getString('updateofferingconfirm', 'local_trainingprogram');\n                var bodymessage = getString('updateofferingconfirmmessage', 'local_trainingprogram', displayparams);\n            } else {\n                if(etype == 'Offering') {\n                    var headermessage = getString('deleteofferingconfirm', 'local_trainingprogram');\n                    var bodymessage = getString('deleteofferingconfirmmessage', 'local_trainingprogram', displayparams);\n                } else {\n                    var headermessage = getString('deleteprogramconfirm', 'local_trainingprogram');\n                    var bodymessage = getString('deleteprogramconfirmmessage', 'local_trainingprogram', displayparams);\n                }\n            }\n            ModalFactory.create({\n                title: headermessage,\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: bodymessage\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('yes', 'local_trainingprogram'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                        Templates.appendNodeContents('.modal-content', html, js);\n                    });\n                    var params = {};\n                    params.rootid = rootid;\n                    params.entityid = entityid;\n                    params.entitycode = entitycode;\n                    params.etype = etype;\n                    params.requestby = requestby;\n                    params.requesttype = requesttype;\n                    params.actiontype =actiontype;\n                    var promise = Ajax.call([{\n                        methodname: 'local_trainingprogram_offering_program_action',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        if(resp.response == 'success') {\n                            window.location.href = resp.returnurl;\n                        } else {\n                            modal.hide();\n                            HomePage.confirmbox(resp.response);\n                        }\n                    }).fail(function(err) {\n                        HomePage.confirmbox(err.message);\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n\n        let viewcurrentoffering = e.target.closest(Selectors.actions.viewcurrentoffering);\n        if (viewcurrentoffering) {\n            const rootid = viewcurrentoffering.getAttribute('data-rootid');\n            const offeringid = viewcurrentoffering.getAttribute('data-offeringid');\n            const requesttype = viewcurrentoffering.getAttribute('data-requesttype');\n            var params = {};\n            params.rootid = rootid;\n            params.offeringid = offeringid;\n            params.requesttype = requesttype;\n            var promise = Ajax.call([{\n                methodname: 'local_trainingprogram_viewcurrentoffering',\n                args: params\n            }]);\n            promise[0].done(function(resp) {\n                ModalFactory.create({\n                    title: getString('view_offering', 'local_trainingprogram'),\n                    type: ModalFactory.types.DEFAULT,\n                    body: resp.options,\n                }).done(function(modal) {\n                    this.modal = modal;\n                    this.modal.setLarge();\n                    modal.show();\n                }.bind(this));\n            }).fail(function() {\n                // do something with the exception\n                 console.log('exception');\n            });\n        }\n    });\n};\n\n"],"names":["Selectors","add_update_delete_entity","viewcurrentoffering","HomePage","homepage","document","addEventListener","e","target","closest","preventDefault","stopImmediatePropagation","rootid","getAttribute","entityid","entitycode","etype","requesttype","requestby","requestbyname","actiontype","displayparams","headermessage","bodymessage","create","title","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","renderForPromise","then","html","js","appendNodeContents","params","Ajax","call","methodname","args","resp","response","window","location","href","returnurl","hide","confirmbox","fail","err","message","bind","this","show","offeringid","DEFAULT","options","setLarge","console","log"],"mappings":";;;;;;8TA2BMA,kBACO,CACLC,yBAA0B,2CAC1BC,oBAAqB,uCAGzBC,SAAW,IAAIC,gCACC,WAChBC,SAASC,iBAAiB,SAAS,SAASC,OACpCN,yBAA2BM,EAAEC,OAAOC,QAAQT,kBAAkBC,6BAC9DA,yBAA0B,CAC1BM,EAAEG,iBACFH,EAAEI,+BACIC,OAASX,yBAAyBY,aAAa,eAC/CC,SAAWb,yBAAyBY,aAAa,iBACjDE,WAAad,yBAAyBY,aAAa,aACnDG,MAAQf,yBAAyBY,aAAa,mBAC9CI,YAAchB,yBAAyBY,aAAa,oBACpDK,UAAYjB,yBAAyBY,aAAa,kBAClDM,cAAgBlB,yBAAyBY,aAAa,sBACtDO,WAAanB,yBAAyBY,aAAa,mBACrDQ,cAAgB,MACpBA,cAAcN,WAAaA,WAC3BM,cAAcF,cAAgBA,cACb,UAAdF,gBACKK,eAAgB,mBAAU,wBAAyB,yBACnDC,aAAc,mBAAU,+BAAgC,wBAAyBF,oBAClF,GAAiB,UAAdJ,YACFK,eAAgB,mBAAU,wBAAyB,yBACnDC,aAAc,mBAAU,+BAAgC,wBAAyBF,uBAEzE,YAATL,MACKM,eAAgB,mBAAU,wBAAyB,yBACnDC,aAAc,mBAAU,+BAAgC,wBAAyBF,oBAEjFC,eAAgB,mBAAU,uBAAwB,yBAClDC,aAAc,mBAAU,8BAA+B,wBAAyBF,sCAG/EG,OAAO,CAChBC,MAAOH,cACPI,KAAMC,uBAAaC,MAAMC,YACzBC,KAAMP,cACPQ,KAAK,SAASC,YACRA,MAAQA,MACbA,MAAMC,mBAAkB,mBAAU,MAAO,0BACzCD,MAAME,UAAUC,GAAGC,sBAAYC,KAAM,SAAS9B,GAC1CA,EAAEG,oCACQ4B,iBAAiB,sBAAuB,IAAIC,MAAK,mBAAEC,UAAAA,KAAMC,QAAAA,sBACrDC,mBAAmB,iBAAkBF,KAAMC,WAErDE,OAAS,GACbA,OAAO/B,OAASA,OAChB+B,OAAO7B,SAAWA,SAClB6B,OAAO5B,WAAaA,WACpB4B,OAAO3B,MAAQA,MACf2B,OAAOzB,UAAYA,UACnByB,OAAO1B,YAAcA,YACrB0B,OAAOvB,WAAYA,WACLwB,cAAKC,KAAK,CAAC,CACrBC,WAAY,gDACZC,KAAMJ,UAEF,GAAGZ,MAAK,SAASiB,MACD,WAAjBA,KAAKC,SACJC,OAAOC,SAASC,KAAOJ,KAAKK,WAE5BrB,MAAMsB,OACNnD,SAASoD,WAAWP,KAAKC,cAE9BO,MAAK,SAASC,KACbtD,SAASoD,WAAWE,IAAIC,aAE9BC,KAAKC,OACP5B,MAAM6B,QACRF,KAAKC,WAGP1D,oBAAsBK,EAAEC,OAAOC,QAAQT,kBAAkBE,wBACzDA,oBAAqB,KACfU,QAASV,oBAAoBW,aAAa,eAC1CiD,WAAa5D,oBAAoBW,aAAa,mBAC9CI,aAAcf,oBAAoBW,aAAa,oBACjD8B,OAAS,GACbA,OAAO/B,OAASA,QAChB+B,OAAOmB,WAAaA,WACpBnB,OAAO1B,YAAcA,aACP2B,cAAKC,KAAK,CAAC,CACrBC,WAAY,4CACZC,KAAMJ,UAEF,GAAGZ,MAAK,SAASiB,6BACRxB,OAAO,CAChBC,OAAO,mBAAU,gBAAiB,yBAClCC,KAAMC,uBAAaC,MAAMmC,QACzBjC,KAAMkB,KAAKgB,UACZjC,KAAK,SAASC,YACRA,MAAQA,WACRA,MAAMiC,WACXjC,MAAM6B,QACRF,KAAKC,UACRJ,MAAK,WAEHU,QAAQC,IAAI"}