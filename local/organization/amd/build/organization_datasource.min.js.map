{"version":3,"file":"organization_datasource.min.js","sources":["../src/organization_datasource.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n\n    return /** @alias module:tool_lpmigrate/frameworks_datasource */ {\n\n        /**\n         * Process the results for auto complete elements.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {Array} results An array or results.\n         * @return {Array} New array of results.\n         */\n        processResults: function(selector, results) {\n            var options = [];\n\n            $.each(results.data, function(index, response) {\n                options.push({\n                    value: response.id,\n                    label: response.fullname\n                });\n            });\n            return options;\n        },\n\n        /**\n         * Source of data for Ajax element.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {String} query The query string.\n         * @param {Function} callback A callback function receiving an array of results.\n         */\n        /* eslint-disable promise/no-callback-in-promise */\n        transport: function(selector, query, callback) {\n            var el = $(selector),\n            org = null,\n            type = el.data('type');\n            switch(type){\n                case 'orgusers':\n                    org = el.data('org');\n                    break;\n                case 'usersemail':\n                    org = el.data('org');\n                    break; \n                case 'usersidnumber':\n                    org = el.data('org');\n                    break;\n                case 'all_users':\n                    org = el.data('org');\n                break;  \n                case 'organization_list':\n                    org = el.data('org');\n                break;  \n            }\n            Ajax.call([{\n                methodname: 'local_organization_userslist',\n                args: {query:query,type: type, org: org}\n            }])[0].then(callback).catch(Notification.exception);\n        }\n    };\n});\n"],"names":["define","$","Ajax","Notification","processResults","selector","results","options","each","data","index","response","push","value","id","label","fullname","transport","query","callback","el","org","type","call","methodname","args","then","catch","exception"],"mappings":"AAAAA,oDAAO,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,oBAEF,CAS7DC,eAAgB,SAASC,SAAUC,aAC3BC,QAAU,UAEdN,EAAEO,KAAKF,QAAQG,MAAM,SAASC,MAAOC,UACjCJ,QAAQK,KAAK,CACTC,MAAOF,SAASG,GAChBC,MAAOJ,SAASK,cAGjBT,SAWXU,UAAW,SAASZ,SAAUa,MAAOC,cAC7BC,GAAKnB,EAAEI,UACXgB,IAAM,KACNC,KAAOF,GAAGX,KAAK,eACRa,UACE,eAGA,iBAGA,oBAGA,gBAGA,oBACDD,IAAMD,GAAGX,KAAK,OAGtBP,KAAKqB,KAAK,CAAC,CACPC,WAAY,+BACZC,KAAM,CAACP,MAAMA,MAAMI,KAAMA,KAAMD,IAAKA,QACpC,GAAGK,KAAKP,UAAUQ,MAAMxB,aAAayB"}