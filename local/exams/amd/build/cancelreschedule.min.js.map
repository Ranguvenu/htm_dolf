{"version":3,"file":"cancelreschedule.min.js","sources":["../src/cancelreschedule.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport ModalForm from 'local_trainingprogram/dynamicform';\nimport Modalform from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport homepage from 'theme_academy/homepage';\nimport Fragment from 'core/fragment';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport $ from 'jquery';\n\nconst Selectors = {\n    actions: {\n        cancelexam: '[data-action=\"cancelexam\"]',\n        rescheduleexam: '[data-action=\"rescheduleexam\"]',\n        canceluser: '[data-action=\"canceluser\"]',\n        trescheduleexam: '[data-action=\"trescheduleexam\"]',\n    },\n};\nconst render_template = (template, selector, params, append = false) => {\n\tif(!append){\n\t\t$(selector).empty();\n\t}\n\tTemplates.renderForPromise(template, params).then(({html, js}) => {\n\t\tTemplates.appendNodeContents(selector, html, js);\n\t});\t\n}\nlet HomePage = new homepage();\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        // e.stopImmediatePropagation();\n        let cancelexam = e.target.closest(Selectors.actions.cancelexam);\n        if (cancelexam) {\n            e.stopImmediatePropagation();\n            const productid = cancelexam.getAttribute('data-productid');\n            const userid = cancelexam.getAttribute('data-currentuser');\n            const entitytype = cancelexam.getAttribute('data-entitytype');\n            const refundtype = cancelexam.getAttribute('data-refundtype');\n            const ownedby = cancelexam.getAttribute('data-ownedby');\n            \n            ModalFactory.create({\n                title: getString('cancelexam', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('cancelexamconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                        Templates.appendNodeContents('.modal-content', html, js);\n                    });\n                    if(ownedby == 'CISI') {\n                        modal.hide();\n                        HomePage.confirmbox(getString('cannotcancelexam', 'local_exams'));\n                    } else { \n\n                        var parameters = {};\n                        parameters.productid = productid;\n                        parameters.userid = userid;\n                        parameters.entitytype = entitytype;\n                        parameters.refundtype = refundtype;\n                        parameters.policyconfirm = 1;\n                        var promise = Ajax.call([{\n                            methodname: 'local_exams_cancelexamcalc',\n                            args: parameters\n                        }]);\n                        promise[0].done(function(resp) {\n                            var data = {};\n                            data.refundamount = resp.refundamount;\n                            data.deductamount = resp.deductamount;\n                            data.productprice = resp.productprice;\n                            data.isorgofficial = resp.isorgofficial;\n                            console.log(data);\n                            if(resp.isorgofficial == 1) {\n                                if(resp.productprice == 0){\n                                    var ceparams = {};\n                                    ceparams.userid = userid;\n                                    ceparams.productid=productid;\n                                    ceparams.examprice = 1;\n                                    ceparams.amount = resp.productprice;\n                                    ceparams.refundamount = resp.refundamount;\n                                    ceparams.newamount =resp.newamount;\n                                    ceparams.newinvoiceamount =0;\n                                    ceparams.newamount =0;\n                                    ceparams.examdate=resp.examdate;\n                                    ceparams.policyconfirm = 1;\n                                    ceparams.invoicenumber=0;\n                                    ceparams.entitytype=entitytype;\n\n                                    var promise = Ajax.call([{\n                                        methodname: 'local_exams_canceluser',\n                                        args: ceparams\n                                    }]);\n                                    promise[0].done(function(resp) {\n                                        \n                                        if(resp.response == 'success') {\n                                            window.location.href = resp.returnurl;\n                                        } else {\n                                            modal.hide();\n                                            HomePage.confirmbox(resp.response);\n                                        }\n                                    }).fail(function() {\n                                        console.log('exception');\n                                    });\n                                }else if ( resp.newinvoiceamount < 50.00  && resp.seats > 0) {\n                                    HomePage.confirmbox(getString('invoiceamountcantlower', 'local_exams'));\n                                }else if(resp){\n                                    ModalFactory.create({\n                                        title: getString('cancel', 'local_exams'),\n                                        type: ModalFactory.types.SAVE_CANCEL,\n                                        body: getString('traineegenerateinvoiceconfirmation', 'local_exams', resp)\n                                    }).done(function(modal) {\n                                        this.modal = modal;\n                                        modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                        modal.getRoot().on(ModalEvents.save, function(e) {\n                                            e.preventDefault();\n                                            Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                Templates.appendNodeContents('.modal-content', html, js);\n                                            });\n                                            e.stopImmediatePropagation();\n                                            $(e.target).attr('disabled', true);\n                                            var ceparams = {};\n                                            ceparams.userid = userid;\n                                            ceparams.productid=productid;\n                                            ceparams.examprice = 1;\n                                            ceparams.amount = resp.productprice;\n                                            ceparams.refundamount = resp.refundamount;\n                                            ceparams.newinvoiceamount =resp.newinvoiceamount;\n                                            ceparams.newamount =resp.newamount;\n                                            ceparams.examdate=resp.examdate;\n                                            ceparams.policyconfirm = 1;\n                                            ceparams.invoicenumber=resp.invoicenumber;\n                                            ceparams.entitytype=entitytype;\n\n                                            var promise = Ajax.call([{\n                                                methodname: 'local_exams_canceluser',\n                                                args: ceparams\n                                            }]);\n                                            promise[0].done(function(resp) {\n                                                 \n                                                if(resp.response == 'success') {\n                                                    window.location.href = resp.returnurl;\n                                                } else {\n                                                    modal.hide();\n                                                    HomePage.confirmbox(resp.response);\n                                                }\n                                            }).fail(function() {\n                                                console.log('exception');\n                                            });\n\n                                            \n                                        }.bind(this));\n                                        modal.show();\n                                    }.bind(this));\n                                }\n                            } else {\n                                if(resp.cannotcancel == '') {\n                                    HomePage.confirmbox(getString('cannotcancelexam', 'local_exams'));\n                                    modal.destroy();\n                                }else if (resp.productprice == 0) {\n                                    var ceparams = {};\n                                    ceparams.userid = userid;\n                                    ceparams.productid=productid;\n                                    ceparams.examprice = 1;\n                                    ceparams.amount = resp.productprice;\n                                    ceparams.refundamount = resp.refundamount;\n                                    ceparams.newamount =resp.newamount;\n                                    ceparams.newinvoiceamount =0;\n                                    ceparams.newamount =0;\n                                    ceparams.examdate=resp.examdate;\n                                    ceparams.policyconfirm = 1;\n                                    ceparams.invoicenumber=0;\n                                    ceparams.entitytype=entitytype;\n\n                                    var promise = Ajax.call([{\n                                        methodname: 'local_exams_canceluser',\n                                        args: ceparams\n                                    }]);\n                                    promise[0].done(function(resp) {\n                                        if(resp.response == 'success') {\n                                            window.location.href = resp.returnurl;\n                                        } else {\n                                            modal.hide();\n                                            HomePage.confirmbox(resp.response);\n                                        }\n                                    }).fail(function() {\n                                        console.log('exception');\n                                    });\n                                }else if(resp){\n                                    ModalFactory.create({\n                                        title: getString('refundpolicies', 'local_exams'),\n                                        type: ModalFactory.types.SAVE_CANCEL,\n                                        body: getString('refundamountconfirm', 'local_exams', data)\n                                    }).done(function(modal) {\n                                        this.modal = modal;\n                                        modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                        modal.getRoot().on(ModalEvents.save, function(e) {\n                                            e.preventDefault();\n                                            Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                Templates.appendNodeContents('.modal-content', html, js);\n                                            });\n                                            e.stopImmediatePropagation();\n                                            $(e.target).attr('disabled', true);\n                                            var ceparams = {};\n                                            ceparams.userid = userid;\n                                            ceparams.productid=productid;\n                                            ceparams.examprice = 1;\n                                            ceparams.amount = resp.productprice;\n                                            ceparams.refundamount = resp.refundamount;\n                                            ceparams.newinvoiceamount =0;\n                                            ceparams.newamount =0;\n                                            ceparams.examdate=resp.examdate;\n                                            ceparams.policyconfirm = 1;\n                                            ceparams.invoicenumber=0;\n                                            ceparams.entitytype=entitytype;\n\n                                            var promise = Ajax.call([{\n                                                methodname: 'local_exams_canceluser',\n                                                args: ceparams\n                                            }]);\n                                            promise[0].done(function(resp) {\n                                                if(resp.response == 'success') {\n                                                    window.location.href = resp.returnurl;\n                                                } else {\n                                                    modal.hide();\n                                                    HomePage.confirmbox(resp.response);\n                                                }\n                                            }).fail(function() {\n                                                console.log('exception');\n                                            });\n                                        }.bind(this));\n                                        modal.show();\n                                    }.bind(this));\n                                }\n                            }    \n                        }).fail(function(err) {\n                            HomePage.confirmbox(err.message);\n                            //console.log('exception');\n                        });\n                    }                    \n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let rescheduleexam = e.target.closest(Selectors.actions.rescheduleexam);\n        if (rescheduleexam) {\n            const examid = rescheduleexam.getAttribute('data-examid');\n            const productid = rescheduleexam.getAttribute('data-productid');\n            const userid = rescheduleexam.getAttribute('data-currentuser');\n            const entitytype = rescheduleexam.getAttribute('data-entitytype');\n            const refundtype = rescheduleexam.getAttribute('data-refundtype');\n            const ownedby = rescheduleexam.getAttribute('data-ownedby');\n            const currentuserorgoff = rescheduleexam.getAttribute('data-currentuserorgoff');\n            const enrolledrole = rescheduleexam.getAttribute('data-enrolledrole');\n            const examdate = rescheduleexam.getAttribute('data-examdate');\n            const profileid = rescheduleexam.getAttribute('data-profileid');\n            const enrolltype = rescheduleexam.getAttribute('data-enrolltype');\n            \n            ModalFactory.create({\n                title: getString('rescheduleexam', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('rescheduleconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('reschedule', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                        Templates.appendNodeContents('.modal-content', html, js);\n                    });\n                    var params = {};\n                    params.productid = productid;\n                    params.userid = userid;\n                    params.entitytype = entitytype;\n                    params.refundtype = refundtype;\n                    params.policyconfirm = 1;\n                    params.enrolltype = enrolltype;\n                    var promise = Ajax.call([{\n                        methodname: 'local_exams_cancelexamcalc',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        console.log(resp);\n                        var data = {};\n                        data.refundamount = resp.refundamount;\n                        data.deductamount = resp.deductamount;\n                        data.productprice = resp.productprice;\n                        data.isorgofficial = resp.isorgofficial;\n                        data.contextid = resp.contextid;\n                        if(enrolltype == 2 || (resp.isorgofficial == 1 && resp.loginuseradmin!=1)) {\n                            if (resp.newinvoiceamount < 50.00 && resp.seats > 0) {\n                                HomePage.confirmbox(getString('invoiceamountcantlower', 'local_exams'));\n                            }else if(resp){\n                                ModalFactory.create({\n                                    title: getString('reschedule', 'local_exams'),\n                                    type: ModalFactory.types.SAVE_CANCEL,\n                                    body: getString('orgofficialrescheduledetails', 'local_exams', resp)\n                                }).done(function(modal) {\n                                    this.modal = modal;\n                                    modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                    modal.getRoot().on(ModalEvents.save, function(e) {\n                                        window.location = M.cfg.wwwroot + '/local/exams/hallschedule.php?examid='+resp.entityid+'&profileid='+resp.referenceid+'&tuserid='+resp.tuserid+'&type=reschedule&damount='+ resp.deductamount;\n                                    }.bind(this));\n                                    modal.show();\n                                }.bind(this));\n                            }\n                        } else {\n                            if (resp.productprice == 0) {\n                                window.location = M.cfg.wwwroot + '/local/exams/index.php';\n                            }else if(resp.loginuseradmin==1) {\n                                modal.hide();\n                                const title = getString('reasonreschedule', 'local_exams');\n                                const form = new Modalform({\n                                    formClass: 'local_exams\\\\form\\\\reasonform',\n                                    args: {entitytype: entitytype, userid: userid, productid: productid},\n                                    modalConfig: {title},\n                                    returnFocus: canceluser,\n                                });\n                                form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                    const data = event.detail;\n                                    console.log(data.policy);\n                                    if(data.policy>0) {\n                                        var policyconfirm = 1;\n                                        var canceldataparams = {};\n                                        canceldataparams.productid = productid;\n                                        canceldataparams.userid = userid;\n                                        canceldataparams.entitytype = entitytype;\n                                        canceldataparams.refundtype = refundtype;\n                                        canceldataparams.policyconfirm = policyconfirm;\n                                        canceldataparams.enrolltype = enrolltype;\n                                        var promise = Ajax.call([{\n                                            methodname: 'local_exams_cancelexamcalc',\n                                            args: canceldataparams\n                                        }]);\n                                        promise[0].done(function(resp) {\n                                            var responsedata = {};\n                                            responsedata.amount = resp.productprice;\n                                            responsedata.refundamount = resp.refundamount;\n                                            responsedata.newinvoiceamount = resp.newinvoiceamount;\n                                            responsedata.newamount =resp.newamount;\n                                            responsedata.invoicenumber = resp.invoicenumber;\n                                            responsedata.productid = resp.productid;\n                                            responsedata.orgofficialenrolled = resp.orgofficialenrolled;\n                                            responsedata.deductamount = resp.deductamount;\n            \n                                            if (resp.newinvoiceamount < 50.00 && resp.seats > 0) {\n                                                HomePage.confirmbox(getString('invoiceamountcantlower', 'local_exams'));\n                                            } else {\n                                                ModalFactory.create({                               \n                                                    type: ModalFactory.types.SAVE_CANCEL,\n                                                    body: getString('orgofficialrescheduledetails', 'local_exams',responsedata)\n                                                }).done(function(modal) {\n                                                    this.modal = modal;\n                                                    modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                                    modal.getRoot().on(ModalEvents.save, function(e) {\n                                                        e.preventDefault();\n                                                        window.location = M.cfg.wwwroot + '/local/exams/hallschedule.php?examid='+resp.entityid+'&profileid='+resp.referenceid+'&tuserid='+resp.tuserid+'&type=reschedule&damount='+ resp.deductamount;\n                                                    }.bind(this));\n                                                    modal.show();\n                                                }.bind(this));\n                                            }    \n                                        }).fail(function(err) {\n                                            HomePage.confirmbox(err.message);\n                                        });\n                                    } else {\n                                        var policyconfirm = 0;\n                                        window.location = M.cfg.wwwroot + '/local/exams/hallschedule.php?examid='+examid+'&profileid='+profileid+'&tuserid='+userid+'&type=reschedule';\n                                    }\n                                });\n                                form.show();                                    \n                            }else if(resp){\n                                ModalFactory.create({\n                                    title: getString('reschedule', 'local_exams'),\n                                    type: ModalFactory.types.SAVE_CANCEL,\n                                    body: getString('rescheduledetails', 'local_exams', resp)\n                                }).done(function(modal) {\n                                    this.modal = modal;\n                                    modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                    modal.getRoot().on(ModalEvents.save, function(e) {\n                                        e.preventDefault();\n                                        Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                            Templates.appendNodeContents('.modal-content', html, js);\n                                        });\n                                        e.stopImmediatePropagation();\n                                        $(e.target).attr('disabled', true);\n                                        var damount = btoa(data.deductamount);\n                                        window.location = M.cfg.wwwroot + '/local/exams/hallschedule.php?examid='+examid+'&profileid='+profileid+'&tuserid='+userid+'&type=reschedule&status=en&damount='+damount;\n                                    }.bind(this));\n                                    modal.show();\n                                }.bind(this));\n                            }\n                        }\n                    }).fail(function(err) {\n                        HomePage.confirmbox(err.message);\n                        //console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        } \n        let canceluser = e.target.closest(Selectors.actions.canceluser);\n        if (canceluser) {\n            e.preventDefault();\n            e.stopImmediatePropagation()\n            \n            const userid = canceluser.getAttribute('data-tobecancelleduserid');\n            const username = canceluser.getAttribute('data-username');\n            const examname = canceluser.getAttribute('data-examname');\n            const examprice = canceluser.getAttribute('data-examprice');        \n            const examdate = canceluser.getAttribute('data-examdate');\n            const entitytype = canceluser.getAttribute('data-entitytype');\n            const ownedby = canceluser.getAttribute('data-ownedby');\n            const enrolledrole = canceluser.getAttribute('data-enrolledrole');\n            const productid = canceluser.getAttribute('data-productid');\n            const currentuserorgoff = canceluser.getAttribute('data-currentuserorgoff');\n            const enrolltype = canceluser.getAttribute('data-enrolltype');\n            const cangenerateinvoice = canceluser.getAttribute('data-cangenerateinvoice');\n            \n            var displayparams = {};\n          \n            displayparams.userid = userid;\n            displayparams.username = username;\n            displayparams.examname = examname;\n            displayparams.examprice = examprice;\n            ModalFactory.create({\n                title: getString('cancelconfirm', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('cancelconfirmmessage', 'local_exams', displayparams)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('yes', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    if(ownedby == 'CISI') {\n                        modal.hide();\n                        HomePage.confirmbox(getString('cannotcancelexam', 'local_exams'));\n                    } else { \n                        var params = {};\n                        if(examprice == 0 || cangenerateinvoice == 0) {\n                            \n                            params.userid = userid;\n                            params.examprice = 0;\n                            params.amount = 0;\n                            params.refundamount = 0;\n                            params.newinvoiceamount = 0;\n                            params.newamount =0;\n                            params.productid=productid;\n                            params.examdate=examdate;\n                            params.policyconfirm=1;\n                            params.invoicenumber=0;\n                            params.entitytype=entitytype;\n                            params.enrolltype=enrolltype;\n                            params.cangenerateinvoice=cangenerateinvoice;\n                            var promise = Ajax.call([{\n                                methodname: 'local_exams_canceluser',\n                                args: params\n                            }]);\n                            promise[0].done(function(resp) {\n                                if(resp.response == 'success') {\n                                    window.location.href = resp.returnurl;\n                                } else {\n                                    modal.hide();\n                                    HomePage.confirmbox(resp.response);\n                                }\n                            }).fail(function(err) {\n                                HomePage.confirmbox(err.message);\n                                //console.log('exception');\n                            });\n                        } else {\n\n                            if (enrolledrole == 'admin') {\n\n                                if(enrolltype == 2) {\n\n\n                                    if(currentuserorgoff == 1) {\n\n                                        var canceldataparams = {};\n                                        canceldataparams.productid = productid;\n                                        canceldataparams.entitytype = entitytype;\n                                        canceldataparams.userid = userid;\n                                        canceldataparams.refundtype = 'cancel';\n                                        canceldataparams.policyconfirm = 1;\n                                        canceldataparams.enrolltype=enrolltype;\n                                        \n                                        var promise = Ajax.call([{\n                                            methodname: 'local_exams_cancelexamcalc',\n                                            args: canceldataparams\n                                        }]);\n                                        promise[0].done(function(resp) {\n                                            var responsedata = {};\n                                            responsedata.productprice = resp.productprice;\n                                            responsedata.refundamount = resp.refundamount;\n                                            responsedata.newinvoiceamount = resp.newinvoiceamount;\n                                            responsedata.newamount = resp.newamount;\n                                            responsedata.invoicenumber = resp.invoicenumber;\n                                            responsedata.productid = resp.productid;\n                                            responsedata.orgofficialenrolled = resp.orgofficialenrolled;\n                                            responsedata.deductamount = resp.deductamount;\n                                            if(responsedata.refundamount==0) {\n                                                ModalFactory.create({                               \n                                                    type: ModalFactory.types.SAVE_CANCEL,\n                                                    body: getString('generateinvoiceconfirmation', 'local_exams',responsedata)\n                                                }).done(function(modal) {\n                                                    \n                                                    this.modal = modal;\n                                                    modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                                    modal.getRoot().on(ModalEvents.save, function(e) {\n                                                        e.preventDefault();\n                                                        Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                            Templates.appendNodeContents('.modal-content', html, js);\n                                                        });\n                                                        e.stopImmediatePropagation();\n    \n                                                        $(e.target).attr('disabled', true);\n                                                        var ceparams = {};\n                                                        \n                                                        ceparams.userid = userid;\n                                                        ceparams.productid=productid;\n                                                        ceparams.examprice = 0;\n                                                        ceparams.amount = resp.productprice;\n                                                        ceparams.refundamount = 0;\n                                                        ceparams.newinvoiceamount =0;\n                                                        ceparams.newamount =0;\n                                                        ceparams.examdate=resp.examdate;\n                                                        ceparams.policyconfirm = 1;\n                                                        ceparams.invoicenumber=resp.invoicenumber;\n                                                        ceparams.entitytype=entitytype;\n                                                        ceparams.enrolltype=enrolltype;\n                                                        ceparams.cangenerateinvoice=cangenerateinvoice;\n                                                        var promise = Ajax.call([{\n                                                            methodname: 'local_exams_canceluser',\n                                                            args: ceparams\n                                                        }]);\n                                                        promise[0].done(function(resp) {\n                                                            if(resp.response == 'success') {\n                                                                window.location.href = resp.returnurl;\n                                                            } else {\n                                                                modal.hide();\n                                                                HomePage.confirmbox(resp.response);\n                                                            }\n                                                        }).fail(function() {\n                                                            console.log('exception');\n                                                        });\n                                                    }.bind(this));\n                                                    modal.show();\n                                                }.bind(this));\n                                            } else if(resp.invoicenumber <= 0) {\n                                                HomePage.confirmbox(getString('nopendinginvoiceavailable', 'local_exams'));\n                                            } else if(resp.newinvoiceamount < 50.00  && resp.seats > 0) {\n                                                HomePage.confirmbox(getString('invoiceamountcantlower', 'local_exams'));\n                                            } else {\n                                                ModalFactory.create({                               \n                                                    type: ModalFactory.types.SAVE_CANCEL,\n                                                    body: getString('generateinvoiceconfirmation', 'local_exams',responsedata)\n                                                }).done(function(modal) {\n                                                    this.modal = modal;\n                                                    modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                                    modal.getRoot().on(ModalEvents.save, function(e) {\n                                                        e.preventDefault();\n                                                        Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                            Templates.appendNodeContents('.modal-content', html, js);\n                                                        });\n                                                        e.stopImmediatePropagation();\n                                                        $(e.target).attr('disabled', true);\n                                                        var ceparams = {};\n                                                        ceparams.userid = userid;\n                                                        ceparams.productid=productid;\n                                                        ceparams.examprice = 1;\n                                                        ceparams.amount = resp.productprice;\n                                                        ceparams.refundamount = resp.refundamount;\n                                                        ceparams.newinvoiceamount =resp.newinvoiceamount;\n                                                        ceparams.newamount =resp.newamount;\n                                                        ceparams.examdate=resp.examdate;\n                                                        ceparams.policyconfirm = 1;\n                                                        ceparams.invoicenumber=resp.invoicenumber;\n                                                        ceparams.entitytype=entitytype;\n                                                        ceparams.enrolltype=enrolltype;\n                                                        ceparams.cangenerateinvoice=cangenerateinvoice;\n                                                        var promise = Ajax.call([{\n                                                            methodname: 'local_exams_canceluser',\n                                                            args: ceparams\n                                                        }]);\n                                                        promise[0].done(function(resp) {\n                                                            if(resp.response == 'success') {\n                                                                window.location.href = resp.returnurl;\n                                                            } else {\n                                                                modal.hide();\n                                                                HomePage.confirmbox(resp.response);\n                                                            }\n                                                        }).fail(function() {\n                                                            console.log('exception');\n                                                        });\n                                                    }.bind(this));\n                                                    modal.show();\n                                                }.bind(this));\n                                            }    \n                                        }).fail(function(err) {\n                                            HomePage.confirmbox(err.message);\n                                        });\n\n                                    } else {\n\n\n                                        const title = getString('reasoncancel', 'local_exams');\n                                        const form = new Modalform({\n                                            formClass: 'local_exams\\\\form\\\\reasonform',\n                                            args: {entitytype: entitytype, userid: userid, productid: productid},\n                                            modalConfig: {title},\n                                            returnFocus: canceluser,\n                                        });\n                                        form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                            const data = event.detail;\n                                            console.log(data.policy);\n                                            if(data.policy>0) {\n                                                var policyconfirm = 1;\n                                            } else {\n                                                var policyconfirm = 0;\n                                            }\n                                            var canceldataparams = {};\n                                            canceldataparams.productid = productid;\n                                            canceldataparams.entitytype = entitytype;\n                                            canceldataparams.userid = userid;\n                                            canceldataparams.refundtype = 'cancel';\n                                            canceldataparams.policyconfirm = policyconfirm;\n                                            canceldataparams.enrolltype=enrolltype;\n                                            console.log(canceldataparams);\n                                            var promise = Ajax.call([{\n                                                methodname: 'local_exams_cancelexamcalc',\n                                                args: canceldataparams\n                                            }]);\n                                            promise[0].done(function(resp) {\n                                                var responsedata = {};\n                                                responsedata.productprice = resp.productprice;\n                                                responsedata.refundamount = resp.refundamount;\n                                                responsedata.newinvoiceamount = resp.newinvoiceamount;\n                                                responsedata.newamount = resp.newamount;\n                                                responsedata.invoicenumber = resp.invoicenumber;\n                                                responsedata.productid = resp.productid;\n                                                responsedata.orgofficialenrolled = resp.orgofficialenrolled;\n                                                responsedata.deductamount = resp.deductamount;\n    \n                                                if(resp.invoicenumber <= 0) {\n                                                    HomePage.confirmbox(getString('nopendinginvoiceavailable', 'local_exams'));\n                                                } else if(resp.newinvoiceamount < 50.00  && resp.seats > 0) {\n                                                    HomePage.confirmbox(getString('invoiceamountcantlower', 'local_exams'));\n                                                } else {\n                                                    ModalFactory.create({                               \n                                                        type: ModalFactory.types.SAVE_CANCEL,\n                                                        body: getString('generateinvoiceconfirmation', 'local_exams',responsedata)\n                                                    }).done(function(modal) {\n                                                        this.modal = modal;\n                                                        modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                                        modal.getRoot().on(ModalEvents.save, function(e) {\n                                                            e.preventDefault();\n                                                            Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                                Templates.appendNodeContents('.modal-content', html, js);\n                                                            });\n                                                            e.stopImmediatePropagation();\n                                                            $(e.target).attr('disabled', true);\n                                                            var ceparams = {};\n                                                            ceparams.userid = userid;\n                                                            ceparams.productid=productid;\n                                                            ceparams.examprice = 1;\n                                                            ceparams.amount = resp.productprice;\n                                                            ceparams.refundamount = resp.refundamount;\n                                                            ceparams.newinvoiceamount =resp.newinvoiceamount;\n                                                            ceparams.newamount =resp.newamount;\n                                                            ceparams.examdate=resp.examdate;\n                                                            ceparams.policyconfirm = policyconfirm;\n                                                            ceparams.invoicenumber=resp.invoicenumber;\n                                                            ceparams.entitytype=entitytype;\n                                                            ceparams.enrolltype=enrolltype;\n                                                            ceparams.cangenerateinvoice=cangenerateinvoice;\n                                                            var promise = Ajax.call([{\n                                                                methodname: 'local_exams_canceluser',\n                                                                args: ceparams\n                                                            }]);\n                                                            promise[0].done(function(resp) {\n                                                                if(resp.response == 'success') {\n                                                                    window.location.href = resp.returnurl;\n                                                                } else {\n                                                                    modal.hide();\n                                                                    HomePage.confirmbox(resp.response);\n                                                                }\n                                                            }).fail(function() {\n                                                                console.log('exception');\n                                                            });\n                                                        }.bind(this));\n                                                        modal.show();\n                                                    }.bind(this));\n                                                }    \n                                            }).fail(function(err) {\n                                                HomePage.confirmbox(err.message);\n                                            });\n                                        });\n                                        form.show();\n\n                                    } \n\n                                } else {\n                                    var ceparams = {};\n                                    ceparams.userid = userid;\n                                    ceparams.productid=productid;\n                                    ceparams.examprice = 1;\n                                    ceparams.amount = 0;\n                                    ceparams.refundamount = 0;\n                                    ceparams.newinvoiceamount =0;\n                                    ceparams.newamount =0;\n                                    ceparams.examdate=examdate;\n                                    ceparams.policyconfirm = 0;\n                                    ceparams.invoicenumber=0;\n                                    ceparams.entitytype=entitytype;\n                                    ceparams.enrolltype=enrolltype;\n                                    ceparams.cangenerateinvoice=cangenerateinvoice;\n                                    var promise = Ajax.call([{\n                                        methodname: 'local_exams_canceluser',\n                                        args: ceparams\n                                    }]);\n                                    promise[0].done(function(resp) {\n                                        if(resp.response == 'success') {\n                                            window.location.href = resp.returnurl;\n                                        } else {\n                                            modal.hide();\n                                            HomePage.confirmbox(resp.response);\n                                        }\n                                    }).fail(function() {\n                                        console.log('exception');\n                                    });\n\n                                }\n                                \n                            } else {\n                                modal.hide();\n                                if (enrolledrole=='organizationofficial' && currentuserorgoff==1) { // org enrolled and org cancelling\n                                   \n                                    var canceldataparams = {};\n                                    canceldataparams.productid = productid;\n                                    canceldataparams.entitytype = entitytype;\n                                    canceldataparams.userid = userid;\n                                    canceldataparams.refundtype = 'cancel';\n                                    canceldataparams.policyconfirm = 1;\n                                    canceldataparams.enrolltype=enrolltype;\n                                    \n                                    var promise = Ajax.call([{\n                                        methodname: 'local_exams_cancelexamcalc',\n                                        args: canceldataparams\n                                    }]);\n                                    promise[0].done(function(resp) {\n                                        var responsedata = {};\n                                        responsedata.productprice = resp.productprice;\n                                        responsedata.refundamount = resp.refundamount;\n                                        responsedata.newinvoiceamount = resp.newinvoiceamount;\n                                        responsedata.newamount = resp.newamount;\n                                        responsedata.invoicenumber = resp.invoicenumber;\n                                        responsedata.productid = resp.productid;\n                                        responsedata.orgofficialenrolled = resp.orgofficialenrolled;\n                                        responsedata.deductamount = resp.deductamount;\n                                       \n                                        if(responsedata.refundamount==0) {\n                                            ModalFactory.create({                               \n                                                type: ModalFactory.types.SAVE_CANCEL,\n                                                body: getString('generateinvoiceconfirmation', 'local_exams',responsedata)\n                                            }).done(function(modal) {\n                                                \n                                                this.modal = modal;\n                                                modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                                modal.getRoot().on(ModalEvents.save, function(e) {\n                                                    e.preventDefault();\n                                                    Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                        Templates.appendNodeContents('.modal-content', html, js);\n                                                    });\n                                                    e.stopImmediatePropagation();\n\n                                                    $(e.target).attr('disabled', true);\n                                                    var ceparams = {};\n                                                    \n                                                    ceparams.userid = userid;\n                                                    ceparams.productid=productid;\n                                                    ceparams.examprice = 0;\n                                                    ceparams.amount = resp.productprice;\n                                                    ceparams.refundamount = 0;\n                                                    ceparams.newinvoiceamount =0;\n                                                    ceparams.newamount =0;\n                                                    ceparams.examdate=resp.examdate;\n                                                    ceparams.policyconfirm = 1;\n                                                    ceparams.invoicenumber=resp.invoicenumber;\n                                                    ceparams.entitytype=entitytype;\n                                                    ceparams.enrolltype=enrolltype;\n                                                    ceparams.cangenerateinvoice=cangenerateinvoice;\n                                                    var promise = Ajax.call([{\n                                                        methodname: 'local_exams_canceluser',\n                                                        args: ceparams\n                                                    }]);\n                                                    promise[0].done(function(resp) {\n                                                        if(resp.response == 'success') {\n                                                            window.location.href = resp.returnurl;\n                                                        } else {\n                                                            modal.hide();\n                                                            HomePage.confirmbox(resp.response);\n                                                        }\n                                                    }).fail(function() {\n                                                        console.log('exception');\n                                                    });\n                                                }.bind(this));\n                                                modal.show();\n                                            }.bind(this));\n                                        } else if(resp.invoicenumber <= 0) {\n                                            HomePage.confirmbox(getString('nopendinginvoiceavailable', 'local_exams'));\n                                        } else if(resp.newinvoiceamount < 50.00  && resp.seats > 0) {\n                                            HomePage.confirmbox(getString('invoiceamountcantlower', 'local_exams'));\n                                        } else {\n                                            ModalFactory.create({                               \n                                                type: ModalFactory.types.SAVE_CANCEL,\n                                                body: getString('generateinvoiceconfirmation', 'local_exams',responsedata)\n                                            }).done(function(modal) {\n                                                this.modal = modal;\n                                                modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                                modal.getRoot().on(ModalEvents.save, function(e) {\n                                                    e.preventDefault();\n                                                    Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                        Templates.appendNodeContents('.modal-content', html, js);\n                                                    });\n                                                    e.stopImmediatePropagation();\n                                                    $(e.target).attr('disabled', true);\n                                                    var ceparams = {};\n                                                    ceparams.userid = userid;\n                                                    ceparams.productid=productid;\n                                                    ceparams.examprice = 1;\n                                                    ceparams.amount = resp.productprice;\n                                                    ceparams.refundamount = resp.refundamount;\n                                                    ceparams.newinvoiceamount =resp.newinvoiceamount;\n                                                    ceparams.newamount =resp.newamount;\n                                                    ceparams.examdate=resp.examdate;\n                                                    ceparams.policyconfirm = 1;\n                                                    ceparams.invoicenumber=resp.invoicenumber;\n                                                    ceparams.entitytype=entitytype;\n                                                    ceparams.enrolltype=enrolltype;\n                                                    ceparams.cangenerateinvoice=cangenerateinvoice;\n                                                    var promise = Ajax.call([{\n                                                        methodname: 'local_exams_canceluser',\n                                                        args: ceparams\n                                                    }]);\n                                                    promise[0].done(function(resp) {\n                                                        if(resp.response == 'success') {\n                                                            window.location.href = resp.returnurl;\n                                                        } else {\n                                                            modal.hide();\n                                                            HomePage.confirmbox(resp.response);\n                                                        }\n                                                    }).fail(function() {\n                                                        console.log('exception');\n                                                    });\n                                                }.bind(this));\n                                                modal.show();\n                                            }.bind(this));\n                                        }    \n                                    }).fail(function(err) {\n                                        HomePage.confirmbox(err.message);\n                                    });\n                                } else { // Admin Cancelling\n                                    const title = getString('reasoncancel', 'local_exams');\n                                    const form = new Modalform({\n                                        formClass: 'local_exams\\\\form\\\\reasonform',\n                                        args: {entitytype: entitytype, userid: userid, productid: productid},\n                                        modalConfig: {title},\n                                        returnFocus: canceluser,\n                                    });\n                                    form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                        const data = event.detail;\n                                        console.log(data.policy);\n                                        if(data.policy>0) {\n                                            var policyconfirm = 1;\n                                        } else {\n                                            var policyconfirm = 0;\n                                        }\n        \n                                        var canceldataparams = {};\n                                       \n\n                                        canceldataparams.productid = productid;\n                                        canceldataparams.entitytype = entitytype;\n                                        canceldataparams.userid = userid;\n                                        canceldataparams.refundtype = 'cancel';\n                                        canceldataparams.policyconfirm = policyconfirm;\n                                        canceldataparams.enrolltype=enrolltype;\n                                        \n                                        var promise = Ajax.call([{\n                                            methodname: 'local_exams_cancelexamcalc',\n                                            args: canceldataparams\n                                        }]);\n                                        promise[0].done(function(resp) {\n                                            var responsedata = {};\n                                            responsedata.productprice = resp.productprice;\n                                            responsedata.refundamount = resp.refundamount;\n                                            responsedata.newinvoiceamount = resp.newinvoiceamount;\n                                            responsedata.newamount = resp.newamount;\n                                            responsedata.invoicenumber = resp.invoicenumber;\n                                            responsedata.productid = resp.productid;\n                                            responsedata.orgofficialenrolled = resp.orgofficialenrolled;\n                                            responsedata.deductamount = resp.deductamount;\n            \n                                            if(resp.trainee == 1) {\n                                                ModalFactory.create({\n                                                title: getString('refundpolicies', 'local_exams'),\n                                                type: ModalFactory.types.SAVE_CANCEL,\n                                                body: getString('refundamountconfirm', 'local_exams', responsedata)\n                                                }).done(function(modal) {\n                                                    this.modal = modal;\n                                                    modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                                    modal.getRoot().on(ModalEvents.save, function(e) {\n                                                        e.preventDefault();   \n                                                        Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                            Templates.appendNodeContents('.modal-content', html, js);\n                                                        });\n                                                        e.stopImmediatePropagation();  \n                                                        $(e.target).attr('disabled', true);   \n                                                        var canceluserparams = {};\n                                                        console.log(cangenerateinvoice);\n                                                        canceluserparams.userid = userid;\n                                                        canceluserparams.examprice = 1;\n                                                        canceluserparams.amount = resp.productprice;\n                                                        canceluserparams.refundamount = resp.refundamount;\n                                                        canceluserparams.newinvoiceamount = 0;\n                                                        canceluserparams.newamount =0;\n                                                        canceluserparams.productid=productid;\n                                                        canceluserparams.policyconfirm=policyconfirm;\n                                                        canceluserparams.examdate=resp.examdate;\n                                                        canceluserparams.invoicenumber=0;\n                                                        canceluserparams.entitytype=entitytype;\n                                                        canceluserparams.enrolltype=enrolltype;\n                                                        canceluserparams.cangenerateinvoice=cangenerateinvoice;\n                                                        var promise = Ajax.call([{\n                                                            methodname: 'local_exams_canceluser',\n                                                            args: canceluserparams\n                                                        }]);\n                                                        promise[0].done(function(resp) {\n                                                            if(resp.response == 'success') {\n                                                                window.location.href = resp.returnurl;\n                                                            } else {\n                                                                modal.hide();\n                                                                HomePage.confirmbox(resp.response);\n                                                            }\n                                                        }).fail(function(err) {\n                                                            HomePage.confirmbox(err.message);\n                                                            //console.log('exception');\n                                                        });\n                                                    }.bind(this));\n                                                    modal.show();\n                                                }.bind(this));\n    \n                                            } else if(resp.invoicenumber <= 0) {\n                                                HomePage.confirmbox(getString('nopendinginvoiceavailable', 'local_exams'));\n                                            } else if(resp.newinvoiceamount < 50.00  && resp.seats > 0) {\n                                                HomePage.confirmbox(getString('invoiceamountcantlower', 'local_exams'));\n                                            } else {\n                                                ModalFactory.create({                               \n                                                    type: ModalFactory.types.SAVE_CANCEL,\n                                                    body: getString('generateinvoiceconfirmation', 'local_exams',responsedata)\n                                                }).done(function(modal) {\n                                                    this.modal = modal;\n                                                    modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                                    modal.getRoot().on(ModalEvents.save, function(e) {\n                                                        e.preventDefault();\n                                                        Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                            Templates.appendNodeContents('.modal-content', html, js);\n                                                        });\n                                                        e.stopImmediatePropagation();\n                                                        $(e.target).attr('disabled', true);\n            \n                                                        var ceparams = {};\n                                                        ceparams.userid = userid;\n                                                        ceparams.productid=productid;\n                                                        ceparams.examprice = 1;\n                                                        ceparams.amount = resp.productprice;\n                                                        ceparams.refundamount = resp.refundamount;\n                                                        ceparams.newinvoiceamount =resp.newinvoiceamount;\n                                                        ceparams.newamount =resp.newamount;\n                                                        ceparams.examdate=resp.examdate;\n                                                        ceparams.policyconfirm = policyconfirm;\n                                                        ceparams.invoicenumber=resp.invoicenumber;\n                                                        ceparams.entitytype=entitytype;\n                                                        ceparams.enrolltype=enrolltype;\n                                                        ceparams.cangenerateinvoice=cangenerateinvoice;\n                                                        var promise = Ajax.call([{\n                                                            methodname: 'local_exams_canceluser',\n                                                            args: ceparams\n                                                        }]);\n                                                        promise[0].done(function(resp) {\n                                                            if(resp.response == 'success') {\n                                                                window.location.href = resp.returnurl;\n                                                            } else {\n                                                                modal.hide();\n                                                                HomePage.confirmbox(resp.response);\n                                                            }\n                                                        }).fail(function() {\n                                                            console.log('exception');\n                                                        });\n                                                    }.bind(this));\n                                                    modal.show();\n                                                }.bind(this));\n                                            }    \n                                        }).fail(function(err) {\n                                            HomePage.confirmbox(err.message);\n                                        });\n                                    });\n                                    form.show();\n                                }\n                            }\n                        }\n                    }\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n\n        let trescheduleexam = e.target.closest(Selectors.actions.trescheduleexam);\n        if (trescheduleexam) {\n            const examid = trescheduleexam.getAttribute('data-examid');\n            const productid = trescheduleexam.getAttribute('data-productid');\n            const entitytype = 'exam';\n            const type = trescheduleexam.getAttribute('data-type');\n            const profileid = trescheduleexam.getAttribute('data-profileid');\n            const damount = atob(trescheduleexam.getAttribute('data-damount'));\n            const userid = trescheduleexam.getAttribute('data-userid');\n            const contextid = trescheduleexam.getAttribute('data-contextid');\n            const scheduleid = trescheduleexam.getAttribute('data-scheduleid');\n            console.log(profileid)\n            ModalFactory.create({\n                title: getString('rescheduleexam', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('rescheduleconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('reschedule', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                        Templates.appendNodeContents('.modal-content', html, js);\n                    });\n                    var params = {};\n                    params.examid = examid;\n                    params.profileid = profileid;\n                    params.scheduleid = scheduleid;\n                    params.type = type;\n                    params.tuserid = userid;\n                    params.orderid = 0; \n                    params.productid = productid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_exam_enrouser',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {  \n                        if(resp.response == 'success') {\n                            let products = {};\n                            products.userid = userid;\n                            products.paymenttype = 'telr';\n                            products.productid = productid;\n                            products.entitytype = entitytype;\n                            products.total = damount;\n                            products.scheduleid = scheduleid;\n                            products.profileid = profileid;\n                            products.processtype = 'reschedule';\n                            var producdata = Fragment.loadFragment('local_exams', 'productdata', contextid, products);\n                            producdata.done(function(html, js) {\n                                let promise = Ajax.call([{\n                                    methodname: 'tool_product_telr_begin_trans',\n                                    args: {\n                                        products: html\n                                    }\n                                }]);\n                                Templates.render('tool_product/loader');\n                                promise[0].done((response) => {\n                                    console.log(response);\n                                    window.location = response.returnurl;\n                                }).fail( (error) => {\n                                    HomePage.confirmbox(error.message);\n                                });\n                            });                    \n                        } else {\n                            modal.hide();\n                            HomePage.confirmbox(resp.response);\n                        }\n                    }).fail(function() {\n                        // do something with the exception\n                         console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n    });\n};\n"],"names":["Selectors","cancelexam","rescheduleexam","canceluser","trescheduleexam","HomePage","homepage","document","addEventListener","e","target","closest","stopImmediatePropagation","productid","getAttribute","userid","entitytype","refundtype","ownedby","create","title","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","preventDefault","renderForPromise","then","_ref2","html","js","appendNodeContents","hide","confirmbox","parameters","policyconfirm","Ajax","call","methodname","args","resp","data","refundamount","deductamount","productprice","isorgofficial","console","log","ceparams","examprice","amount","newamount","newinvoiceamount","examdate","invoicenumber","response","window","location","href","returnurl","fail","seats","_ref3","attr","bind","this","show","cannotcancel","destroy","_ref4","err","message","examid","profileid","enrolltype","_ref5","params","contextid","loginuseradmin","M","cfg","wwwroot","entityid","referenceid","tuserid","form","Modalform","formClass","modalConfig","returnFocus","events","FORM_SUBMITTED","event","detail","policy","canceldataparams","responsedata","orgofficialenrolled","_ref6","damount","btoa","username","examname","enrolledrole","currentuserorgoff","cangenerateinvoice","displayparams","_ref7","_ref8","_ref9","_ref10","_ref11","trainee","_ref12","canceluserparams","_ref13","atob","scheduleid","_ref14","orderid","products","paymenttype","total","processtype","Fragment","loadFragment","promise","render","error"],"mappings":"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"}