{"version":3,"file":"examschedules.min.js","sources":["../src/examschedules.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n// import ModalForm from 'local_trainingprogram/dynamicform';\nimport Modalform from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport $ from 'jquery';\n\nconst Selectors = {\n    actions: {\n        examschedules: '[data-action=\"examschedules\"]',\n        editschedule: '[data-action=\"editschedule\"]',\n        deleteschedule: '[data-action=\"deleteschedule\"]',\n    },\n};\n\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        e.stopImmediatePropagation();\n        let examschedules = e.target.closest(Selectors.actions.examschedules);\n        if (examschedules) {\n            e.preventDefault();\n            const title = getString('createhallschedule', 'local_hall');\n            const form = new Modalform({\n                formClass: 'local_hall\\\\form\\\\schedulehallform',\n                args: {entityid: examschedules.getAttribute('data-examid'), entity: 'exam'},\n                modalConfig: {title},\n                returnFocus: examschedules,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let editschedule = e.target.closest(Selectors.actions.editschedule);\n        if (editschedule) {\n            e.preventDefault();\n            const title = getString('updateschedule', 'local_exams');\n            const form = new Modalform({\n                formClass: 'local_hall\\\\form\\\\schedulehallform',\n                args: {id: editschedule.getAttribute('data-id'), entity: 'exam'},\n                modalConfig: {title},\n                returnFocus: editschedule,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let deleteschedule = e.target.closest(Selectors.actions.deleteschedule);\n        if (deleteschedule) {\n            e.preventDefault();\n            let scheduleid = deleteschedule.getAttribute('data-id');\n            ModalFactory.create({\n                title: getString('deleteexam', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('scheduledeleteconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('delete', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.scheduleid = scheduleid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_exam_delete_schedule',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        window.location.reload();\n                    }).fail(function() {\n                        // do something with the exception\n                         console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n    });\n};"],"names":["Selectors","examschedules","editschedule","deleteschedule","document","addEventListener","e","stopImmediatePropagation","target","closest","preventDefault","title","form","Modalform","formClass","args","entityid","getAttribute","entity","modalConfig","returnFocus","events","FORM_SUBMITTED","window","location","reload","show","id","scheduleid","create","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","params","Ajax","call","methodname","resp","fail","console","log","bind","this"],"mappings":"grBAwBMA,kBACO,CACLC,cAAe,gCACfC,aAAc,+BACdC,eAAgB,gDAIJ,KAChBC,SAASC,iBAAiB,SAAS,SAASC,GACxCA,EAAEC,+BACEN,cAAgBK,EAAEE,OAAOC,QAAQT,kBAAkBC,kBACnDA,cAAe,CACfK,EAAEI,uBACIC,OAAQ,mBAAU,qBAAsB,cACxCC,KAAO,IAAIC,mBAAU,CACvBC,UAAW,qCACXC,KAAM,CAACC,SAAUf,cAAcgB,aAAa,eAAgBC,OAAQ,QACpEC,YAAa,CAACR,MAAAA,OACdS,YAAanB,gBAEjBW,KAAKP,iBAAiBO,KAAKS,OAAOC,gBAAgB,IAAMC,OAAOC,SAASC,WACxEb,KAAKc,WAELxB,aAAeI,EAAEE,OAAOC,QAAQT,kBAAkBE,iBAClDA,aAAc,CACdI,EAAEI,uBACIC,OAAQ,mBAAU,iBAAkB,eACpCC,KAAO,IAAIC,mBAAU,CACvBC,UAAW,qCACXC,KAAM,CAACY,GAAIzB,aAAae,aAAa,WAAYC,OAAQ,QACzDC,YAAa,CAACR,MAAAA,OACdS,YAAalB,eAEjBU,KAAKP,iBAAiBO,KAAKS,OAAOC,gBAAgB,IAAMC,OAAOC,SAASC,WACxEb,KAAKc,WAELvB,eAAiBG,EAAEE,OAAOC,QAAQT,kBAAkBG,mBACpDA,eAAgB,CAChBG,EAAEI,qBACEkB,WAAazB,eAAec,aAAa,kCAChCY,OAAO,CAChBlB,OAAO,mBAAU,aAAc,eAC/BmB,KAAMC,uBAAaC,MAAMC,YACzBC,MAAM,mBAAU,wBAAyB,iBAC1CC,KAAK,SAASC,YACRA,MAAQA,MACbA,MAAMC,mBAAkB,mBAAU,SAAU,gBAC5CD,MAAME,UAAUC,GAAGC,sBAAYC,KAAM,SAASnC,GAC1CA,EAAEI,qBACEgC,OAAS,GACbA,OAAOd,WAAaA,WACNe,cAAKC,KAAK,CAAC,CACrBC,WAAY,6BACZ9B,KAAM2B,UAEF,GAAGP,MAAK,SAASW,MACrBvB,OAAOC,SAASC,YACjBsB,MAAK,WAEHC,QAAQC,IAAI,iBAEnBC,KAAKC,OACPf,MAAMV,QACRwB,KAAKC"}
