{"version":3,"file":"exams.min.js","sources":["../src/exams.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport ModalForm from 'local_trainingprogram/dynamicform';\nimport Modalform from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport homepage from 'theme_academy/homepage';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport $ from 'jquery';\n\nconst Selectors = {\n    actions: {\n        createexam: '[data-action=\"createexam\"]',\n        deleteexam: '[data-action=\"deleteexam\"]',\n        publishexam: '[data-action=\"publishexam\"]',\n        viewexam: '[data-action=\"viewexam\"]',\n        viewsectors: '[data-action=\"viewsectors\"]',\n        bookhall: '[data-action=\"bookhall\"]',\n        mapcompetencies: '[data-action=\"mapcompetencies\"]',\n        competencies: '[data-action=\"competencies\"]',\n        addprofile: '[data-action=\"addprofile\"]',\n        deleteprofile: '[data-action=\"deleteprofile\"]',\n        viewprofile: '[data-action=\"viewprofile\"]',\n        enrolusertoexam: '[data-action=\"enrolusertoexam\"]',\n        editattempt: '[data-action=\"editattempt\"]',\n        deleteattempt: '[data-action=\"deleteattempt\"]',\n    },\n};\n\nlet HomePage = new homepage();\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        // e.stopImmediatePropagation();\n        let element = e.target.closest(Selectors.actions.createexam);\n        if (element) {\n            e.stopImmediatePropagation();\n            // e.preventDefault();\n            const title = element.getAttribute('data-id') ?\n                getString('updateexam', 'local_exams', element.getAttribute('data-name')) :\n                getString('createexam', 'local_exams');\n            const form = new ModalForm({\n                formClass: 'local_exams\\\\form\\\\examsform',\n                args: {id: element.getAttribute('data-id')},\n                modalConfig: {title},\n                returnFocus: element,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let deleteexam = e.target.closest(Selectors.actions.deleteexam);\n        if (deleteexam) {\n            const examid = deleteexam.getAttribute('data-id');\n            ModalFactory.create({\n                title: getString('deleteexam', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deleteallconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('delete', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.examid = examid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_deleteexam',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        window.location = M.cfg.wwwroot + '/local/exams/index.php';\n                    }).fail(function() {\n                        // do something with the exception\n                         console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let publishexam = e.target.closest(Selectors.actions.publishexam);\n        if (publishexam) {\n            const examid = publishexam.getAttribute('data-id');\n            ModalFactory.create({\n                title: getString('publishexam', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('publishconfirmsg', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('publish', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.examid = examid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_publishexam',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        // do something with the exception\n                         console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let viewexam = e.target.closest(Selectors.actions.viewexam);\n        if (viewexam) {\n            const examid = viewexam.getAttribute('data-id');\n            var params = {};\n            params.examid = examid;\n            var promise = Ajax.call([{\n                methodname: 'local_exam_info',\n                args: params\n            }]);\n            promise[0].done(function(resp) {\n                ModalFactory.create({\n                    title: getString('viewexam', 'local_exams'),\n                    body: resp.options\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.show();\n                    modal.setLarge();\n                }.bind(this));\n            }).fail(function() {\n                // do something with the exception\n                 console.log('exception');\n            });\n        } \n        let viewsectors = e.target.closest(Selectors.actions.viewsectors);\n        if (viewsectors) {\n            const examid = viewsectors.getAttribute('data-id');\n            var params = {};\n            params.examid = examid;\n            var promise = Ajax.call([{\n                methodname: 'local_sectors_info',\n                args: params\n            }]);\n            promise[0].done(function(resp) {\n                ModalFactory.create({\n                    title: getString('viewsectors', 'local_exams'),\n                    body: resp.options\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.show();\n                }.bind(this));\n            }).fail(function() {\n                // do something with the exception\n                 console.log('exception');\n            });\n        }\n        let bookhall = e.target.closest(Selectors.actions.bookhall);\n        if (bookhall) {\n            e.preventDefault();\n            const title = bookhall.getAttribute('data-id');\n            const form = new ModalForm({\n                formClass: 'local_exams\\\\form\\\\bookhallform',\n                args: {id: bookhall.getAttribute('data-id')},\n                modalConfig: {title},\n                returnFocus: bookhall,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let mapcompetencies = e.target.closest(Selectors.actions.mapcompetencies);\n        if (mapcompetencies) {\n            e.stopImmediatePropagation();\n            // e.preventDefault();\n            const title = getString('mapcompetencies', 'local_exams');\n            const form = new ModalForm({\n                formClass: 'local_exams\\\\form\\\\competenciesform',\n                args: {id: mapcompetencies.getAttribute('data-id'), type: mapcompetencies.getAttribute('data-type')},\n                modalConfig: {title},\n                returnFocus: mapcompetencies,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let competencies = e.target.closest(Selectors.actions.competencies);\n        if (competencies) {\n            e.stopImmediatePropagation();\n            const typeid = competencies.getAttribute('data-id');\n            const type = competencies.getAttribute('data-type');\n            var options = {};\n            options.typeid = typeid;\n            options.type = type;\n            options.hallid = 0;\n            options.examdate = 0;\n            options.temp = 'competencies_view';\n            options.methodName = 'local_competencies_info';\n            var trigger = $(Selectors.actions.competencies);\n            ModalFactory.create({\n            title: getString('mapcompetencies', 'local_exams'),\n            body: Templates.render('local_exams/testing',options).done(function(html, js) {\n                                        Templates.replaceNodeContents('targetcompetencypc', html, js);\n                                    })\n            }, trigger)\n            .done(function(modal) {\n                modal.show();\n                modal.setLarge();\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                modal.hide();\n                modal.destroy();\n            }.bind(this));\n            });\n        }\n        let addprofile = e.target.closest(Selectors.actions.addprofile);\n        if (addprofile) {\n            //e.stopImmediatePropagation();\n            // e.preventDefault();\n            const title = addprofile.getAttribute('data-id') ?\n                getString('updateexamprofile', 'local_exams', addprofile.getAttribute('data-name')) :\n                getString('createexamprofile', 'local_exams');\n            const form = new ModalForm({\n                formClass: 'local_exams\\\\form\\\\examprofiles',\n                args: {id: addprofile.getAttribute('data-id'), examid: addprofile.getAttribute('data-examid')},\n                modalConfig: {title},\n                returnFocus: addprofile,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let deleteprofile = e.target.closest(Selectors.actions.deleteprofile);\n        if (deleteprofile) {\n            const profileid = deleteprofile.getAttribute('data-profileid');\n            ModalFactory.create({\n                title: getString('deleteprofile', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deleteprofileconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('delete', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.id = profileid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_deleteprofile',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        window.location = M.cfg.wwwroot + '/local/exams/examdetails.php?id='+deleteprofile.getAttribute('data-examid');\n                    }).fail(function() {\n                        // do something with the exception\n                         console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let viewprofile = e.target.closest(Selectors.actions.viewprofile);\n        if (viewprofile) {\n            e.stopImmediatePropagation();\n            const profileid = viewprofile.getAttribute('data-id');\n            var params = {};\n            params.profileid = profileid;\n            var promise = Ajax.call([{\n                methodname: 'local_exam_profileinfo',\n                args: params\n            }]);\n            promise[0].done(function(resp) {\n                ModalFactory.create({\n                    title: getString('viewprofile', 'local_exams'),\n                    body: resp.options\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.show();\n                    modal.setLarge();\n                }.bind(this));\n            }).fail(function() {\n                // do something with the exception\n                 console.log('exception');\n            });\n        }\n\n        let enrolusertoexam = e.target.closest(Selectors.actions.enrolusertoexam);\n        if (enrolusertoexam) {\n            const examid = enrolusertoexam.getAttribute('data-examid');\n            const profileid = enrolusertoexam.getAttribute('data-profileid');\n            const scheduleid = enrolusertoexam.getAttribute('data-scheduleid');\n            const type = enrolusertoexam.getAttribute('data-type');\n            const tuserid = enrolusertoexam.getAttribute('data-tuserid');\n            const damount = enrolusertoexam.getAttribute('data-damount');\n            const productid = enrolusertoexam.getAttribute('data-productid');\n            const organization = enrolusertoexam.getAttribute('data-organization');\n            const orgofficial = enrolusertoexam.getAttribute('data-orgofficial');\n            ModalFactory.create({\n                title: '',\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('enrolconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n\n                    Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                        Templates.appendNodeContents('.modal-content', html, js);\n                    });\n\n                    if (isNaN(tuserid) && type == 'bulkenrollment') { // Organizational official bulk enrolling users(Bulk reschedule) to exam\n                        var enrolparams = {};\n                        enrolparams.examid = examid;\n                        enrolparams.profileid = profileid;\n                        enrolparams.scheduleid = scheduleid;\n                        enrolparams.type = type;\n                        enrolparams.tuserid = tuserid;\n                        enrolparams.orderid = 0;\n                        enrolparams.productid = productid;\n                        enrolparams.organization = organization;\n                        \n                        var promise = Ajax.call([{\n                            methodname: 'local_exam_enrouser',\n                            args: enrolparams\n                        }]);\n                        promise[0].done(function(resp) {  \n                            if(resp.response == 'success') {\n                                if(type == 'bulkenrollment') {\n                                    window.location = M.cfg.wwwroot + '/local/exams/enrollmentconfirmation.php?examid='+examid+'&profileid='+profileid+'&scheduleid='+scheduleid+'&cusers='+tuserid+'&organization='+organization+'&orgofficial='+orgofficial;\n                                }                                \n                            } else {\n                                modal.hide();\n                                HomePage.confirmbox(resp.response);\n                            }\n                        }).fail(function() {\n                            // do something with the exception\n                             console.log('exception');\n                        });\n\n                    } else if(isNaN(tuserid) && type != 'bulkenrollment') { // Organizational official enrolling users to exam\n                        var params = {};\n                        params.entityid = examid;\n                        params.referenceid = profileid;\n                        params.tuserid = tuserid;\n                        params.type = 'exam';\n                        var promise = Ajax.call([{\n                            methodname: 'local_exams_get_orgorderdetails',\n                            args: params\n                        }]);\n                        promise[0].done(function(orgorderdetailsresp) {\n\n                            if(orgorderdetailsresp.response == 'success') {\n                                // Org official enrolling users\n                                if (orgorderdetailsresp.returnparams != \"\" && orgorderdetailsresp.autoapproval == 1) {\n                                    event.preventDefault();\n                                    let promise = Ajax.call([{\n                                        methodname: 'tool_product_postpaid_payments',\n                                        args: {\n                                            products: orgorderdetailsresp.returnparams\n                                        }\n                                    }]);\n                                    promise[0].done((response) => { \n                                        var params = {};\n                                        const p_orderid = response.paymentid; \n                                        params.orderid = response.paymentid;\n                                        var promise = Ajax.call([{\n                                            methodname: 'tool_product_get_orderinfo',\n                                            args: params\n                                        }]);\n                                        promise[0].done(function(resp) {\n                                            if (resp) {\n                                                let promises = Ajax.call([{\n                                                    methodname: 'tool_product_generate_sadadbill',\n                                                    args: {\n                                                        products: resp.info\n                                                    }\n                                                }]);\n                                                promises[0].done((response) => {\n                                                    var enrolparams = {};\n                                                    enrolparams.examid = examid;\n                                                    enrolparams.profileid = profileid;\n                                                    enrolparams.scheduleid = scheduleid;\n                                                    enrolparams.type = type;\n                                                    enrolparams.tuserid = tuserid;\n                                                    enrolparams.orderid = p_orderid;\n                                                    enrolparams.productid = productid;\n                                                    enrolparams.organization = organization;\n                                                    enrolparams.discountprice = orgorderdetailsresp.discountprice;\n                                                    enrolparams.discounttype = orgorderdetailsresp.discounttype;\n                                                    enrolparams.discounttableid = orgorderdetailsresp.discounttableid;\n                                                    enrolparams.autoapproval = orgorderdetailsresp.autoapproval;\n                                                                            \n                                                    var promise = Ajax.call([{\n                                                        methodname: 'local_exam_enrouser',\n                                                        args: enrolparams\n                                                    }]);\n                                                    promise[0].done(function(resp) {\n                                                        if(resp.response == 'success') {\n                                                            window.location = M.cfg.wwwroot + '/local/exams/index.php';\n                                                        } else {\n                                                            var promise = Ajax.call([{\n                                                                methodname: 'local_exam_revert_enroluser',\n                                                                args: enrolparams\n                                                            }]);\n                                                            modal.hide();\n                                                            HomePage.confirmbox(resp.response);\n                                                        }\n                                                    }).fail(function() {\n                                                        // do something with the exception\n                                                            console.log('exception');\n                                                    });\n                                                }).fail( (error) => {\n                                                     modal.hide();\n                                                    HomePage.confirmbox(error.message);\n                                                });\n                                            }\n                                        }).fail( (error) => {\n                                            HomePage.confirmbox(error.message);\n                                        });\n                                    }).fail( (error) => {    \n                                        HomePage.confirmbox(error.error);\n                                    });\n                                } else {\n\n                                    let promise = Ajax.call([{\n                                        methodname: 'tool_product_postpaid_payments',\n                                        args: {\n                                            products: orgorderdetailsresp.returnparams\n                                        }\n                                    }]);\n                                    promise[0].done((response) => {\n                                        if(response.success == true) {\n                                            var enrolparams = {};\n                                            enrolparams.examid = examid;\n                                            enrolparams.profileid = profileid;\n                                            enrolparams.scheduleid = scheduleid;\n                                            enrolparams.type = type;\n                                            enrolparams.tuserid = tuserid;\n                                            enrolparams.orderid = response.paymentid;\n                                            enrolparams.productid = productid;\n                                            enrolparams.organization = organization;\n                                            enrolparams.discountprice = orgorderdetailsresp.discountprice;\n                                            enrolparams.discounttype = orgorderdetailsresp.discounttype;\n                                            enrolparams.discounttableid = orgorderdetailsresp.discounttableid;\n                                            enrolparams.autoapproval = orgorderdetailsresp.autoapproval;\n                                            var promise = Ajax.call([{\n                                                methodname: 'local_exam_enrouser',\n                                                args: enrolparams\n                                            }]);\n                                            promise[0].done(function(resp) {\n                                                if(resp.response == 'success') { \n                                                    ModalFactory.create({\n                                                        title: getString('confirm', 'local_exams'),\n                                                        type: ModalFactory.types.DEFAULT,\n                                                        body: getString('ordersubmitted', 'tool_product')\n                                                    }).done(function(modal) {\n                                                        this.modal = modal;\n                                                        e.preventDefault();\n                                                        modal.show();\n                                                        window.location = M.cfg.wwwroot + '/local/exams/index.php';\n                                                    }.bind(this));\n                                                } else {\n                                                    var promise = Ajax.call([{\n                                                        methodname: 'local_exam_revert_enroluser',\n                                                        args: enrolparams\n                                                    }]);\n                                                    modal.hide();\n                                                    HomePage.confirmbox(resp.response);\n                                                }\n                                            }).fail( (error) => {\n                                                var promise = Ajax.call([{\n                                                    methodname: 'local_exam_revert_enroluser',\n                                                    args: enrolparams\n                                                }]);\n                                                HomePage.confirmbox(error.message);\n                                            });\n                                        }\n                                    }).fail(function() {\n                                        // do something with the exception\n                                            console.log('exception');\n                                    });\n                                }\n                            } else {\n                                modal.hide();\n                                HomePage.confirmbox(resp.response);\n                            }\n\n                        }).fail( (error) => {\n                            HomePage.confirmbox(error.message);\n                        });\n\n                    } else if(damount > 0) {\n                        var params = {};\n                        params.examid = examid;\n                        params.profileid = profileid;\n                        params.scheduleid = scheduleid;\n                        params.type = type;\n                        params.tuserid = tuserid;\n                        params.orderid = 0;\n                        params.productid = productid;\n                        params.organization = organization;\n                        var promise = Ajax.call([{\n                            methodname: 'local_exam_enrouser',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {  \n                            if(resp.response == 'success') {\n                                let products = {};\n                                products.userid = tuserid;\n                                products.productid = productid;\n                                products.deductamount = damount;\n                                products.scheduleid = scheduleid;\n                                var promise = Ajax.call([{\n                                    methodname: 'local_exams_rescheduleuser',\n                                    args: products\n                                }]);\n                                promise[0].done(function(resp) {\n                                    window.location = M.cfg.wwwroot + '/local/exams/index.php';\n                                }).fail(function(err) {\n                                    HomePage.confirmbox(err.message);\n                                    //console.log('exception');\n                                });\n                            } else {\n                                modal.hide();\n                                HomePage.confirmbox(resp.response);\n                            }\n                        }).fail(function() {\n                            // do something with the exception\n                             console.log('exception');\n                        }); \n\n                    } else {\n                        var params = {};\n                        params.examid = examid;\n                        params.profileid = profileid;\n                        params.scheduleid = scheduleid;\n                        params.type = type;\n                        params.tuserid = tuserid;\n                        params.orderid = 0;\n                        params.productid = productid;\n                        params.organization = organization;\n                        var promise = Ajax.call([{\n                            methodname: 'local_exam_enrouser',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {  \n                            if(resp.response == 'success') {\n                                window.location = M.cfg.wwwroot + '/local/exams/index.php';\n                            } else {\n                                modal.hide();\n                                HomePage.confirmbox(resp.response);\n                            }                      \n                           \n                        }).fail(function() {\n                            // do something with the exception\n                             console.log('exception');\n                        }); \n                    }\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let editattempt = e.target.closest(Selectors.actions.editattempt);\n        if (editattempt) {\n            e.stopImmediatePropagation();\n            const title = editattempt.getAttribute('data-id') ?\n                getString('updateattempt', 'local_exams') :\n                getString('addattempt', 'local_exams');\n            const form = new Modalform({\n                formClass: 'local_exams\\\\form\\\\attemptform',\n                args: {id: editattempt.getAttribute('data-id'), examid: editattempt.getAttribute('data-examid')},\n                modalConfig: {title},\n                returnFocus: editattempt,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let deleteattempt = e.target.closest(Selectors.actions.deleteattempt);\n        if (deleteattempt) {\n            e.stopImmediatePropagation();\n            const attemptid = deleteattempt.getAttribute('data-id');\n            const examid = deleteattempt.getAttribute('data-examid');\n            ModalFactory.create({\n                title: getString('deleteattempt', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deleteattemptconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('delete', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.attemptid = attemptid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_exam_deleteattempt',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        if (resp) {\n                            window.location = M.cfg.wwwroot + '/local/exams/examattempts.php?id='+examid;\n                        } else {\n                            HomePage.confirmbox(getString('attemptpurchasesavailable', 'local_exams'))\n                            modal.destroy();\n                        }\n                    }).fail(function() {\n                        // do something with the exception\n                         console.log('exception');\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        } \n\n        \n    });\n\n    $('.profilelanguage').on('change', function() {\n        var language = $(this).val();\n        var product = $(this).attr('data-product');\n        $(\".select_btn\").attr(\"data-language\", language);\n        $(\"#global_filter\").attr(\"data-examvariation\", product);\n    });\n};\nexport const load = (args) => {\n    console.log(args);\n    $(\"#global_filter\").attr(\"data-examvariation\", args);\n}\n"],"names":["Selectors","createexam","deleteexam","publishexam","viewexam","viewsectors","bookhall","mapcompetencies","competencies","addprofile","deleteprofile","viewprofile","enrolusertoexam","editattempt","deleteattempt","HomePage","homepage","document","addEventListener","e","element","target","closest","stopImmediatePropagation","title","getAttribute","form","ModalForm","formClass","args","id","modalConfig","returnFocus","events","FORM_SUBMITTED","window","location","reload","show","examid","create","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","preventDefault","params","Ajax","call","methodname","resp","M","cfg","wwwroot","fail","console","log","bind","this","options","setLarge","typeid","hallid","examdate","temp","methodName","trigger","Templates","render","html","js","replaceNodeContents","hidden","hide","destroy","profileid","scheduleid","tuserid","damount","productid","organization","orgofficial","renderForPromise","then","appendNodeContents","isNaN","enrolparams","orderid","response","confirmbox","entityid","referenceid","orgorderdetailsresp","returnparams","autoapproval","event","products","p_orderid","paymentid","info","discountprice","discounttype","discounttableid","error","message","success","DEFAULT","userid","deductamount","err","Modalform","attemptid","language","val","product","attr"],"mappings":"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"}