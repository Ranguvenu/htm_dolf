{"version":3,"file":"replaceuser.min.js","sources":["../src/replaceuser.js"],"sourcesContent":["import TPDynamicForm from 'local_trainingprogram/dynamicform';\nimport Modalform from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport homepage from 'theme_academy/homepage';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nconst Selectors = {\n    actions: {\n        replaceuser: '[data-action=\"replaceuser\"]',\n        editprofilecode: '[data-action=\"profilecode\"]',\n        edituser: '[data-action=\"users\"]',\n\n    },\n};\nconst render_template = (template, selector, params, append = false) => {\n\tif(!append){\n\t\t$(selector).empty();\n\t}\n\tTemplates.renderForPromise(template, params).then(({html, js}) => {\n\t\tTemplates.appendNodeContents(selector, html, js);\n\t});\t\n}\nlet HomePage = new homepage();\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n\n          let profilecode = e.target.closest(Selectors.actions.editprofilecode);\n        if (profilecode) {\n            e.preventDefault();\n            const title = getString('updateprofilecode', 'local_exams');\n            const form = new Modalform({\n                formClass: 'local_exams\\\\form\\\\updateprofilecode',\n                args: {id: profilecode.getAttribute('data-id'),\n                    profileid: profilecode.getAttribute('data-profileid'),\n                    examid:profilecode.getAttribute('data-examid'),\n                    userid:profilecode.getAttribute('data-userid'),\n\n                },\n                 modalConfig: {title},\n                returnFocus: profilecode,\n            });\n         form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();   \n        } \n\n\n        let listorg = e.target.closest(Selectors.actions.edituser);\n        if (listorg) {\n            e.preventDefault();\n            const title = getString('edituser', 'local_exams');\n            const form = new Modalform({\n                formClass: 'local_exams\\\\form\\\\updateuser',\n                args: {id: listorg.getAttribute('data-id'),\n                      examid:listorg.getAttribute('data-examid'),\n                      userid:listorg.getAttribute('data-userid'),\n                },\n                 modalConfig: {title},\n                returnFocus: listorg,\n            });\n         form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();   \n        }\n\n\n        let replaceuser = e.target.closest(Selectors.actions.replaceuser);\n        if (replaceuser) {\n            e.preventDefault();\n            e.stopImmediatePropagation()\n            const productid = replaceuser.getAttribute('data-productid');\n            const userid = replaceuser.getAttribute('data-userid');\n            const username = replaceuser.getAttribute('data-username');\n            const entityname = replaceuser.getAttribute('data-entityname');\n            const costtype = replaceuser.getAttribute('data-costtype');\n            const useridnumber = replaceuser.getAttribute('data-useridnumber');\n            const replacementfee = replaceuser.getAttribute('data-replacementfee');\n            const isadmin = replaceuser.getAttribute('data-issiteadmin');\n            const entitytype = replaceuser.getAttribute('data-entitytype');\n            const orgofficialenrolled = replaceuser.getAttribute('data-orgofficialenrolled');\n            const ownedby = replaceuser.getAttribute('data-ownedby');\n            const cangenerateinvoice = replaceuser.getAttribute('data-cangenerateinvoice');\n            var displayparams = {};\n            displayparams.username = username;\n            displayparams.entityname = entityname;\n            displayparams.isadmin = isadmin;\n            ModalFactory.create({\n                title: getString('replaceconfirm', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('replaceconfirmmessage', 'local_exams', displayparams)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('replace', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    if(ownedby == 'CISI' || ownedby == 'CII') {\n                        HomePage.confirmbox(getString('notallowedtoreplacemessage', 'local_exams'));\n                    } else {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                          modal.hide();\n                        if(costtype == 0 || (isadmin == 1 && orgofficialenrolled == 0) || cangenerateinvoice == 0) {\n                           \n                            const title = getString('replaceuser', 'local_exams');\n                            const form = new TPDynamicForm({\n                                formClass: 'local_exams\\\\form\\\\replaceuserform',\n                                args: {productid: replaceuser.getAttribute('data-productid'),userid: replaceuser.getAttribute('data-userid'),username: replaceuser.getAttribute('data-username'),useridnumber: replaceuser.getAttribute('data-useridnumber'),entitytype: replaceuser.getAttribute('data-entitytype') ,costtype: replaceuser.getAttribute('data-costtype'),policyconfirm:0},\n                                modalConfig: {title},\n                                returnFocus: replaceuser,\n                            });\n                            form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                event.preventDefault();\n                                e.preventDefault();\n                                Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                    Templates.appendNodeContents('.modal-content', html, js);\n                                });\n                                let productdata;\n                                productdata = event.detail;\n                                console.log(productdata);\n                                var replaceparams = {};\n                                replaceparams.productid=productdata.productid;\n                                replaceparams.rootid = productdata.rootid;\n                                replaceparams.fieldid = productdata.fieldid;\n                                replaceparams.fromuserid = productdata.fromuserid;\n                                replaceparams.touserid = productdata.touserid;\n                                replaceparams.replacementfee = replacementfee;\n                                replaceparams.entitytype = entitytype;\n                                replaceparams.policyconfirm = 0;\n                                replaceparams.costtype = costtype;\n                                replaceparams.enrollinguserid = productdata.enrollinguserid;\n                                replaceparams.cangenerateinvoice = cangenerateinvoice;\n                                var promise = Ajax.call([{\n                                    methodname: 'local_exams_replaceuser',\n                                    args: replaceparams\n                                }]);\n                                promise[0].done(function(resp) {\n                                    if(resp.response == 'success') {\n                                        if(entitytype =='exam') {\n                                            window.location = M.cfg.wwwroot + '/local/exams/examusers.php?id='+productdata.rootid;\n                                        } else if(entitytype =='trainingprogram') {\n                                            window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+productdata.rootid;\n                                        } else {\n                                            window.location = M.cfg.wwwroot + '/local/events/attendees.php?id='+productdata.rootid;\n                                        }\n                                    } else {\n                                        modal.hide();\n                                        HomePage.confirmbox(resp.response);\n                                    }\n                                }).fail(function(err) {\n                                    HomePage.confirmbox(err.message);\n                                    //console.log('exception');\n                                });\n                            });\n                            form.show();\n                        } else if(isadmin == 1 && orgofficialenrolled == 1) {\n                            modal.hide();\n                            const title = getString('reasonreplace', 'local_exams');\n                            const form = new TPDynamicForm({\n                                formClass: 'local_exams\\\\form\\\\reasonform',\n                                args: {entitytype: entitytype,userid: userid, productid: productid},\n                                modalConfig: {title},\n                                returnFocus: replaceuser,\n                            });\n                            form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                const data = event.detail;\n                                Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                    Templates.appendNodeContents('.modal-content', html, js);\n                                });\n                                if(data.policy > 0) {\n                                   var policyconfirm = 1;\n                                    ModalFactory.create({                               \n                                        type: ModalFactory.types.SAVE_CANCEL,\n                                        body: getString('replacementproceedmessage', 'local_exams',replacementfee)\n                                    }).done(function(modal) {\n                                        this.modal = modal;\n                                        modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                        modal.getRoot().on(ModalEvents.save, function(e) {\n                                            e.preventDefault();\n                                            e.stopImmediatePropagation();\n                                            modal.hide();\n                                            const title = getString('replaceuser', 'local_exams');\n                                            const form = new TPDynamicForm({\n                                                formClass: 'local_exams\\\\form\\\\replaceuserform',\n                                                args: {productid: replaceuser.getAttribute('data-productid'),userid: replaceuser.getAttribute('data-userid'),username: replaceuser.getAttribute('data-username'),useridnumber: replaceuser.getAttribute('data-useridnumber'),entitytype: replaceuser.getAttribute('data-entitytype'),costtype: replaceuser.getAttribute('data-costtype'),policyconfirm:1},\n                                                modalConfig: {title},\n                                                returnFocus: replaceuser,\n                                            });\n                                            form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                                event.preventDefault();\n                                                e.preventDefault();\n                                                Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                                    Templates.appendNodeContents('.modal-content', html, js);\n                                                });\n                                                let productdata;\n                                                productdata = event.detail;\n                                                console.log(productdata);\n                                                var replaceparams = {};\n                                                replaceparams.productid=productdata.productid;\n                                                replaceparams.rootid = productdata.rootid;\n                                                replaceparams.fieldid = productdata.fieldid;\n                                                replaceparams.fromuserid = productdata.fromuserid;\n                                                replaceparams.touserid = productdata.touserid;\n                                                replaceparams.replacementfee = replacementfee;\n                                                replaceparams.entitytype = entitytype;\n                                                replaceparams.policyconfirm = 1;\n                                                replaceparams.costtype = costtype;\n                                                replaceparams.enrollinguserid = productdata.enrollinguserid;\n                                                replaceparams.cangenerateinvoice = cangenerateinvoice;\n                                                var promise = Ajax.call([{\n                                                    methodname: 'local_exams_replaceuser',\n                                                    args: replaceparams\n                                                }]);\n                                                Templates.render('tool_product/loader');\n                                                promise[0].done(function(resp) {\n                                                    if(resp.response == 'success') {\n                                                        if(entitytype =='exam') {\n                                                            window.location = M.cfg.wwwroot + '/local/exams/examusers.php?id='+productdata.rootid;\n                                                        } else if(entitytype =='trainingprogram') {\n                                                            window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+productdata.rootid;\n                                                        } else {\n                                                            window.location = M.cfg.wwwroot + '/local/events/attendees.php?id='+productdata.rootid;\n                                                        }\n                                                    } else {\n                                                        modal.hide();\n                                                        HomePage.confirmbox(resp.response);\n                                                    }\n                                                }).fail(function(err) {\n                                                    HomePage.confirmbox(err.message);\n                                                    //console.log('exception');\n                                                });\n                                            });\n                                            form.show();\n                                        }.bind(this));\n                                       modal.show();\n                                    }.bind(this));\n                                } else {\n                                   var policyconfirm = 0;\n                                   e.preventDefault();\n                                    e.stopImmediatePropagation();\n                                    modal.hide();\n                                    const title = getString('replaceuser', 'local_exams');\n                                    const form = new TPDynamicForm({\n                                        formClass: 'local_exams\\\\form\\\\replaceuserform',\n                                        args: {productid: replaceuser.getAttribute('data-productid'),userid: replaceuser.getAttribute('data-userid'),username: replaceuser.getAttribute('data-username'),useridnumber: replaceuser.getAttribute('data-useridnumber'),entitytype: replaceuser.getAttribute('data-entitytype'),costtype: replaceuser.getAttribute('data-costtype'),policyconfirm:0},\n                                        modalConfig: {title},\n                                        returnFocus: replaceuser,\n                                    });\n                                    form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                        event.preventDefault();\n                                        e.preventDefault();\n                                        Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                            Templates.appendNodeContents('.modal-content', html, js);\n                                        });\n                                        let productdata;\n                                        productdata = event.detail;\n                                        console.log(productdata);\n                                        var replaceparams = {};\n                                        replaceparams.productid=productdata.productid;\n                                        replaceparams.rootid = productdata.rootid;\n                                        replaceparams.fieldid = productdata.fieldid;\n                                        replaceparams.fromuserid = productdata.fromuserid;\n                                        replaceparams.touserid = productdata.touserid;\n                                        replaceparams.replacementfee = replacementfee;\n                                        replaceparams.entitytype = entitytype;\n                                        replaceparams.policyconfirm = 0;\n                                        replaceparams.costtype = costtype;\n                                        replaceparams.enrollinguserid = productdata.enrollinguserid;\n                                        replaceparams.cangenerateinvoice = cangenerateinvoice;\n                                        \n                                        var promise = Ajax.call([{\n                                            methodname: 'local_exams_replaceuser',\n                                            args: replaceparams\n                                        }]);\n                                        Templates.render('tool_product/loader');\n                                        promise[0].done(function(resp) {\n                                            if(resp.response == 'success') {\n                                                if(entitytype =='exam') {\n                                                    window.location = M.cfg.wwwroot + '/local/exams/examusers.php?id='+productdata.rootid;\n                                                } else if(entitytype =='trainingprogram') {\n                                                    window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+productdata.rootid;\n                                                } else {\n                                                    window.location = M.cfg.wwwroot + '/local/events/attendees.php?id='+productdata.rootid;\n                                                }\n                                            } else {\n                                                modal.hide();\n                                                HomePage.confirmbox(resp.response);\n                                            }\n                                        }).fail(function(err) {\n                                            HomePage.confirmbox(err.message);\n                                            //console.log('exception');\n                                        });\n                                    });\n                                    form.show();\n                                }\n                            });\n                            form.show();\n                        } else {\n                            ModalFactory.create({                               \n                                type: ModalFactory.types.SAVE_CANCEL,\n                                body: getString('replacementproceedmessage', 'local_exams',replacementfee)\n                            }).done(function(modal) {\n                                this.modal = modal;\n                                modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                                modal.getRoot().on(ModalEvents.save, function(e) {\n                                    e.preventDefault();\n                                    e.stopImmediatePropagation();\n                                    modal.hide();\n                                    const title = getString('replaceuser', 'local_exams');\n                                    const form = new TPDynamicForm({\n                                        formClass: 'local_exams\\\\form\\\\replaceuserform',\n                                        args: {productid: replaceuser.getAttribute('data-productid'),userid: replaceuser.getAttribute('data-userid'),username: replaceuser.getAttribute('data-username'),useridnumber: replaceuser.getAttribute('data-useridnumber'),entitytype: replaceuser.getAttribute('data-entitytype'),costtype: replaceuser.getAttribute('data-costtype')},\n                                        modalConfig: {title},\n                                        returnFocus: replaceuser,\n                                    });\n                                    form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                                        event.preventDefault();\n                                        e.preventDefault();\n                                        Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                                            Templates.appendNodeContents('.modal-content', html, js);\n                                        });\n                                        let productdata;\n                                        productdata = event.detail;\n                                        console.log(productdata);\n                                        var replaceparams = {};\n                                        replaceparams.productid=productdata.productid;\n                                        replaceparams.rootid = productdata.rootid;\n                                        replaceparams.fieldid = productdata.fieldid;\n                                        replaceparams.fromuserid = productdata.fromuserid;\n                                        replaceparams.touserid = productdata.touserid;\n                                        replaceparams.replacementfee = replacementfee;\n                                        replaceparams.entitytype = entitytype;\n                                        replaceparams.policyconfirm = 1;\n                                        replaceparams.costtype = costtype;\n                                        replaceparams.enrollinguserid = productdata.enrollinguserid;\n                                        replaceparams.cangenerateinvoice = cangenerateinvoice;\n                                        \n                                        var promise = Ajax.call([{\n                                            methodname: 'local_exams_replaceuser',\n                                            args: replaceparams\n                                        }]);\n                                        Templates.render('tool_product/loader');\n                                        promise[0].done(function(resp) {\n                                            if(resp.response == 'success') {\n                                                if(entitytype =='exam') {\n                                                    window.location = M.cfg.wwwroot + '/local/exams/examusers.php?id='+productdata.rootid;\n                                                } else if(entitytype =='trainingprogram') {\n                                                    window.location = M.cfg.wwwroot + '/local/trainingprogram/programenrolleduserslist.php?programid='+productdata.rootid;\n                                                } else {\n                                                    window.location = M.cfg.wwwroot + '/local/events/attendees.php?id='+productdata.rootid;\n                                                }\n                                            } else {\n                                                modal.hide();\n                                                HomePage.confirmbox(resp.response);\n                                            }\n                                        }).fail(function(err) {\n                                            HomePage.confirmbox(err.message);\n                                            //console.log('exception');\n                                        });\n                                    });\n                                    form.show();\n                                }.bind(this));\n                                modal.show();\n                            }.bind(this));\n                        } \n                    }\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n\n\n\n    });\n\n};\n"],"names":["Selectors","replaceuser","editprofilecode","edituser","HomePage","homepage","document","addEventListener","e","profilecode","target","closest","preventDefault","title","form","Modalform","formClass","args","id","getAttribute","profileid","examid","userid","modalConfig","returnFocus","events","FORM_SUBMITTED","window","location","reload","show","listorg","stopImmediatePropagation","productid","username","entityname","costtype","replacementfee","isadmin","entitytype","orgofficialenrolled","ownedby","cangenerateinvoice","displayparams","create","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","confirmbox","hide","TPDynamicForm","useridnumber","policyconfirm","event","productdata","renderForPromise","then","_ref2","html","js","appendNodeContents","detail","console","log","replaceparams","rootid","fieldid","fromuserid","touserid","enrollinguserid","Ajax","call","methodname","resp","response","M","cfg","wwwroot","fail","err","message","data","_ref3","policy","_ref4","promise","render","bind","this","_ref5","_ref6"],"mappings":"uyBAQMA,kBACO,CACLC,YAAa,8BACbC,gBAAiB,8BACjBC,SAAU,6BAYdC,SAAW,IAAIC,gCACC,KAChBC,SAASC,iBAAiB,SAAS,SAASC,OAElCC,YAAcD,EAAEE,OAAOC,QAAQX,kBAAkBE,oBACnDO,YAAa,CACbD,EAAEI,uBACIC,OAAQ,mBAAU,oBAAqB,eACvCC,KAAO,IAAIC,mBAAU,CACvBC,UAAW,uCACXC,KAAM,CAACC,GAAIT,YAAYU,aAAa,WAChCC,UAAWX,YAAYU,aAAa,kBACpCE,OAAOZ,YAAYU,aAAa,eAChCG,OAAOb,YAAYU,aAAa,gBAGnCI,YAAa,CAACV,MAAAA,OACfW,YAAaf,cAEpBK,KAAKP,iBAAiBO,KAAKW,OAAOC,gBAAgB,IAAMC,OAAOC,SAASC,WACrEf,KAAKgB,WAILC,QAAUvB,EAAEE,OAAOC,QAAQX,kBAAkBG,aAC7C4B,QAAS,CACTvB,EAAEI,uBACIC,OAAQ,mBAAU,WAAY,eAC9BC,KAAO,IAAIC,mBAAU,CACvBC,UAAW,gCACXC,KAAM,CAACC,GAAIa,QAAQZ,aAAa,WAC1BE,OAAOU,QAAQZ,aAAa,eAC5BG,OAAOS,QAAQZ,aAAa,gBAEjCI,YAAa,CAACV,MAAAA,OACfW,YAAaO,UAEpBjB,KAAKP,iBAAiBO,KAAKW,OAAOC,gBAAgB,IAAMC,OAAOC,SAASC,WACrEf,KAAKgB,WAIL7B,YAAcO,EAAEE,OAAOC,QAAQX,kBAAkBC,gBACjDA,YAAa,CACbO,EAAEI,iBACFJ,EAAEwB,iCACIC,UAAYhC,YAAYkB,aAAa,kBACrCG,OAASrB,YAAYkB,aAAa,eAClCe,SAAWjC,YAAYkB,aAAa,iBACpCgB,WAAalC,YAAYkB,aAAa,mBACtCiB,SAAWnC,YAAYkB,aAAa,iBAEpCkB,gBADepC,YAAYkB,aAAa,qBACvBlB,YAAYkB,aAAa,wBAC1CmB,QAAUrC,YAAYkB,aAAa,oBACnCoB,WAAatC,YAAYkB,aAAa,mBACtCqB,oBAAsBvC,YAAYkB,aAAa,4BAC/CsB,QAAUxC,YAAYkB,aAAa,gBACnCuB,mBAAqBzC,YAAYkB,aAAa,+BAChDwB,cAAgB,GACpBA,cAAcT,SAAWA,SACzBS,cAAcR,WAAaA,WAC3BQ,cAAcL,QAAUA,+BACXM,OAAO,CAChB/B,OAAO,mBAAU,iBAAkB,eACnCgC,KAAMC,uBAAaC,MAAMC,YACzBC,MAAM,mBAAU,wBAAyB,cAAeN,iBACzDO,KAAK,SAASC,YACRA,MAAQA,MACbA,MAAMC,mBAAkB,mBAAU,UAAW,gBAC7CD,MAAME,UAAUC,GAAGC,sBAAYC,KAAM,SAAShD,MAC5B,QAAXiC,SAAgC,OAAXA,QACpBrC,SAASqD,YAAW,mBAAU,6BAA8B,wBAE5DjD,EAAEI,iBACFJ,EAAEwB,2BACAmB,MAAMO,OACO,GAAZtB,UAA6B,GAAXE,SAAuC,GAAvBE,qBAAmD,GAAtBE,mBAAyB,OAEjF7B,OAAQ,mBAAU,cAAe,eACjCC,KAAO,IAAI6C,qBAAc,CAC3B3C,UAAW,qCACXC,KAAM,CAACgB,UAAWhC,YAAYkB,aAAa,kBAAkBG,OAAQrB,YAAYkB,aAAa,eAAee,SAAUjC,YAAYkB,aAAa,iBAAiByC,aAAc3D,YAAYkB,aAAa,qBAAqBoB,WAAYtC,YAAYkB,aAAa,mBAAoBiB,SAAUnC,YAAYkB,aAAa,iBAAiB0C,cAAc,GACxVtC,YAAa,CAACV,MAAAA,OACdW,YAAavB,cAEjBa,KAAKP,iBAAiBO,KAAKW,OAAOC,gBAAiBoC,YAM3CC,YALJD,MAAMlD,iBACNJ,EAAEI,oCACQoD,iBAAiB,sBAAuB,IAAIC,MAAKC,YAACC,KAACA,KAADC,GAAOA,6BACrDC,mBAAmB,iBAAkBF,KAAMC,OAGzDL,YAAcD,MAAMQ,OACpBC,QAAQC,IAAIT,iBACRU,cAAgB,GACpBA,cAAcxC,UAAU8B,YAAY9B,UACpCwC,cAAcC,OAASX,YAAYW,OACnCD,cAAcE,QAAUZ,YAAYY,QACpCF,cAAcG,WAAab,YAAYa,WACvCH,cAAcI,SAAWd,YAAYc,SACrCJ,cAAcpC,eAAiBA,eAC/BoC,cAAclC,WAAaA,WAC3BkC,cAAcZ,cAAgB,EAC9BY,cAAcrC,SAAWA,SACzBqC,cAAcK,gBAAkBf,YAAYe,gBAC5CL,cAAc/B,mBAAqBA,mBACrBqC,cAAKC,KAAK,CAAC,CACrBC,WAAY,0BACZhE,KAAMwD,iBAEF,GAAGvB,MAAK,SAASgC,MACD,WAAjBA,KAAKC,SAEAxD,OAAOC,SADK,QAAbW,WACmB6C,EAAEC,IAAIC,QAAU,iCAAiCvB,YAAYW,OAC5D,mBAAbnC,WACY6C,EAAEC,IAAIC,QAAU,iEAAiEvB,YAAYW,OAE7FU,EAAEC,IAAIC,QAAU,kCAAkCvB,YAAYW,QAGpFvB,MAAMO,OACNtD,SAASqD,WAAWyB,KAAKC,cAE9BI,MAAK,SAASC,KACbpF,SAASqD,WAAW+B,IAAIC,eAIhC3E,KAAKgB,YACF,GAAc,GAAXQ,SAAuC,GAAvBE,oBAA0B,CAChDW,MAAMO,aACA7C,OAAQ,mBAAU,gBAAiB,eACnCC,KAAO,IAAI6C,qBAAc,CAC3B3C,UAAW,gCACXC,KAAM,CAACsB,WAAYA,WAAWjB,OAAQA,OAAQW,UAAWA,WACzDV,YAAa,CAACV,MAAAA,OACdW,YAAavB,cAEjBa,KAAKP,iBAAiBO,KAAKW,OAAOC,gBAAiBoC,cACzC4B,KAAO5B,MAAMQ,6BACTN,iBAAiB,sBAAuB,IAAIC,MAAK0B,YAACxB,KAACA,KAADC,GAAOA,6BACrDC,mBAAmB,iBAAkBF,KAAMC,OAEtDsB,KAAKE,OAAS,EAAG,wBAEHhD,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,YACzBC,MAAM,mBAAU,4BAA6B,cAAcZ,kBAC5Da,KAAK,SAASC,YACRA,MAAQA,MACbA,MAAMC,mBAAkB,mBAAU,UAAW,gBAC7CD,MAAME,UAAUC,GAAGC,sBAAYC,KAAM,SAAShD,GAC1CA,EAAEI,iBACFJ,EAAEwB,2BACFmB,MAAMO,aACA7C,OAAQ,mBAAU,cAAe,eACjCC,KAAO,IAAI6C,qBAAc,CAC3B3C,UAAW,qCACXC,KAAM,CAACgB,UAAWhC,YAAYkB,aAAa,kBAAkBG,OAAQrB,YAAYkB,aAAa,eAAee,SAAUjC,YAAYkB,aAAa,iBAAiByC,aAAc3D,YAAYkB,aAAa,qBAAqBoB,WAAYtC,YAAYkB,aAAa,mBAAmBiB,SAAUnC,YAAYkB,aAAa,iBAAiB0C,cAAc,GACvVtC,YAAa,CAACV,MAAAA,OACdW,YAAavB,cAEjBa,KAAKP,iBAAiBO,KAAKW,OAAOC,gBAAiBoC,YAM3CC,YALJD,MAAMlD,iBACNJ,EAAEI,oCACQoD,iBAAiB,sBAAuB,IAAIC,MAAK4B,YAAC1B,KAACA,KAADC,GAAOA,6BACrDC,mBAAmB,iBAAkBF,KAAMC,OAGzDL,YAAcD,MAAMQ,OACpBC,QAAQC,IAAIT,iBACRU,cAAgB,GACpBA,cAAcxC,UAAU8B,YAAY9B,UACpCwC,cAAcC,OAASX,YAAYW,OACnCD,cAAcE,QAAUZ,YAAYY,QACpCF,cAAcG,WAAab,YAAYa,WACvCH,cAAcI,SAAWd,YAAYc,SACrCJ,cAAcpC,eAAiBA,eAC/BoC,cAAclC,WAAaA,WAC3BkC,cAAcZ,cAAgB,EAC9BY,cAAcrC,SAAWA,SACzBqC,cAAcK,gBAAkBf,YAAYe,gBAC5CL,cAAc/B,mBAAqBA,uBAC/BoD,QAAUf,cAAKC,KAAK,CAAC,CACrBC,WAAY,0BACZhE,KAAMwD,oCAEAsB,OAAO,uBACjBD,QAAQ,GAAG5C,MAAK,SAASgC,MACD,WAAjBA,KAAKC,SAEAxD,OAAOC,SADK,QAAbW,WACmB6C,EAAEC,IAAIC,QAAU,iCAAiCvB,YAAYW,OAC5D,mBAAbnC,WACY6C,EAAEC,IAAIC,QAAU,iEAAiEvB,YAAYW,OAE7FU,EAAEC,IAAIC,QAAU,kCAAkCvB,YAAYW,QAGpFvB,MAAMO,OACNtD,SAASqD,WAAWyB,KAAKC,cAE9BI,MAAK,SAASC,KACbpF,SAASqD,WAAW+B,IAAIC,eAIhC3E,KAAKgB,QACPkE,KAAKC,OACR9C,MAAMrB,QACPkE,KAAKC,WACJ,CAEJzF,EAAEI,iBACDJ,EAAEwB,2BACFmB,MAAMO,aACA7C,OAAQ,mBAAU,cAAe,eACjCC,KAAO,IAAI6C,qBAAc,CAC3B3C,UAAW,qCACXC,KAAM,CAACgB,UAAWhC,YAAYkB,aAAa,kBAAkBG,OAAQrB,YAAYkB,aAAa,eAAee,SAAUjC,YAAYkB,aAAa,iBAAiByC,aAAc3D,YAAYkB,aAAa,qBAAqBoB,WAAYtC,YAAYkB,aAAa,mBAAmBiB,SAAUnC,YAAYkB,aAAa,iBAAiB0C,cAAc,GACvVtC,YAAa,CAACV,MAAAA,OACdW,YAAavB,cAEjBa,KAAKP,iBAAiBO,KAAKW,OAAOC,gBAAiBoC,YAM3CC,YALJD,MAAMlD,iBACNJ,EAAEI,oCACQoD,iBAAiB,sBAAuB,IAAIC,MAAKiC,YAAC/B,KAACA,KAADC,GAAOA,6BACrDC,mBAAmB,iBAAkBF,KAAMC,OAGzDL,YAAcD,MAAMQ,OACpBC,QAAQC,IAAIT,iBACRU,cAAgB,GACpBA,cAAcxC,UAAU8B,YAAY9B,UACpCwC,cAAcC,OAASX,YAAYW,OACnCD,cAAcE,QAAUZ,YAAYY,QACpCF,cAAcG,WAAab,YAAYa,WACvCH,cAAcI,SAAWd,YAAYc,SACrCJ,cAAcpC,eAAiBA,eAC/BoC,cAAclC,WAAaA,WAC3BkC,cAAcZ,cAAgB,EAC9BY,cAAcrC,SAAWA,SACzBqC,cAAcK,gBAAkBf,YAAYe,gBAC5CL,cAAc/B,mBAAqBA,uBAE/BoD,QAAUf,cAAKC,KAAK,CAAC,CACrBC,WAAY,0BACZhE,KAAMwD,oCAEAsB,OAAO,uBACjBD,QAAQ,GAAG5C,MAAK,SAASgC,MACD,WAAjBA,KAAKC,SAEAxD,OAAOC,SADK,QAAbW,WACmB6C,EAAEC,IAAIC,QAAU,iCAAiCvB,YAAYW,OAC5D,mBAAbnC,WACY6C,EAAEC,IAAIC,QAAU,iEAAiEvB,YAAYW,OAE7FU,EAAEC,IAAIC,QAAU,kCAAkCvB,YAAYW,QAGpFvB,MAAMO,OACNtD,SAASqD,WAAWyB,KAAKC,cAE9BI,MAAK,SAASC,KACbpF,SAASqD,WAAW+B,IAAIC,eAIhC3E,KAAKgB,WAGbhB,KAAKgB,mCAEQc,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,YACzBC,MAAM,mBAAU,4BAA6B,cAAcZ,kBAC5Da,KAAK,SAASC,YACRA,MAAQA,MACbA,MAAMC,mBAAkB,mBAAU,UAAW,gBAC7CD,MAAME,UAAUC,GAAGC,sBAAYC,KAAM,SAAShD,GAC1CA,EAAEI,iBACFJ,EAAEwB,2BACFmB,MAAMO,aACA7C,OAAQ,mBAAU,cAAe,eACjCC,KAAO,IAAI6C,qBAAc,CAC3B3C,UAAW,qCACXC,KAAM,CAACgB,UAAWhC,YAAYkB,aAAa,kBAAkBG,OAAQrB,YAAYkB,aAAa,eAAee,SAAUjC,YAAYkB,aAAa,iBAAiByC,aAAc3D,YAAYkB,aAAa,qBAAqBoB,WAAYtC,YAAYkB,aAAa,mBAAmBiB,SAAUnC,YAAYkB,aAAa,kBACxTI,YAAa,CAACV,MAAAA,OACdW,YAAavB,cAEjBa,KAAKP,iBAAiBO,KAAKW,OAAOC,gBAAiBoC,YAM3CC,YALJD,MAAMlD,iBACNJ,EAAEI,oCACQoD,iBAAiB,sBAAuB,IAAIC,MAAKkC,YAAChC,KAACA,KAADC,GAAOA,6BACrDC,mBAAmB,iBAAkBF,KAAMC,OAGzDL,YAAcD,MAAMQ,OACpBC,QAAQC,IAAIT,iBACRU,cAAgB,GACpBA,cAAcxC,UAAU8B,YAAY9B,UACpCwC,cAAcC,OAASX,YAAYW,OACnCD,cAAcE,QAAUZ,YAAYY,QACpCF,cAAcG,WAAab,YAAYa,WACvCH,cAAcI,SAAWd,YAAYc,SACrCJ,cAAcpC,eAAiBA,eAC/BoC,cAAclC,WAAaA,WAC3BkC,cAAcZ,cAAgB,EAC9BY,cAAcrC,SAAWA,SACzBqC,cAAcK,gBAAkBf,YAAYe,gBAC5CL,cAAc/B,mBAAqBA,uBAE/BoD,QAAUf,cAAKC,KAAK,CAAC,CACrBC,WAAY,0BACZhE,KAAMwD,oCAEAsB,OAAO,uBACjBD,QAAQ,GAAG5C,MAAK,SAASgC,MACD,WAAjBA,KAAKC,SAEAxD,OAAOC,SADK,QAAbW,WACmB6C,EAAEC,IAAIC,QAAU,iCAAiCvB,YAAYW,OAC5D,mBAAbnC,WACY6C,EAAEC,IAAIC,QAAU,iEAAiEvB,YAAYW,OAE7FU,EAAEC,IAAIC,QAAU,kCAAkCvB,YAAYW,QAGpFvB,MAAMO,OACNtD,SAASqD,WAAWyB,KAAKC,cAE9BI,MAAK,SAASC,KACbpF,SAASqD,WAAW+B,IAAIC,eAIhC3E,KAAKgB,QACPkE,KAAKC,OACP9C,MAAMrB,QACRkE,KAAKC,QAGjBD,KAAKC,OACP9C,MAAMrB,QACRkE,KAAKC"}