{"version":3,"file":"bulkenrollment.min.js","sources":["../src/bulkenrollment.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module bulkenrollment\n *\n * @module     local_exams/bulkenrollment\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport homepage from 'theme_academy/homepage';\nimport Fragment from 'core/fragment';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport $ from 'jquery';\nconst Selectors = {\n    actions: {\n        removeuserconfirmation: '[data-action=\"removeuserconfirmation\"]',\n        confirmbulkenrolluser: '[data-action=\"confirmbulkenrolluser\"]',\n        \n    },\n};\nlet HomePage = new homepage();\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        let removeuserconfirmation = e.target.closest(Selectors.actions.removeuserconfirmation);\n        if (removeuserconfirmation) {\n            e.preventDefault();\n            e.stopImmediatePropagation()\n            const rootid = removeuserconfirmation.getAttribute('data-rootid');\n            const fieldid = removeuserconfirmation.getAttribute('data-fieldid');\n            const userid = removeuserconfirmation.getAttribute('data-id');\n            const type = removeuserconfirmation.getAttribute('data-type');\n            const userfullname = removeuserconfirmation.getAttribute('data-name');\n            const idnumber = removeuserconfirmation.getAttribute('data-idnumber');\n            var displayparams = {};\n            displayparams.userid = userid;\n            displayparams.userfullname = userfullname;\n            displayparams.idnumber = idnumber;\n            ModalFactory.create({\n                title: getString('removeconfirm', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body:getString('removeenrollmentconfirmmessage', 'local_exams', displayparams)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('yes', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    modal.hide();\n                    var params = {};\n                    params.rootid = rootid;\n                    params.fieldid = fieldid;\n                    params.userid = userid;\n                    params.type = type;\n                    var promise = Ajax.call([{\n                        methodname: 'local_exams_removeenrollmentconfirmation',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        promise[0].done(function(resp) {\n                            window.location.reload(true);\n                        }).fail(function() {\n                            console.log('exception');\n                        }); \n                    }).fail(function(err) {\n                        HomePage.confirmbox(err.message);\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n\n        let confirmbulkenrolluser = e.target.closest(Selectors.actions.confirmbulkenrolluser);\n        if (confirmbulkenrolluser) {\n            e.preventDefault();\n            e.stopImmediatePropagation()\n            const rootid = confirmbulkenrolluser.getAttribute('data-rootid');\n            const fieldid = confirmbulkenrolluser.getAttribute('data-fieldid');\n            const roleid = confirmbulkenrolluser.getAttribute('data-roleid');\n            const cusers = confirmbulkenrolluser.getAttribute('data-cusers');\n            const organization = confirmbulkenrolluser.getAttribute('data-organization');\n            const scheduleid = confirmbulkenrolluser.getAttribute('data-scheduleid');\n            const orgofficial = confirmbulkenrolluser.getAttribute('data-orgofficial');\n            const actionfor = confirmbulkenrolluser.getAttribute('data-actionfor');\n            const discount = confirmbulkenrolluser.getAttribute('data-discount');\n            const discounttableid = confirmbulkenrolluser.getAttribute('data-discounttableid');\n            const discounttype = confirmbulkenrolluser.getAttribute('data-discounttype');\n            ModalFactory.create({\n                title: '',\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('enrolconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('confirm', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    Templates.renderForPromise('tool_product/loader', {}).then(({html, js}) => {\n                        Templates.appendNodeContents('.modal-content', html, js);\n                    });\n                    e.preventDefault();\n                        var params = {};\n                        params.rootid = rootid;\n                        params.fieldid = fieldid;\n                        params.roleid = roleid;\n                        params.cusers = cusers;\n                        params.organization = organization;\n                        params.scheduleid = scheduleid;\n                        params.orgofficial = orgofficial;\n                        params.actionfor = actionfor;\n                        var promise = Ajax.call([{\n                            methodname: 'local_exams_registerbulkenrollusers',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                            if(resp.response == 'success') {\n                                var params = {};\n                                params.rootid = rootid;\n                                params.fieldid = fieldid;\n                                params.roleid = roleid;\n                                params.scheduleid = scheduleid;\n                                params.type = 'bulkenrollment';\n                                params.tuserid = cusers;\n                                params.organization = organization;\n                                params.orgofficial = orgofficial;\n                                params.actionfor = actionfor;\n                                params.discount = discount;\n                                params.discounttableid = discounttableid;\n                                params.discounttype = discounttype;\n                                var promise = Ajax.call([{\n                                    methodname: 'local_exams_generate_sadad_for_bulkenrollusers',\n                                    args: params\n                                }]);\n                                promise[0].done(function(resp) {\n                                    if(resp.response == 'success') {\n                                        window.location.href = resp.returnurl;\n                                    } else {\n                                        modal.hide();\n                                        HomePage.confirmbox(resp.response);\n                                    }\n        \n                                }).fail( (error) => {\n                                    HomePage.confirmbox(error.message);\n                                });\n\n                            } else {\n                                modal.hide();\n                                HomePage.confirmbox(resp.response);\n                            }\n                        \n                        }).fail(function(err) {\n                            HomePage.confirmbox(err.message);\n                        });\n                    \n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n    });\n};\n"],"names":["Selectors","removeuserconfirmation","confirmbulkenrolluser","HomePage","homepage","document","addEventListener","e","target","closest","preventDefault","stopImmediatePropagation","rootid","getAttribute","fieldid","userid","type","userfullname","idnumber","displayparams","create","title","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","hide","params","promise","Ajax","call","methodname","args","resp","window","location","reload","fail","console","log","err","confirmbox","message","bind","this","show","roleid","cusers","organization","scheduleid","orgofficial","actionfor","discount","discounttableid","discounttype","renderForPromise","then","html","js","appendNodeContents","response","tuserid","href","returnurl","error"],"mappings":"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"}