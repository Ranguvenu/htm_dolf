{"version":3,"file":"attemptpurchase.min.js","sources":["../src/attemptpurchase.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n// import ModalForm from 'local_trainingprogram/dynamicform';\nimport Modalform from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\nimport homepage from 'theme_academy/homepage';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport $ from 'jquery';\n\nconst Selectors = {\n    actions: {\n        purcahsenextattempt: '[data-action=\"purcahsenextattempt\"]',\n    },\n};\n\nlet HomePage = new homepage();\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        e.stopImmediatePropagation();\n        let attemptpurchase = e.target.closest(Selectors.actions.purcahsenextattempt);\n        if (attemptpurchase) {\n            \n            const examid               = attemptpurchase.getAttribute('data-examid'); \n            const userid               = attemptpurchase.getAttribute('data-tuserid'); \n            const profileid            = attemptpurchase.getAttribute('data-profileid'); \n            const lastattemptprofileid = attemptpurchase.getAttribute('data-lastattemptprofileid'); \n            const hallscheduleid       = attemptpurchase.getAttribute('data-scheduleid');\n            const purchasinguser       = attemptpurchase.getAttribute('data-purchasinguser');\n\n            ModalFactory.create({\n                title: getString('confirm', 'local_exams'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('purchaseconfirm', 'local_exams')\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('yes', 'local_exams'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    let promise = Ajax.call([{\n                        methodname: 'local_exams_attempt_request',\n                        args: {\n                            // examinfo: event.detail.returnparams\n                            examid               : examid,\n                            userid               : userid,\n                            profileid            : profileid,\n                            lastattemptprofileid : lastattemptprofileid,\n                            hallscheduleid       : hallscheduleid,\n                        }\n                    }]);\n                    promise[0].done((response) => {\n                        if(!response.status) {\n                            HomePage.confirmbox(response.response);\n                        } else {\n                            if (purchasinguser==\"orgoff\") {\n                                window.location = M.cfg.wwwroot + '/local/exams/examdetails.php?id='+examid+'&tuserid='+userid;\n                            } else {\n                                window.location = M.cfg.wwwroot + '/local/exams/hallschedule.php?examid='+examid+'&profileid='+profileid+'&tuserid='+userid;\n                            }\n\n                        }\n                    }).fail( (error) => {\t\t\t\t\n                        HomePage.confirmbox(error.error);\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n    });\n};\n"],"names":["Selectors","purcahsenextattempt","HomePage","homepage","document","addEventListener","e","stopImmediatePropagation","attemptpurchase","target","closest","examid","getAttribute","userid","profileid","lastattemptprofileid","hallscheduleid","purchasinguser","create","title","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","on","ModalEvents","save","preventDefault","Ajax","call","methodname","args","response","status","window","location","M","cfg","wwwroot","confirmbox","fail","error","bind","this","show"],"mappings":"iwBAyBMA,kBACO,CACLC,oBAAqB,2CAIzBC,SAAW,IAAIC,gCACC,KAChBC,SAASC,iBAAiB,SAAS,SAASC,GACxCA,EAAEC,+BACEC,gBAAkBF,EAAEG,OAAOC,QAAQV,kBAAkBC,wBACrDO,gBAAiB,OAEXG,OAAuBH,gBAAgBI,aAAa,eACpDC,OAAuBL,gBAAgBI,aAAa,gBACpDE,UAAuBN,gBAAgBI,aAAa,kBACpDG,qBAAuBP,gBAAgBI,aAAa,6BACpDI,eAAuBR,gBAAgBI,aAAa,mBACpDK,eAAuBT,gBAAgBI,aAAa,8CAE7CM,OAAO,CAChBC,OAAO,mBAAU,UAAW,eAC5BC,KAAMC,uBAAaC,MAAMC,YACzBC,MAAM,mBAAU,kBAAmB,iBACpCC,KAAK,SAASC,YACRA,MAAQA,MACbA,MAAMC,mBAAkB,mBAAU,MAAO,gBACzCD,MAAME,UAAUC,GAAGC,sBAAYC,KAAM,SAASzB,GAC1CA,EAAE0B,iBACYC,cAAKC,KAAK,CAAC,CACrBC,WAAY,8BACZC,KAAM,CAEFzB,OAAuBA,OACvBE,OAAuBA,OACvBC,UAAuBA,UACvBC,qBAAuBA,qBACvBC,eAAuBA,mBAGvB,GAAGS,MAAMY,WACTA,SAASC,OAILC,OAAOC,SADS,UAAhBvB,eACkBwB,EAAEC,IAAIC,QAAU,mCAAmChC,OAAO,YAAYE,OAEtE4B,EAAEC,IAAIC,QAAU,wCAAwChC,OAAO,cAAcG,UAAU,YAAYD,OALzHX,SAAS0C,WAAWP,SAASA,aASlCQ,MAAOC,QACN5C,SAAS0C,WAAWE,MAAMA,WAEhCC,KAAKC,OACPtB,MAAMuB,QACRF,KAAKC"}