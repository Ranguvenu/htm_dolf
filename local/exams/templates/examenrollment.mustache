{{# bulkenrollment}}
<div class="text-right my-3">
	<a href="{{config.wwroot}}./bulk_enrollment.php?examid={{exam_id}}&profileid={{profileid}}" class="launch_btn btn btn-primary btn-sm mr-3"  data-action ='exam_bulk_enrollment'><i class="fa fa-users" aria-hidden="true"> {{#str}} bulkenrollment, local_exams {{/str}}</i></a>
</div>
{{/ bulkenrollment}}
{{^availableseats}}
<div class="alert alert-info bold">{{#str}}noseatsavailable, local_exams{{/str}}</div>
{{/availableseats}}
<div class="row filter-bg py-3">
    <div class="col-md-12">
		<div class="bootstrap-duallistbox-container">
			<form  method="post" name="form_name" id="user_assign" class="form_class" >
            <div class="box box2 float-left col-md-5">
		    <input type="hidden" name="examid" value={{exam_id}}>
            <input type="hidden" name="profileid" value={{profileid}}>
		    <input type="hidden" name="options"  value={{myJSON}} >
		    <label>
			     <div class="enrollavailablelist">{{#str}}enrolled_users, local_exams, {{from_userstotal}} {{/str}} </div> 
			    &nbsp&nbsp<button type="button" id="select_remove" name="select_all" value="Select All" title="Select All" class="btn btn-default"/>{{#str}}select_all, local_exams{{/str}} </button>
				&nbsp&nbsp<button type="button" id="remove_select" name="remove_all" value="Remove All" title="Remove All" class="btn btn-default"/> {{#str}}remove_all, local_exams{{/str}} </button>
			</label>
		    <select multiple="multiple" name="remove[]" id="bootstrap-duallistbox-selected-list_duallistbox_courses_users" class="dual_select enrolled_users">
		    {{#from_users}}
		  	 	<option value={{id}}>{{value}}</option>
		   	{{/from_users}}
		   	</select>
            <div class="enrollusers_search_structure">
                        <label>{{# str}}search{{/ str}} : </label>
                        <input id="enrollusers_search" type="text" name="search_query">
            </div>
			</div>
           
            <div class="box box3 float-left col-md-2 actions d-flex flex-column justify-content-center text-center" style="height: 300px;">
                

		    </form>   
			<form  method="post" name="form_name" id="{{#availableseats}}user_un_assign{{/availableseats}}" class="form_class" >  
                {{#examprice}}
                    {{#availableseats}}
                            <button type="submit" class="custom_btn btn move btn-default enrollusers" disabled="disabled" title="Add Selected Users" name="submit_value" value="Add Selected Users" id="user_assign_all" data-value="enrollusers"/>{{#str}}add_selected_users, local_exams{{/str}}
                            </button>
                    {{/availableseats}}

                    {{^availableseats}}
                            <button type="submit" class="custom_btn btn move btn-default" disabled="disabled" title="No Seats"/ style="opacity:0.5; pointer-events: none;cursor: not-allowed;">{{#str}}noseatsavailabletoenrol, local_exams{{/str}}
                            </button>
                    {{/availableseats}}
                {{/examprice}}

                {{^examprice}}
                       {{#availableseats}}
                            <button type="submit" class="custom_btn btn move btn-default enrollusers" disabled="disabled" title="Add Selected Users" name="submit_value" value="Add Selected Users" id="user_assign_all" data-value="enrollusers"/>{{#str}}add_selected_users, local_exams{{/str}}
                            </button>
                    {{/availableseats}}

                    {{^availableseats}}
                            <button type="submit" class="custom_btn btn move btn-default" disabled="disabled" title="No Seats"/ style="opacity:0.5; pointer-events: none;cursor: not-allowed;">{{#str}}noseatsavailabletoenrol, local_exams{{/str}}
                            </button>
                    {{/availableseats}}
                {{/examprice}}
                </div>
                <div class="box box1 float-left col-md-5">
        		    <input type="hidden" name="examid" value={{exam_id}}>
        		    <input type="hidden" name="options"  value={{myJSON}} >
                    <input type="hidden" name="profileid" value={{profileid}}>
                    <input type="hidden" name="organizationid" value={{orgid}}>
        		   <label>
        		        <div class="unenrollvailablelist"> {{#str}}availablelist, local_exams, {{to_userstotal}} {{/str}}</div> 
        				&nbsp&nbsp<button type="button" id="select_add" name="select_all" value="Select All" title="Select All"/ class="btn btn-default">{{#str}}select_all, local_exams{{/str}}</button>
        				&nbsp&nbsp<button type="button" id="add_select" name="remove_all" value="Remove All" title="Remove All" class="btn btn-default"/>{{#str}}remove_all, local_exams{{/str}}</button>
        		    </label>
                    <!--  -->
        		    <select multiple="multiple" name="add[]" id="bootstrap-duallistbox-nonselected-list_duallistbox_courses_users" class="dual_select unenrolled_users" data-examid = "{{exam_id}}" data-productid = "{{productid}}" data-entitytype = "{{entitytype}}" data-refundtype = "{{refundtype}}" data-productprice = "{{productprice}}" data-ownedby = "{{ownedby}}"  data-profileid ="{{profileid}}" data-examname ="{{examname}}" >
                    <!--  -->
                    {{#to_users}}
        		   		<option value={{id}}>{{value}} </option>
        			{{/to_users}}
        		   	</select>
                        <div class="unenrollusers_search_structure">
                        <label >{{# str}}search{{/ str}} : </label>
                        <input title="Search users" id="unenrollusers_search" name = "search_query" type="text">
                </div>
		        </div>
               
		    </form>
		</div>
    </div>
</div>
{{#js}}
require(['core/ajax','jquery'], function(Ajax, $) {
    $("#enrollusers_search").on("keyup", function() {
        var value = $(this).val().toLowerCase();
        var type='remove';
        var params = {};
        params.type = type;
        params.profileid = {{profileid}};
        params.query = value;
        var selected_list_request = Ajax.call([{
            methodname: 'local_exams_enrollment',
            args: params
        }]);
        var selected_list = '';
        selected_list_request[0].done(function(response){
            var parsed_data = JSON.parse(response.options);
            console.log(response);
            $.each(parsed_data, function (index, data) {
                selected_list = selected_list + '<option value=' + index + '>' + data + '</option>';
            });
            var get_id = 'bootstrap-duallistbox-selected-list_duallistbox_courses_users';
            $('#'+get_id+'').html(selected_list);
            $('#enrolledcount').html(response.count);
        });
    });
    
    let currentuser = $('#currentuserrole').attr('data-value');
    if(currentuser == 'assessmentop'){
        {{^orgid}}
        $("#unenrollusers_search").attr('disabled', true);
        $("#unenrollusers_search").attr('title', 'Apply Organization filter first..!');
        $(".unenrolled_users").attr('title', 'Apply Organization filter first..!');
        $(".unenrolled_users").attr('disabled', true);
        {{/orgid}}
    }
    $("#unenrollusers_search").on("keyup", function() {
    <!-- $("#unenrollusers_search").keypress(function(event){ -->
        var params = {};
        var value = $(this).val().toLowerCase();
        var type='add';
        params.type = type;
        params.profileid = {{profileid}};
        {{#orgid}}
        params.orgid = {{orgid}};
        {{/orgid}}
        params.query = value;
        
        if(currentuser  == 'assessmentop'){
            <!-- $("#unenrollusers_search").attr('disabled', false); -->
            if(!params.orgid){
                alert('Please apply organization filter first..!');
            }else{
                get_user_list(params);
            }
        }
        else{
            get_user_list(params);
        }
    });
    function get_user_list(params) {
        var selected_list_request = Ajax.call([{
            methodname: 'local_exams_enrollment',
            args: params
        }]);
        let selected_list = '';
        selected_list_request[0].done(function(response){
            var parsed_data = JSON.parse(response.options);
            $.each(parsed_data, function (index, data) {
                selected_list = selected_list + '<option value=' + index + '>' + data + '</option>';
            });
            var get_id = 'bootstrap-duallistbox-nonselected-list_duallistbox_courses_users';
            $('#'+get_id+'').html(selected_list);
            $('#availablecount').html(response.count);
            
        });
    }
});
{{/js}}
<script language='javascript'>
  $( document ).ready(function() {
    $('#select_remove').click(function() {
        $('#bootstrap-duallistbox-selected-list_duallistbox_courses_users option').prop('selected', true);
        $('.box3 .remove').prop('disabled', false);
        $('#user_unassign_all').val('Remove_All_Users');

        $('.box3 .move').prop('disabled', true);
        $('#bootstrap-duallistbox-nonselected-list_duallistbox_courses_users option').prop('selected', false);
        $('#user_assign_all').val('Add Selected Users');
    });
    $('#remove_select').click(function() {
        $('#bootstrap-duallistbox-selected-list_duallistbox_courses_users option').prop('selected', false);
        $('.box3 .remove').prop('disabled', true);
        $('#user_unassign_all').val('Remove Selected Users');
    });
    $('#select_add').click(function() {
        $('#bootstrap-duallistbox-nonselected-list_duallistbox_courses_users option').prop('selected', true);
        $('.box3 .move').prop('disabled', false);
        $('#user_assign_all').val('Add_All_Users');

        $('.box3 .remove').prop('disabled', true);
        $('#bootstrap-duallistbox-selected-list_duallistbox_courses_users option').prop('selected', false);
        $('#user_unassign_all').val('Remove Selected Users');
    });
    $('#add_select').click(function() {
       $('#bootstrap-duallistbox-nonselected-list_duallistbox_courses_users option').prop('selected', false);
        $('.box3 .move').prop('disabled', true);
        $('#user_assign_all').val('Add Selected Users');
    });
    $('#bootstrap-duallistbox-selected-list_duallistbox_courses_users').on('change', function() {
        if(this.value!=''){
            $('.box3 .remove').prop('disabled', false);
            $('.box3 .move').prop('disabled', true);
        }
    });
    $('#bootstrap-duallistbox-nonselected-list_duallistbox_courses_users').on('change', function() {
        if(this.value!=''){
            $('.box3 .move').prop('disabled', false);
            $('.box3 .remove').prop('disabled', true);
        }
    });
    jQuery(
        function($)
        {
          $('.dual_select').bind('scroll', function()
            {
              if($(this).scrollTop() + $(this).innerHeight()>=$(this)[0].scrollHeight)
              {
                var get_id=$(this).attr('id');
                if(get_id=='bootstrap-duallistbox-selected-list_duallistbox_courses_users'){
                    var type='remove';
                    var total_users=$select_from_users_total;
                }
                if(get_id=='bootstrap-duallistbox-nonselected-list_duallistbox_courses_users'){
                    var type='add';
                    var total_users=$select_to_users_total;
                }
                var count_selected_list=$('#'+get_id+' option').length;
                var lastValue = $('#'+get_id+' option:last-child').val();
              if(count_selected_list<total_users){  
                    var selected_list_request = $.ajax({
                        method: 'GET',
                        url: M.cfg.wwwroot + '/local/exams/examenrollment.php?test=1&options={{myJSON}}',
                        data: {id: {{exam_id}}, type:type,view:'ajax',lastitem:lastValue},
                        dataType: 'html'
                    });  
                    var appending_selected_list = '';
                    selected_list_request.done(function(response){
                    response = jQuery.parseJSON(response);
                    $.each(response, function (index, data) {
                        appending_selected_list = appending_selected_list + '<option value=' + index + '>' + data + '</option>';
                    });
                    $('#'+get_id+'').append(appending_selected_list);
                    });
                }
              }
            })
        }
    );
});
</script>  
