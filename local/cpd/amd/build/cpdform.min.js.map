{"version":3,"file":"cpdform.min.js","sources":["../src/cpdform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport ModalForm from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport HomePageJs from \"theme_academy/homepage\";\nimport {get_string as getString} from 'core/str';\nrequire(['jquery'], function($) {\n    $(document).ready(function(){\n        $('body').on('change','input[name=\"evidencetype\"]',function(){\n            var selected_type = $(this).val();\n            $('.tagscontainer').addClass('invisible1');\n            if(selected_type==1){\n              $('.tagscontainer[data-tagtype=\"1\"]').removeClass('invisible1');\n            }\n            if(selected_type==2){\n                $('.tagscontainer[data-tagtype=\"2\"]').removeClass('invisible1');\n              }\n          });\n    });\n  });\nconst Selectors = {\n    actions: {\n        editCategory: '[data-action=\"createcpd\"]',\n        deletecpd: '[data-action=\"deletecpd\"]',\n        createformalevid: '[data-action=\"createformalevid\"]',\n        createinformalevid: '[data-action = \"createinformalevid\"]',\n        createevidence: '[data-action = \"createevidence\"]',\n        evidencestatus: '[data-action = \"evidencestatus\"]',\n        evidenceuserview: '[data-action = \"evidenceuserview\"]',\n        viewevidence : '[data-action = \"viewevidence\"]',\n        deleteevidence :  '[data-action = \"deleteevidence\"]',\n        edittrainigprogram: '[data-action = \"edittrainigprogram\"]',\n        deletetrainigprogram: '[data-action = \"deletetrainigprogram\"]',\n        evidence_rejectstatus:  '[data-action = \"evidence_rejectstatus\"]',\n    },\n};\n\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        e.stopImmediatePropagation();\n        let rejectstatus = e.target.closest(Selectors.actions.evidence_rejectstatus);\n        if (rejectstatus) {\n            e.preventDefault();\n            const title = getString('rejectionreason', 'local_cpd');\n            const form = new ModalForm({\n                formClass: 'local_cpd\\\\form\\\\evidence_rejection_form',\n                args: {evedid: rejectstatus.getAttribute('data-id')},\n                modalConfig: {title},\n                returnFocus: rejectstatus,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let element = e.target.closest(Selectors.actions.editCategory);\n        if (element) {\n            e.preventDefault();\n            const title = element.getAttribute('data-id') ?\n                getString('editcpd', 'local_cpd', element.getAttribute('data-name')) :\n                getString('addnewcpd', 'local_cpd');\n            const form = new ModalForm({\n                formClass: 'local_cpd\\\\form\\\\form',\n                args: {id: element.getAttribute('data-id')},\n                modalConfig: {title},\n                returnFocus: element,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let deleteelement = e.target.closest(Selectors.actions.deletecpd);\n        if (deleteelement) {\n            const cpdid = deleteelement.getAttribute('data-id');\n            const cpname = deleteelement.getAttribute('data-name');\n            ModalFactory.create({\n                title: getString('delete', 'local_cpd'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deleteconfirm', 'local_cpd', cpname)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('delete_cpd', 'local_cpd'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.confirm = true;\n                    params.cpdid = cpdid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_cpd_deletecpd',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        // do something with the exception\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n        let formalelement = e.target.closest(Selectors.actions.createformalevid);\n        if (formalelement) {\n            e.preventDefault();\n            const title = getString('formaltraining', 'local_cpd',formalelement.getAttribute('data-typename'));\n            const form = new ModalForm({\n                formClass: 'local_cpd\\\\form\\\\formaltrainingform',\n                args: {id: formalelement.getAttribute('data-id'), cpdid: formalelement.getAttribute('data-cpdid'), evidid: formalelement.getAttribute('data-evidid'),\n                type: formalelement.getAttribute('data-type')},\n                modalConfig: {title},\n                returnFocus: formalelement,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n               // e.preventDefault();\n                const args = formalelement.getAttribute('data-typename');\n                let homepage = new HomePageJs();\n                homepage.confirmbox(getString('learninginfosuccess', 'local_cpd', args));\n            }\n            );\n            form.show();\n            //form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            //form.show();\n        }\n        \n        let informalelement = e.target.closest(Selectors.actions.createinformalevid);\n        if (informalelement) {\n            e.preventDefault();\n            const title = getString('informaltraining', 'local_cpd',informalelement.getAttribute('data-typename'));\n            const form = new ModalForm({\n                formClass: 'local_cpd\\\\form\\\\informaltrainingform',\n                args: {id: informalelement.getAttribute('data-id'), cpdid: informalelement.getAttribute('data-cpdid'), evidid: informalelement.getAttribute('data-evidid'),\n                type: informalelement.getAttribute('data-type')},\n                modalConfig: {title},\n                returnFocus: informalelement,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n               // e.preventDefault();\n              const args = informalelement.getAttribute('data-typename');\n              let homepage = new HomePageJs();\n              homepage.confirmbox(getString('learninginfosuccess', 'local_cpd', args));\n            }\n            );\n            form.show();\n            //form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            //form.show();\n        }\n\n        let evidence = e.target.closest(Selectors.actions.createevidence);\n        if (evidence) {\n            e.preventDefault();\n            const title = evidence.getAttribute('data-id') ?\n                getString('editevidence', 'local_cpd', evidence.getAttribute('data-name')) :\n                getString('addevidence', 'local_cpd');\n            const form = new ModalForm({\n                formClass: 'local_cpd\\\\form\\\\evidenceform',\n                args: {id: evidence.getAttribute('data-id')},\n                modalConfig: {title},\n                returnFocus: evidence,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n        let evidencestatus = e.target.closest(Selectors.actions.evidencestatus);\n        if (evidencestatus) {\n            const evalid = evidencestatus.getAttribute('data-id');\n            const header = evidencestatus.getAttribute('data-title');\n            const status = evidencestatus.getAttribute('data-status');\n            const creditedhours = evidencestatus.getAttribute('data-creditedhours');\n            if(status ==\"1\") {\n                var confirm_msg = getString('approveconfirm', 'local_cpd');\n                var buttonstring = getString(header, 'local_cpd');\n            } else {\n                var confirm_msg = getString('rejectconfirm', 'local_cpd');\n                var buttonstring = getString(header, 'local_cpd');\n            }\n            ModalFactory.create({\n                title: getString(header, 'local_cpd'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: confirm_msg\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(buttonstring);\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.confirm = true;\n                    params.evalid = evalid;\n                    params.status = status;\n                    params.creditedhours = creditedhours;\n                    var promise = Ajax.call([{\n                        methodname: 'local_cpd_evidencestatus',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        // do something with the exception\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n\n        let evidenceuserview = e.target.closest(Selectors.actions.evidenceuserview);\n        if (evidenceuserview) {\n            const ceid = evidenceuserview.getAttribute('data-id');\n            const userid = evidenceuserview.getAttribute('data-userid');\n            const evdtype = evidenceuserview.getAttribute('data-type');\n            var params = {};\n            params.ceid = ceid;\n            params.userid = userid;\n            params.evdtype = evdtype;\n            var promise = Ajax.call([{\n                methodname: 'local_cpd_evidenceuserinfo',\n                args: params\n            }]);\n            promise[0].done(function(resp) {\n                ModalFactory.create({\n                    title: getString('evidenceuserview', 'local_cpd'),\n                    body: resp.options\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.show();\n                }.bind(this));\n            }).fail(function() {\n                // do something with the exception\n                 //console.log('exception');\n            });\n        }\n\n        let viewevidence = e.target.closest(Selectors.actions.viewevidence);\n        if (viewevidence) {\n            const ceid = viewevidence.getAttribute('data-id');\n            const evdtype = viewevidence.getAttribute('data-type');\n            var params = {};\n            params.ceid = ceid;\n            params.evdtype = evdtype;\n            var promise = Ajax.call([{\n                methodname: 'local_cpd_viewevidence',\n                args: params\n            }]);\n            promise[0].done(function(resp) {\n                ModalFactory.create({\n                    title: getString('view', 'local_cpd'),\n                    body: resp.options\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.show();\n                }.bind(this));\n            }).fail(function() {\n                // do something with the exception\n                 //console.log('exception');\n            });\n        }\n\n        let deleteevidence = e.target.closest(Selectors.actions.deleteevidence);\n        if (deleteevidence) {\n            const evidid = deleteevidence.getAttribute('data-id');\n            const evdtitle = deleteevidence.getAttribute('data-name');\n            const evidtype = deleteevidence.getAttribute('data-type');\n            const totalcount = deleteevidence.getAttribute('data-totalcount');\n            ModalFactory.create({\n                title: getString('delete', 'local_cpd'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deleteconfirm', 'local_cpd', evdtitle)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('delete_cpd', 'local_cpd'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.confirm = true;\n                    params.evidid = evidid;\n                    params.evidtype = evidtype;\n                    var promise = Ajax.call([{\n                        methodname: 'local_cpd_deleteevidence',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        if (totalcount > 1) {\n                            window.location.reload(true);\n                        } else {\n                            window.location.href = M.cfg.wwwroot + '/local/cpd/index.php';\n                        }\n                    }).fail(function() {\n                        // do something with the exception\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n\n        let addtrainigprogram = e.target.closest(Selectors.actions.edittrainigprogram);\n        if (addtrainigprogram) {\n            e.preventDefault();\n            const title = getString('addtrainingprograms', 'local_cpd');\n            const form = new ModalForm({\n                formClass: 'local_cpd\\\\form\\\\trainingprogram_form',\n                args: {id: addtrainigprogram.getAttribute('data-id'), cpdid: addtrainigprogram.getAttribute('data-cpdid')},\n                modalConfig: {title},\n                returnFocus: addtrainigprogram,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\n            form.show();\n        }\n\n        let deletetrainigprogram = e.target.closest(Selectors.actions.deletetrainigprogram);\n        if (deletetrainigprogram) {\n            const programid = deletetrainigprogram.getAttribute('data-id');\n            const programname = deletetrainigprogram.getAttribute('data-name');\n            ModalFactory.create({\n                title: getString('delete', 'local_cpd'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deleteconfirm', 'local_cpd', programname)\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(getString('delete_cpd', 'local_cpd'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var params = {};\n                    params.confirm = true;\n                    params.programid = programid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_cpd_delete_training_program',\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        window.location.reload(true);\n                    }).fail(function() {\n                        // do something with the exception\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n    });\n};\n"],"names":["require","$","document","ready","on","selected_type","this","val","addClass","removeClass","Selectors","editCategory","deletecpd","createformalevid","createinformalevid","createevidence","evidencestatus","evidenceuserview","viewevidence","deleteevidence","edittrainigprogram","deletetrainigprogram","evidence_rejectstatus","addEventListener","e","stopImmediatePropagation","rejectstatus","target","closest","preventDefault","title","form","ModalForm","formClass","args","evedid","getAttribute","modalConfig","returnFocus","events","FORM_SUBMITTED","window","location","reload","show","element","id","deleteelement","cpdid","cpname","create","type","ModalFactory","types","SAVE_CANCEL","body","done","modal","setSaveButtonText","getRoot","ModalEvents","save","params","Ajax","call","methodname","fail","bind","formalelement","evidid","HomePageJs","confirmbox","informalelement","evidence","evalid","header","status","creditedhours","confirm_msg","buttonstring","ceid","userid","evdtype","resp","options","evdtitle","evidtype","totalcount","href","M","cfg","wwwroot","addtrainigprogram","programid","programname"],"mappings":"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"}