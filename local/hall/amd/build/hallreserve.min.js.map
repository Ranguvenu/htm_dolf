{"version":3,"file":"hallreserve.min.js","sources":["../src/hallreserve.js"],"sourcesContent":["/**\r\n * Add a create new group modal to the page.\r\n *\r\n * @module     local_hall/reserve\r\n * @class      NewCourse\r\n * @package    local_hall\r\n * @copyright  2022 Revanth kumar Grandhi\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['local_trainingprogram/dynamicform', 'jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui', 'core/templates'],\r\n        function(TPDynamicForm, $, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Templates) {\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @param {int} contextid\r\n     *\r\n     * Each call to init gets it's own instance of this class.\r\n     */\r\n    var NewCategory = function(selector, contextid, categoryid, hallid, typeid, type, startdate=false, enddate=false, duration=false, entitiesseats=false, hallseats=false, entityname=false, entityid=false, starttime=false, reservationid=false, submit_type=false) {\r\n\r\n        this.contextid = contextid;\r\n        this.categoryid = categoryid;\r\n        this.hallid = hallid;\r\n        this.typeid = typeid;\r\n        this.type = type;\r\n        this.startdate = startdate;\r\n        this.enddate = enddate;\r\n        this.duration = duration;\r\n        this.entitiesseats = entitiesseats;\r\n        this.hallseats = hallseats;\r\n        this.entityname = entityname;\r\n        this.entityid = entityid;\r\n        this.starttime = starttime;\r\n        this.reservationid = reservationid;\r\n        this.submit_type = submit_type;\r\n        var self = this;\r\n        self.init(selector, entitiesseats, hallseats, entityname);\r\n    };\r\n\r\n    /**\r\n     * @var {Modal} modal\r\n     * @private\r\n     */\r\n    NewCategory.prototype.modal = null;\r\n\r\n    /**\r\n     * @var {int} contextid\r\n     * @private\r\n     */\r\n    NewCategory.prototype.contextid = -1;\r\n\r\n    /**\r\n     * Initialise the class.\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewCategory.prototype.init = function(selector, entitiesseats, hallseats, entityname) {\r\n        var self = this;\r\n        // Fetch the title string.\r\n            if (self.categoryid) {\r\n                var head =  Str.get_string('reservation', 'local_hall');\r\n            } else {\r\n               var head =  Str.get_string('reservation', 'local_hall');\r\n            }\r\n\r\n            var data = {};\r\n            data.entityname = entityname;\r\n            data.entityseats = entitiesseats;\r\n            data.hallseats = hallseats;\r\n\r\n            if(entityname == 'Current Offering') {\r\n                var showing =  Str.get_string('currentoffering', 'local_hall', data);            \r\n            } else if(entityname == 'Current Event') {\r\n                var showing =  Str.get_string('currentevent', 'local_hall', data);            \r\n            } else if(entityname == 'Current Questionbank') {\r\n                var showing =  Str.get_string('currentquestionbank', 'local_hall', data);\r\n            } else {\r\n                data.entityname = entityname;\r\n                var showing =  Str.get_string('entityshowing', 'local_hall', data);                \r\n            }\r\n\r\n            showing.done(function(html, js) {\r\n                return head.then(function(title) {\r\n                    // Create the modal.\r\n                    return ModalFactory.create({\r\n                        // type: ModalFactory.types.SAVE_CANCEL,\r\n                        title: html,\r\n                        body: self.getBody()\r\n                    });\r\n                }.bind(self)).then(function(modal) {\r\n                    // Keep a reference to the modal.\r\n                    self.modal = modal;\r\n                    // self.modal.getRoot().addClass('openLMStransition');\r\n                    self.modal.show();\r\n\r\n                    $(\"#city\").on('change', function(e) {\r\n\r\n                        $(\"#buildingname\").prop('selected', false);\r\n                        $(\"#buildingname\").parent().find('.badge-info').html('');\r\n\r\n                        $(\"#id_halls option:selected\").prop('selected', false);\r\n                        $('#id_halls').parent().find('.badge-info').html('');\r\n                        var city = $(this).text();\r\n                        city = JSON.stringify(city);\r\n                        var hallcities = $(this).closest(\"form\").find(\"select[name='halls']\");\r\n                        // hallcities.val('');\r\n                        hallcities.data('city',city);\r\n                    });\r\n                    $(\"select[name='buildingname']\").on('change', function(e) {\r\n                        $(\"#id_halls option:selected\").prop('selected', false);\r\n                        $('#id_halls').parent().find('.badge-info').html('');\r\n                        var building = $(\"#buildingname option:selected\" ).text();\r\n                        building = JSON.stringify(building);\r\n                        var buildingname = $(this).closest(\"form\").find(\"select[name='halls']\");\r\n                        // buildingname.val('');\r\n                        buildingname.data('buildingname',building);\r\n                    });\r\n                   $('#id_halls').on('change', function(e) {\r\n                        $(\".selecthall\").html('');\r\n                        $('.entityhall .badge-info').html('');\r\n                        $('.entityhall .badge-info').html($(\"#id_halls option:selected\").text());\r\n                        $(\"select[name='halladdress']\").val($(\"#id_halls option:selected\").val());\r\n\r\n                        var params = {};\r\n                        params.sessionkey = $(\"input[name='sesskey']\").val();\r\n                        params.type = $(\"select[name='halladdress']\").data('type');\r\n                        var promise = Ajax.call([{\r\n                            methodname: 'remove_reservations',\r\n                            args: params\r\n                        }]);\r\n                        promise[0].done(function(resp) {\r\n                            $(\".entityhalldetails\").html('');\r\n                            console.log('Successfully reservations removed');\r\n                        }).fail(function() {\r\n                             console.log('exception');\r\n                        });\r\n                    });\r\n\r\n                    $('#id_moduledates').on('change',function(){\r\n                        // alert(\"Works\");\r\n                        $(\".selecthall\").html('');\r\n                       /* $('.entityhall .badge-info').html('');\r\n                        $('.entityhall .badge-info').html($(\"#id_halls option:selected\").text());\r\n                        $(\"select[name='halladdress']\").val($(\"#id_halls option:selected\").val());\r\n                        var params = {};\r\n                        params.sessionkey = $(\"input[name='sesskey']\").val();\r\n                        params.type = $(\"select[name='halladdress']\").data('type');\r\n                        var promise = Ajax.call([{\r\n                             methodname: 'remove_reservations',\r\n                             args: params\r\n                        }]);\r\n                        promise[0].done(function(resp) {\r\n                            $(\".entityhalldetails\").html('');\r\n                            console.log('Successfully reservations removed');\r\n                        }).fail(function() {\r\n                            console.log('exception');\r\n                        }); */   \r\n                    });\r\n                    // Forms are big, we want a big modal.\r\n                    self.modal.setLarge();\r\n                    self.modal.getRoot().addClass('reservationhallmodal');\r\n                    self.modal.getRoot().find(\".modal-dialog\").addClass('modal-xl');\r\n                    // We want to reset the form every time it is opened.\r\n                    self.modal.getRoot().on(ModalEvents.hidden, function() {\r\n                        self.modal.setBody('');\r\n                        self.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\r\n                        setTimeout(function(){\r\n                            modal.destroy();\r\n                        }, 1000);\r\n                    }.bind(this));\r\n\r\n                    // We want to hide the submit buttons every time it is opened.\r\n                    self.modal.getRoot().on(ModalEvents.shown, function() {\r\n                        self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\r\n                    }.bind(this));\r\n\r\n\r\n                    // We catch the modal save event, and use it to submit the form inside the modal.\r\n                    // Triggering a form submission will give JS validation scripts a chance to check for errors.\r\n                    self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\r\n                    // We also catch the form submit event and use it to submit the form with ajax.\r\n                    self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\r\n                    self.modal.getRoot().animate({\"right\":\"0%\"}, 500);\r\n                    self.modal.getRoot().on(ModalEvents.bodyRendered, (e) => {\r\n                        $(\"#city\").on('change', function(e) {\r\n\r\n                            $(\"#buildingname\").prop('selected', false);\r\n                            $(\"#buildingname\").parent().find('.badge-info').html('');\r\n                            \r\n                            $(\"#id_halls option:selected\").prop('selected', false);\r\n                            $('#id_halls').parent().find('.badge-info').html('');\r\n                            var city = $(this).text();\r\n                            city = JSON.stringify(city);\r\n                            var hallcities = $(this).closest(\"form\").find(\"select[name='halls']\");\r\n                            hallcities.data('city',city);\r\n                        });\r\n                        $(\"select[name='buildingname']\").on('change', function(e) {\r\n                            $(\"#id_halls option:selected\").prop('selected', false);\r\n                            $('#id_halls').parent().find('.badge-info').html('');                        \r\n                            var building = $(\"#buildingname option:selected\" ).text();\r\n                            building = JSON.stringify(building);\r\n                            var buildingname = $(this).closest(\"form\").find(\"select[name='halls']\");\r\n                            // buildingname.val('');\r\n                            buildingname.data('buildingname',building);\r\n                        });\r\n\r\n                        $('#id_halls').on('change', function(e) {\r\n                            $(\".selecthall\").html('');                            \r\n                            $('.entityhall .badge-info').html('');\r\n                            $('.entityhall .badge-info').html($(\"#id_halls option:selected\").text());\r\n                            $(\"select[name='halladdress']\").val($(\"#id_halls option:selected\").val());\r\n\r\n                            var params = {};\r\n                            params.sessionkey = $(\"input[name='sesskey']\").val();\r\n                            params.type = $(\"select[name='halladdress']\").data('type');\r\n                            var promise = Ajax.call([{\r\n                                methodname: 'remove_reservations',\r\n                                args: params\r\n                            }]);\r\n                            promise[0].done(function(resp) {\r\n                                $(\".entityhalldetails\").html('');\r\n                                console.log('Successfully reservations removed');\r\n                            }).fail(function() {\r\n                                 console.log('exception');\r\n                            });\r\n                        });\r\n\r\n                        $('#id_moduledates').on('change',function(){\r\n                            // alert(\"Works\");\r\n                            $(\".selecthall\").html('');\r\n                           /* $('.entityhall .badge-info').html('');\r\n                            $('.entityhall .badge-info').html($(\"#id_halls option:selected\").text());\r\n                            $(\"select[name='halladdress']\").val($(\"#id_halls option:selected\").val());\r\n                     \r\n                            var params = {};\r\n                            params.sessionkey = $(\"input[name='sesskey']\").val();\r\n                            params.type = $(\"select[name='halladdress']\").data('type');\r\n                            var promise = Ajax.call([{\r\n                                 methodname: 'remove_reservations',\r\n                                 args: params\r\n                            }]);\r\n                            promise[0].done(function(resp) {\r\n                                $(\".entityhalldetails\").html('');\r\n                                console.log('Successfully reservations removed');\r\n                            }).fail(function() {\r\n                                console.log('exception');\r\n                            });*/    \r\n                        });\r\n                    });                \r\n                    return this.modal;\r\n                }.bind(this));\r\n            });\r\n    };\r\n\r\n    /**\r\n     * @method getBody\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewCategory.prototype.getBody = function(formdata) {\r\n        if (typeof formdata === \"undefined\") {\r\n            formdata = {};\r\n        }\r\n\r\n        params = {};\r\n        params.jsonformdata = JSON.stringify(formdata);\r\n        params.categoryid = this.categoryid;\r\n        params.hallid = this.hallid;\r\n        params.typeid = this.typeid;\r\n        params.type = this.type;\r\n        params.startdate = this.startdate;\r\n        params.enddate = this.enddate;\r\n        params.duration = this.duration;\r\n        params.entitiesseats = this.entitiesseats;\r\n        params.entityid = this.entityid;\r\n        params.starttime = this.starttime;\r\n        params.reservationid = this.reservationid;\r\n        params.submit_type = this.submit_type;\r\n        // this.contextid = 1\r\n        return Fragment.loadFragment('local_hall', 'listofhallsform', this.contextid, params);\r\n    };\r\n\r\n    /**\r\n     * @method handleFormSubmissionResponse\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewCategory.prototype.handleFormSubmissionResponse = function(formData) {\r\n        // We could trigger an event instead.\r\n        // Yuk.\r\n        // Y.use('moodle-core-formchangechecker', function() {\r\n        //     M.core_formchangechecker.reset_form_dirty_state();\r\n        // });\r\n        // document.location.reload();\r\n    };\r\n\r\n    /**\r\n     * @method handleFormSubmissionFailure\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewCategory.prototype.handleFormSubmissionFailure = function(data) {\r\n        // Oh noes! Epic fail :(\r\n        // Ah wait - this is normal. We need to re-display the form with errors!\r\n        this.modal.setBody(this.getBody(data));\r\n    };\r\n\r\n    /**\r\n     * Private method\r\n     *\r\n     * @method submitFormAjax\r\n     * @private\r\n     * @param {Event} e Form submission event.\r\n     */\r\n    NewCategory.prototype.submitFormAjax = function(e) {\r\n        // We don't want to do a real form submission.\r\n        e.preventDefault();\r\n\r\n        // Convert all the form elements values to a serialised string.\r\n        var formData = this.modal.getRoot().find('form').serialize();\r\n\r\n        // Now we can continue...\r\n        Ajax.call([{\r\n            methodname: 'local_hall_reservation',\r\n            //args: {evalid:this.evalid, contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\r\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\r\n            done: this.handleFormSubmissionResponse.bind(this, formData),\r\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\r\n        }]);\r\n    };\r\n\r\n    /**\r\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\r\n     *\r\n     * @method submitForm\r\n     * @param {Event} e Form submission event.\r\n     * @private\r\n     */\r\n    NewCategory.prototype.submitForm = function(e) {\r\n        e.preventDefault();\r\n        var self = this;\r\n        self.modal.getRoot().find('form').submit();\r\n    };\r\n\r\n    return /** @alias module:local_course/newcourse */ {\r\n        // Public variables and functions.\r\n        /**\r\n         * Attach event listeners to initialise this module.\r\n         *\r\n         * @method init\r\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\r\n         * @param {int} contextid The contextid for the course.\r\n         * @return {Promise}\r\n         */\r\n        init: function(args) {\r\n            return new NewCategory(args.selector, args.contextid, args.categoryid, args.hallid, args.typeid, args.type, 0,0,0,args.entitytotalseats, args.hallseats, args.entityname, args.typeid, args.starttime, args.hallreservationid);\r\n        },\r\n        load: function() {\r\n\r\n        },\r\n        reservation: function(type) {\r\n            if(type == \"tprogram\") {\r\n                var hallid = $(\"select[name='halladdress']\").val();\r\n                var starthours = $(\"select[name='starttime[hours]']\").val();\r\n                var startminutes = $(\"select[name='starttime[minutes]']\").val();\r\n\r\n                const hours = starthours*3600; // 24-hour format, 0 = midnight, 15 = 3PM\r\n                const minutes = startminutes*60;\r\n                var starttime = hours+minutes;\r\n                var typeid = 0;\r\n\r\n                var endhours = $(\"select[name='endtime[hours]']\").val();\r\n                var endminutes = $(\"select[name='endtime[minutes]']\").val();\r\n\r\n                const end_hours = endhours*3600; // 24-hour format, 0 = midnight, 15 = 3PM\r\n                const end_minutes = endminutes*60;\r\n                var endtime = end_hours+end_minutes;\r\n\r\n                var duration = endtime - starttime;\r\n                var entitiesseats = $(\"input[name='availableseats']\").val();\r\n                var entityname = 'Current Offering';\r\n                var entityid = $(\"input[name='trainingid']\").val();\r\n                var contextid = $(\"input[name='contextid']\").val();\r\n                var submit_type = $(\"input[name='submit_type']\").val();\r\n\r\n            } else if(type == \"questionbank\") {\r\n                var hallid = $(\"select[name='halladdress']\").val();\r\n                var id = $(\"select[name='halladdress']\").data('id');\r\n                var starthours = $(\"select[name='starttime[hours]']\").val();\r\n                var startminutes = $(\"select[name='starttime[minutes]']\").val();\r\n                var typeid = $(\"input[name='id']\").val();\r\n                var submit_type = $(\"input[name='submit_type']\").val();\r\n                if(typeid == '' || typeid < 0) {\r\n                    typeid = 0;\r\n                }\r\n                var duration = $(\"input[name='duration[number]']\").val();\r\n                var entityname = 'Current Questionbank';\r\n                var entityid = 0;\r\n                var entitiesseats = 0;\r\n                var contextid = $(\"input[name='contextid']\").val();\r\n            } else {\r\n                var type = 'event';\r\n                var hallid = $(\"select[name='halladdress']\").val();\r\n                var starthours = $(\"select[name='eventslothour']\").val();\r\n                var startminutes = $(\"select[name='eventslotmin']\").val();\r\n                var typeid = $(\"input[name='id']\").val();\r\n                var submit_type = $(\"input[name='submit_type']\").val();\r\n                if(typeid == '') {\r\n                    typeid = 0;\r\n                }\r\n                var duration = $(\"input[name='eventduration[number]']\").val();\r\n                var entityname = 'Current Event';\r\n                var entityid = 0;\r\n                var entitiesseats = 0;\r\n                var contextid = $(\"input[name='contextid']\").val();                \r\n            }\r\n\r\n            var params = {};\r\n            params.sessionkey = $(\"input[name='sesskey']\").val();\r\n            params.halls = hallid;\r\n            params.type = type;                \r\n            var promise = Ajax.call([{\r\n                methodname: 'remove_reservations',\r\n                args: params\r\n            }]);\r\n            promise[0].done(function(resp) {\r\n                $(\".entityhalldetails\").html('');\r\n                console.log('Successfully reservations removed');\r\n            }).fail(function() {\r\n                 console.log('exception');\r\n            });\r\n\r\n            const hours = starthours*3600; // 24-hour format, 0 = midnight, 15 = 3PM\r\n            const minutes = startminutes*60;\r\n            var starttime = hours+minutes;\r\n\r\n            var city = $(\"#city option:selected\").val();\r\n            if(city == \"\") {\r\n                city = 0;\r\n            }\r\n            var buildingname = $(\"#buildingname option:selected\").val();\r\n            if(buildingname == '') {\r\n                buildingname = 0;\r\n            }\r\n\r\n            if(hallid > 0) {\r\n                params = {};\r\n                params.hallid = hallid;\r\n                params.entitiesseats = entitiesseats;\r\n                params.type = type;\r\n                var hallseats = Fragment.loadFragment('local_hall', 'hallseats', contextid, params);\r\n                var hallseatscount = '';\r\n                hallseats.done(function(html, js) {\r\n                    response = JSON.parse(html);\r\n                    hallseatscount = response.hallseats;\r\n                    entitiesseats = response.entitiesseats;\r\n                    var startdate = $(\"select[name='startdate[year]']\").val()+'-'+$(\"select[name='startdate[month]']\").val()+'-'+$(\"select[name='startdate[day]']\").val();\r\n                    if(type == \"questionbank\") {\r\n                        var enddate = $(\"select[name='startdate[year]']\").val()+'-'+$(\"select[name='startdate[month]']\").val()+'-'+$(\"select[name='startdate[day]']\").val();\r\n                    } else {\r\n                        var enddate = $(\"select[name='enddate[year]']\").val()+'-'+$(\"select[name='enddate[month]']\").val()+'-'+$(\"select[name='enddate[day]']\").val();\r\n                    }\r\n                    var hallreservationid = 0;\r\n                    return new NewCategory('reservationmodal', contextid, 0, hallid, typeid, type, startdate, enddate, duration, entitiesseats, hallseatscount, entityname, entityid, starttime, hallreservationid, submit_type);\r\n                });\r\n            } else {\r\n                alert(\"Please select proper Hall\");\r\n            }\r\n        }        \r\n    };\r\n});\r\n"],"names":["define","TPDynamicForm","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Templates","NewCategory","selector","contextid","categoryid","hallid","typeid","type","startdate","enddate","duration","entitiesseats","hallseats","entityname","entityid","starttime","reservationid","submit_type","self","this","init","prototype","modal","head","get_string","data","entityseats","showing","done","html","js","then","title","create","body","getBody","bind","show","on","e","prop","parent","find","city","text","JSON","stringify","closest","building","val","params","sessionkey","call","methodname","args","resp","console","log","fail","setLarge","getRoot","addClass","hidden","setBody","animate","setTimeout","destroy","shown","append","save","submitForm","submitFormAjax","bodyRendered","formdata","jsonformdata","loadFragment","handleFormSubmissionResponse","formData","handleFormSubmissionFailure","preventDefault","serialize","submit","entitytotalseats","hallreservationid","load","reservation","starthours","startminutes","halls","buildingname","hallseatscount","response","parse","alert"],"mappings":"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"}