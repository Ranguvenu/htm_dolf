{"version":3,"file":"hall_datasource.min.js","sources":["../src/hall_datasource.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n\n    return /** @alias module:tool_lpmigrate/frameworks_datasource */ {\n\n        /**\n         * Process the results for auto complete elements.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {Array} results An array or results.\n         * @return {Array} New array of results.\n         */\n        processResults: function(selector, results) {\n            var options = [];\n\n            $.each(results.data, function(index, response) {\n                options.push({\n                    value: response.id,\n                    label: response.fullname\n                });\n            });\n            return options;\n        },\n\n        /**\n         * Source of data for Ajax element.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {String} query The query string.\n         * @param {Function} callback A callback function receiving an array of results.\n         */\n        /* eslint-disable promise/no-callback-in-promise */\n        transport: function(selector, query, callback) {\n            var el = $(selector);\n            hallid=0;\n            type = el.data('type');\n            halllocation=0;\n            switch(type){\n                case 'schedulehalls':\n                    city = $(\"#city option:selected\").text();\n                    buildingname = $(\"#buildingname option:selected\").val();\n                    // var hallinside = $('input[name=\"halllocation[1]\"]:checked').serialize();\n                    // var halloutside = $('input[name=\"halllocation[2]\"]:checked').serialize();\n                    // if( hallinside && halloutside ) {\n                    //     var data = ['inside', 'outside'];\n                    //     halllocation = data.toString();\n                    // } else if(hallinside) {\n                    //     var data = ['inside'];\n                    //     halllocation = data.toString();\n                    // } else if(halloutside) {\n                    //     var data = ['outside'];\n                    //     halllocation = data.toString();\n                    // }\n\n                    var offeringtype = $(\"select[name='type']\").val();\n                    if (offeringtype == 1) {\n                        var halllocation = $('input[name=\"halllocation1\"]:checked').val();\n                    } else {\n                        var halllocation = $('input[name=\"halllocation\"]:checked').val();\n                    }\n                    if(!buildingname) {\n                        buildingname = 0;\n                    }\n                    hallid = el.data('hallid');\n                    Ajax.call([{\n                        methodname: 'local_scheduledhalls',\n                        args: {query:query, type: type, hallid: hallid, city: city, buildingname: buildingname, halllocation: halllocation}\n                    }])[0].then(callback).catch(Notification.exception);                    \n                    break;\n                case 'buildingname':\n                        city = $(\"#city option:selected\").val();\n                        Ajax.call([{\n                            methodname: 'local_scheduledhalls',\n                            args: {query:query, type: type, hallid: 0, city: city, buildingname: 0, halllocation: halllocation}\n                        }])[0].then(callback).catch(Notification.exception);\n                    break;\n                case 'city':\n                        Ajax.call([{\n                            methodname: 'local_scheduledhalls',\n                            args: {query:query, type: type, hallid: 0, city: 0, buildingname: 0}\n                        }])[0].then(callback).catch(Notification.exception);\n                    break;\n                case 'examhalls':\n                        Ajax.call([{\n                            methodname: 'local_scheduledhalls',\n                            args: {query:query, type: type, hallid: 0, city: 0, buildingname: 0, halllocation: halllocation}\n                        }])[0].then(callback).catch(Notification.exception);\n                    break;                    \n            }           \n        },\n\n        city: function() {\n\n            $(\"select[name='buildingname'] option:selected\").prop('selected', false);\n            $(\"select[name='buildingname']\").parent().find('.badge-info').html('');\n\n            $(\"select[name='halladdress'] option:selected\").prop('selected', false);\n            $(\"select[name='halladdress']\").parent().find('.badge-info').html('');\n\n        },\n\n        buildingname: function() {\n\n            $(\"select[name='halladdress'] option:selected\").prop('selected', false);\n            $(\"select[name='halladdress']\").parent().find('.badge-info').html('');\n\n        }\n\n    };\n\n});\n"],"names":["define","$","Ajax","Notification","processResults","selector","results","options","each","data","index","response","push","value","id","label","fullname","transport","query","callback","el","hallid","type","halllocation","city","text","buildingname","val","call","methodname","args","then","catch","exception","prop","parent","find","html"],"mappings":"AAgBAA,oCAAO,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,oBAEF,CAS7DC,eAAgB,SAASC,SAAUC,aAC3BC,QAAU,UAEdN,EAAEO,KAAKF,QAAQG,MAAM,SAASC,MAAOC,UACjCJ,QAAQK,KAAK,CACTC,MAAOF,SAASG,GAChBC,MAAOJ,SAASK,cAGjBT,SAWXU,UAAW,SAASZ,SAAUa,MAAOC,cAC7BC,GAAKnB,EAAEI,iBACXgB,OAAO,EACPC,KAAOF,GAAGX,KAAK,QACfc,aAAa,EACND,UACE,mBACDE,KAAOvB,EAAE,yBAAyBwB,OAClCC,aAAezB,EAAE,iCAAiC0B,MAe9B,GADD1B,EAAE,uBAAuB0B,UAEpCJ,aAAetB,EAAE,uCAAuC0B,WAExDJ,aAAetB,EAAE,sCAAsC0B,MAE3DD,eACAA,aAAe,GAEnBL,OAASD,GAAGX,KAAK,UACjBP,KAAK0B,KAAK,CAAC,CACPC,WAAY,uBACZC,KAAM,CAACZ,MAAMA,MAAOI,KAAMA,KAAMD,OAAQA,OAAQG,KAAMA,KAAME,aAAcA,aAAcH,aAAcA,iBACtG,GAAGQ,KAAKZ,UAAUa,MAAM7B,aAAa8B,qBAExC,eACGT,KAAOvB,EAAE,yBAAyB0B,MAClCzB,KAAK0B,KAAK,CAAC,CACPC,WAAY,uBACZC,KAAM,CAACZ,MAAMA,MAAOI,KAAMA,KAAMD,OAAQ,EAAGG,KAAMA,KAAME,aAAc,EAAGH,aAAcA,iBACtF,GAAGQ,KAAKZ,UAAUa,MAAM7B,aAAa8B,qBAE5C,OACG/B,KAAK0B,KAAK,CAAC,CACPC,WAAY,uBACZC,KAAM,CAACZ,MAAMA,MAAOI,KAAMA,KAAMD,OAAQ,EAAGG,KAAM,EAAGE,aAAc,MAClE,GAAGK,KAAKZ,UAAUa,MAAM7B,aAAa8B,qBAE5C,YACG/B,KAAK0B,KAAK,CAAC,CACPC,WAAY,uBACZC,KAAM,CAACZ,MAAMA,MAAOI,KAAMA,KAAMD,OAAQ,EAAGG,KAAM,EAAGE,aAAc,EAAGH,aAAcA,iBACnF,GAAGQ,KAAKZ,UAAUa,MAAM7B,aAAa8B,aAKzDT,KAAM,WAEFvB,EAAE,+CAA+CiC,KAAK,YAAY,GAClEjC,EAAE,+BAA+BkC,SAASC,KAAK,eAAeC,KAAK,IAEnEpC,EAAE,8CAA8CiC,KAAK,YAAY,GACjEjC,EAAE,8BAA8BkC,SAASC,KAAK,eAAeC,KAAK,KAItEX,aAAc,WAEVzB,EAAE,8CAA8CiC,KAAK,YAAY,GACjEjC,EAAE,8BAA8BkC,SAASC,KAAK,eAAeC,KAAK"}