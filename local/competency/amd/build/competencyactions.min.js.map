{"version":3,"file":"competencyactions.min.js","sources":["../src/competencyactions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module to enable Competencies to manage their own data.\n *\n * @module     local_competency/competencyactions\n * @copyright  2022 e abyas  <info@eabyas.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {get_string as getString} from 'core/str';\nimport {get_strings as getStrings} from 'core/str';\nimport Ajax from 'core/ajax';\nimport homepage from 'theme_academy/homepage';\n\nconst SELECTORS = {\n    DELETE_COMPETENCY: '[data-action=\"deletecompetency\"][data-competencyid][data-competencyname]',\n    DELETE_COMPETENCYPC: '[data-action=\"deletecompetencypc\"][data-competencyid][data-competencyname]',\n    DELETE_COMPETENCYPCOBJECTIVE: '[data-action=\"deletecompetencyobjective\"][data-competencypcid][data-competencypcobjectivetype][data-competencypcobjectiveid][data-competencypcobjectivename]',\n};\n\n/**\n * Initialize module\n */\nlet HomePage = new homepage();\nexport const init = () => {\n    document.addEventListener('click', event => {\n        const triggerElement = event.target.closest(SELECTORS.DELETE_COMPETENCY);\n        if (triggerElement === null) {\n            return;\n        }\n        event.stopImmediatePropagation();\n        const requiredStrings = [\n            {key: 'deletecompetency', component: 'local_competency'},\n            {key: 'deletecompetencyconfirmation', component: 'local_competency',param: triggerElement.dataset.competencyname},\n        ];\n        getStrings(requiredStrings).then(([deleteCompetency, deleteConfirm]) => {\n            return Notification.confirm(deleteCompetency, deleteConfirm, deleteCompetency, null, () => {\n                var params = {};\n                params.elementid = triggerElement.dataset.competencyid;\n                params.elementtype = 'competency';\n                var promise = Ajax.call([{\n                    methodname: 'local_sector_candeleteelement',\n                    args: params\n                }]);\n                promise[0].done(function(resp) {\n                    if(resp.candelete == 1) {\n                        HomePage.confirmbox(getString('remove_dependency', 'local_sector'));\n                    } else {\n                        const pendingPromise = new Pending();\n                        const request = {\n                            methodname: 'local_competency_delete_data_competency',\n                            args: {competencyid: triggerElement.dataset.competencyid}\n                        };\n                        Ajax.call([request])[0].then(response => {\n                            if (response.result) {\n                                window.location.reload();\n                            } else {\n                                Notification.addNotification({\n                                    type: 'error',\n                                    message: response.warnings[0].message\n                                });\n                            }\n                            return pendingPromise.resolve();\n                        }).catch(Notification.exception);\n                    }\n                }).fail(function() {\n                    console.log('exception');\n                });  \n            });\n        }).catch();\n    });\n    document.addEventListener('click', event => {\n        const triggerElement = event.target.closest(SELECTORS.DELETE_COMPETENCYPC);\n        if (triggerElement === null) {\n            return;\n        }\n\n        event.stopImmediatePropagation();\n\n        const requiredStrings = [\n            {key: 'deletecompetencypc', component: 'local_competency'},\n            {key: 'deletecompetencypcconfirmation', component: 'local_competency',param: triggerElement.dataset.competencyname},\n        ];\n\n        getStrings(requiredStrings).then(([deleteCompetencypc, deleteConfirm]) => {\n            return Notification.confirm(deleteCompetencypc, deleteConfirm, deleteCompetencypc, null, () => {\n                const pendingPromise = new Pending();\n                const request = {\n                    methodname: 'local_competency_delete_data_competencypc',\n                    args: {competencyid: triggerElement.dataset.competencyid,competencypcid: triggerElement.dataset.id}\n                };\n\n                Ajax.call([request])[0].then(response => {\n                    if (response.result) {\n                        window.location.reload();\n                    } else {\n                        Notification.addNotification({\n                            type: 'error',\n                            message: response.warnings[0].message\n                        });\n                    }\n                    return pendingPromise.resolve();\n                }).catch(Notification.exception);\n            });\n        }).catch();\n    });\n    document.addEventListener('click', event => {\n        const triggerElement = event.target.closest(SELECTORS.DELETE_COMPETENCYPCOBJECTIVE);\n        if (triggerElement === null) {\n            return;\n        }\n        event.stopImmediatePropagation();\n\n        const requiredStrings = [\n            {key: 'deletecompetencypcobjective', component: 'local_competency', component: 'local_competency',param: triggerElement.dataset.competencypcobjectivetype},\n            {key: 'deletecompetencypcobjectiveconfirmation', component: 'local_competency',param: triggerElement.dataset.competencypcobjectivename},\n        ];\n\n        getStrings(requiredStrings).then(([deleteCompetencypcobjective, deleteConfirm]) => {\n            return Notification.confirm(deleteCompetencypcobjective, deleteConfirm, deleteCompetencypcobjective, null, () => {\n                const pendingPromise = new Pending();\n                const request = {\n                    methodname: 'local_competency_delete_competencypcobjectives',\n                    args: {competencypcid: triggerElement.dataset.competencypcid,competencypcobjectiveid: triggerElement.dataset.competencypcobjectiveid,competencypcobjectivetype: triggerElement.dataset.competencypcobjectivetype}\n                };\n\n                Ajax.call([request])[0].then(response => {\n                    if (response.result) {\n                        window.location.reload();\n                    } else {\n                        Notification.addNotification({\n                            type: 'error',\n                            message: response.warnings[0].message\n                        });\n                    }\n                    return pendingPromise.resolve();\n                }).catch(Notification.exception);\n            });\n        }).catch();\n    });\n};\n"],"names":["SELECTORS","HomePage","homepage","document","addEventListener","event","triggerElement","target","closest","stopImmediatePropagation","requiredStrings","key","component","param","dataset","competencyname","then","_ref","deleteCompetency","deleteConfirm","Notification","confirm","params","elementid","competencyid","elementtype","Ajax","call","methodname","args","done","resp","candelete","confirmbox","pendingPromise","Pending","request","response","result","window","location","reload","addNotification","type","message","warnings","resolve","catch","exception","fail","console","log","_ref2","deleteCompetencypc","competencypcid","id","competencypcobjectivetype","competencypcobjectivename","_ref3","deleteCompetencypcobjective","competencypcobjectiveid"],"mappings":";;;;;;;sQA8BMA,4BACiB,2EADjBA,8BAEmB,6EAFnBA,uCAG4B,mKAM9BC,SAAW,IAAIC,gCACC,KAChBC,SAASC,iBAAiB,SAASC,cACzBC,eAAiBD,MAAME,OAAOC,QAAQR,gCACrB,OAAnBM,sBAGJD,MAAMI,iCACAC,gBAAkB,CACpB,CAACC,IAAK,mBAAoBC,UAAW,oBACrC,CAACD,IAAK,+BAAgCC,UAAW,mBAAmBC,MAAOP,eAAeQ,QAAQC,sCAE3FL,iBAAiBM,MAAKC,WAAEC,iBAAkBC,2BAC1CC,sBAAaC,QAAQH,iBAAkBC,cAAeD,iBAAkB,MAAM,SAC7EI,OAAS,GACbA,OAAOC,UAAYjB,eAAeQ,QAAQU,aAC1CF,OAAOG,YAAc,aACPC,cAAKC,KAAK,CAAC,CACrBC,WAAY,gCACZC,KAAMP,UAEF,GAAGQ,MAAK,SAASC,SACA,GAAlBA,KAAKC,UACJ/B,SAASgC,YAAW,mBAAU,oBAAqB,qBAChD,OACGC,eAAiB,IAAIC,iBACrBC,QAAU,CACZR,WAAY,0CACZC,KAAM,CAACL,aAAclB,eAAeQ,QAAQU,6BAE3CG,KAAK,CAACS,UAAU,GAAGpB,MAAKqB,WACrBA,SAASC,OACTC,OAAOC,SAASC,+BAEHC,gBAAgB,CACzBC,KAAM,QACNC,QAASP,SAASQ,SAAS,GAAGD,UAG/BV,eAAeY,aACvBC,MAAM3B,sBAAa4B,eAE3BC,MAAK,WACJC,QAAQC,IAAI,sBAGrBJ,WAEP5C,SAASC,iBAAiB,SAASC,cACzBC,eAAiBD,MAAME,OAAOC,QAAQR,kCACrB,OAAnBM,sBAIJD,MAAMI,iCAEAC,gBAAkB,CACpB,CAACC,IAAK,qBAAsBC,UAAW,oBACvC,CAACD,IAAK,iCAAkCC,UAAW,mBAAmBC,MAAOP,eAAeQ,QAAQC,sCAG7FL,iBAAiBM,MAAKoC,YAAEC,mBAAoBlC,4BAC5CC,sBAAaC,QAAQgC,mBAAoBlC,cAAekC,mBAAoB,MAAM,WAC/EnB,eAAiB,IAAIC,iBACrBC,QAAU,CACZR,WAAY,4CACZC,KAAM,CAACL,aAAclB,eAAeQ,QAAQU,aAAa8B,eAAgBhD,eAAeQ,QAAQyC,mBAG/F5B,KAAK,CAACS,UAAU,GAAGpB,MAAKqB,WACrBA,SAASC,OACTC,OAAOC,SAASC,+BAEHC,gBAAgB,CACzBC,KAAM,QACNC,QAASP,SAASQ,SAAS,GAAGD,UAG/BV,eAAeY,aACvBC,MAAM3B,sBAAa4B,iBAE3BD,WAEP5C,SAASC,iBAAiB,SAASC,cACzBC,eAAiBD,MAAME,OAAOC,QAAQR,2CACrB,OAAnBM,sBAGJD,MAAMI,iCAEAC,gBAAkB,CACpB,CAACC,IAAK,8BAA+BC,UAAW,mBAAoBA,UAAW,mBAAmBC,MAAOP,eAAeQ,QAAQ0C,2BAChI,CAAC7C,IAAK,0CAA2CC,UAAW,mBAAmBC,MAAOP,eAAeQ,QAAQ2C,iDAGtG/C,iBAAiBM,MAAK0C,YAAEC,4BAA6BxC,4BACrDC,sBAAaC,QAAQsC,4BAA6BxC,cAAewC,4BAA6B,MAAM,WACjGzB,eAAiB,IAAIC,iBACrBC,QAAU,CACZR,WAAY,iDACZC,KAAM,CAACyB,eAAgBhD,eAAeQ,QAAQwC,eAAeM,wBAAyBtD,eAAeQ,QAAQ8C,wBAAwBJ,0BAA2BlD,eAAeQ,QAAQ0C,0CAGtL7B,KAAK,CAACS,UAAU,GAAGpB,MAAKqB,WACrBA,SAASC,OACTC,OAAOC,SAASC,+BAEHC,gBAAgB,CACzBC,KAAM,QACNC,QAASP,SAASQ,SAAS,GAAGD,UAG/BV,eAAeY,aACvBC,MAAM3B,sBAAa4B,iBAE3BD"}