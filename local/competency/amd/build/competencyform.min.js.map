{"version":3,"file":"competencyform.min.js","sources":["../src/competencyform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport TPDynamicForm from 'local_trainingprogram/dynamicform';\r\nimport ModalFactory from 'core/modal_factory';\r\nimport ModalEvents from 'core/modal_events';\r\nimport Templates from 'core/templates';\r\nimport Ajax from 'core/ajax';\r\nimport {get_string as get_string} from 'core/str';\r\nimport {get_strings as get_strings} from 'core/str';\r\n\r\nimport $ from 'jquery';\r\n\r\n/**\r\n *\r\n * @module     local_competency/competency\r\n * @copyright  2022 e abyas  <info@eabyas.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nconst Selectors = {\r\n    actions: {\r\n        editCompetency: '[data-action=\"editcompetency\"]',\r\n        editcompetencyPerformance: '[data-action=\"editcompetencyperformance\"]',\r\n        editcompetencyObjective: '[data-action=\"editcompetencyobjective\"]',\r\n        viewcompetencyLearningcontent: '[data-action=\"viewcompetencylearningcontent\"]',\r\n        viewquestionCompetencies: '[data-action=\"viewquestioncompetencies\"]',\r\n        editlevelDescription: '[data-action=\"editleveldescription\"]',\r\n    },\r\n};\r\n\r\nexport const init = () => {\r\n    document.addEventListener('click', function(e) {\r\n        let element = e.target.closest(Selectors.actions.editCompetency);\r\n        if (element) {\r\n            e.preventDefault();\r\n            const title = element.getAttribute('data-id') ?\r\n                get_string('editcompetency', 'local_competency', element.getAttribute('data-name')) :\r\n                get_string('createcompetency', 'local_competency');\r\n            const form = new TPDynamicForm({\r\n                formClass: 'local_competency\\\\form\\\\competency_form',\r\n                args: {id: element.getAttribute('data-id')},\r\n                modalConfig: {title},\r\n                returnFocus: element,\r\n            });\r\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\r\n            form.show();\r\n        }\r\n\r\n        let competencyelement = e.target.closest(Selectors.actions.editcompetencyPerformance);\r\n        if (competencyelement) {\r\n            e.preventDefault();\r\n            const title = competencyelement.getAttribute('data-name');\r\n            const form = new TPDynamicForm({\r\n                formClass: 'local_competency\\\\form\\\\competencyperformance_form',\r\n                args: {competency: competencyelement.getAttribute('data-competencyid'),id: competencyelement.getAttribute('data-id')},\r\n                modalConfig: {title},\r\n                returnFocus: competencyelement,\r\n            });\r\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\r\n            form.show();\r\n        }\r\n\r\n        let competencyobjelement = e.target.closest(Selectors.actions.editcompetencyObjective);\r\n        if (competencyobjelement) {\r\n            e.preventDefault();\r\n            const title = competencyobjelement.getAttribute('data-name');\r\n            const form = new TPDynamicForm({\r\n                formClass: 'local_competency\\\\form\\\\competencyobjective_form',\r\n                args: {competency: competencyobjelement.getAttribute('data-competencyid'),competencypc: competencyobjelement.getAttribute('data-id')},\r\n                modalConfig: {title},\r\n                returnFocus: competencyobjelement,\r\n            });\r\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\r\n            form.show();\r\n        }\r\n\r\n        let learningcontent = e.target.closest(Selectors.actions.viewcompetencyLearningcontent);\r\n        if (learningcontent) {\r\n\r\n\r\n            var modalPromise = ModalFactory.create({\r\n                type: ModalFactory.types.DEFAULT\r\n            });\r\n\r\n            var stringsPromise =get_strings([\r\n                    {\r\n                        key: 'learningcontenttrainingprogram',\r\n                        component: 'local_competency',\r\n                    },\r\n                    {\r\n                        key: 'learningcontentexam',\r\n                        component: 'local_competency',\r\n                    },\r\n                    {\r\n                        key: 'viewlearningcontent',\r\n                        component: 'local_competency',\r\n                        param:learningcontent.getAttribute('data-name')\r\n                    },\r\n                    {\r\n                        key: 'learningcontentquestion',\r\n                        component: 'local_competency',\r\n                    },\r\n                    {\r\n                        key: 'learningcontentlevels',\r\n                        component: 'local_competency',\r\n                    }\r\n\r\n            ]);\r\n            $.when(stringsPromise, modalPromise).then(function(strings, modal) {\r\n\r\n                var tabone = {'active' :'active','type':'exams','name':strings[1]};\r\n\r\n                var tabtwo = {'active' :'','type':'trainingprograms','name':strings[0]};\r\n\r\n\r\n                var options = {};\r\n                options.competencyid = learningcontent.getAttribute('data-id');\r\n                options.tabs = [tabone,tabtwo];\r\n                options.contenttype = learningcontent.getAttribute('data-contenttype');\r\n\r\n                if(options.contenttype == 'competencypc'){\r\n\r\n                    var tabthree = {'active' :'','type':'questions','name':strings[3]};\r\n\r\n                    options.tabs = [tabone,tabtwo,tabthree];\r\n\r\n                }\r\n\r\n                this.modal = modal;\r\n                this.modal.setTitle(strings[2]);\r\n\r\n                this.modal.setBody(Templates.render('local_competency/learningcontent_display',options));\r\n\r\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\r\n                    this.modal.destroy();\r\n                }.bind(this));\r\n\r\n                this.modal.setLarge();\r\n\r\n                this.modal.show();\r\n\r\n            }.bind(this));\r\n        }\r\n\r\n        let questioncompetencies = e.target.closest(Selectors.actions.viewquestionCompetencies);\r\n        if (questioncompetencies) {\r\n             e.preventDefault();\r\n             e.stopImmediatePropagation();\r\n\r\n            var modalPromise = ModalFactory.create({\r\n                type: ModalFactory.types.DEFAULT\r\n            });\r\n\r\n            var stringsPromise =get_strings([\r\n                    {\r\n                        key: 'viewquestioncompetencies',\r\n                        component: 'local_competency',\r\n                        param:questioncompetencies.getAttribute('data-name')\r\n                    }\r\n\r\n            ]);\r\n            $.when(stringsPromise, modalPromise).then(function(strings, modal) {\r\n\r\n\r\n                var options = {};\r\n                options.questionid = questioncompetencies.getAttribute('data-id');\r\n\r\n                this.modal = modal;\r\n                this.modal.setTitle(strings[0]);\r\n\r\n                this.modal.setBody(Templates.render('local_competency/questioncompetencies_display',options));\r\n\r\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\r\n                    this.modal.destroy();\r\n                }.bind(this));\r\n\r\n                 this.modal.getRoot().addClass('questioncmtncTransition');\r\n\r\n                this.modal.setLarge();\r\n\r\n                this.modal.show();\r\n\r\n            }.bind(this));\r\n        }\r\n\r\n        let levelelement = e.target.closest(Selectors.actions.editlevelDescription);\r\n        if (levelelement) {\r\n            e.preventDefault();\r\n            const title = levelelement.getAttribute('data-levelid') ?\r\n                get_string('editleveldescription', 'local_competency', levelelement.getAttribute('data-name')) :\r\n                get_string('addleveldescription', 'local_competency');\r\n            const form = new TPDynamicForm({\r\n                formClass: 'local_competency\\\\form\\\\competencylevel_form',\r\n                args: {competencyid: levelelement.getAttribute('data-competencyid'),levelid: levelelement.getAttribute('data-levelid')},\r\n                modalConfig: {title},\r\n                returnFocus: levelelement,\r\n            });\r\n            form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\r\n            form.show();\r\n        }\r\n    });\r\n};\r\n"],"names":["Selectors","editCompetency","editcompetencyPerformance","editcompetencyObjective","viewcompetencyLearningcontent","viewquestionCompetencies","editlevelDescription","document","addEventListener","e","element","target","closest","preventDefault","title","getAttribute","form","TPDynamicForm","formClass","args","id","modalConfig","returnFocus","events","FORM_SUBMITTED","window","location","reload","show","competencyelement","competency","competencyobjelement","competencypc","learningcontent","modalPromise","ModalFactory","create","type","types","DEFAULT","stringsPromise","key","component","param","when","then","strings","modal","tabone","tabtwo","options","competencyid","tabs","contenttype","tabthree","setTitle","setBody","Templates","render","getRoot","on","ModalEvents","hidden","destroy","bind","this","setLarge","questioncompetencies","stopImmediatePropagation","questionid","addClass","levelelement","levelid"],"mappings":"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"}