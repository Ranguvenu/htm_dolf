define("local_competency/form_competency_selector",["exports","core/ajax","core/templates","core/str"],(function(_exports,_ajax,_templates,_str){var obj;
/**
   * Provides the required functionality for an autocomplete element to select a competency options.
   *
   * @module      local_competency/form_competency_selector
   * @copyright   2022 e abyas  <info@eabyas.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.processResults=function(selector,results){return Array.isArray(results)?results.map((result=>({value:result.id,label:result.label}))):results},_exports.transport=async function(selector,query,callback,failure){const request={methodname:"local_competency_search_identity",args:{query:query,action:$(selector).data("action"),parentid:$(selector).data("parentid"),parentchildid:$(selector).data("parentchildid")}};try{const response=await _ajax.default.call([request])[0];if(response.overflow){const msg=await(0,_str.get_string)("toomanylisttoshow","local_competency",">"+response.maxcompetencysperpage);callback(msg)}else{let labels=[];response.list.forEach((competency=>{labels.push((0,_templates.render)("local_competency/form_competency_selector_suggestion",competency))})),labels=await Promise.all(labels),response.list.forEach(((competency,index)=>{competency.label=labels[index]})),callback(response.list)}}catch(e){failure(e)}},_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj}}));

//# sourceMappingURL=form_competency_selector.min.js.map