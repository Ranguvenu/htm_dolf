{"version":3,"file":"chart.min.js","sources":["../src/chart.js"],"sourcesContent":["define(['jquery',\r\n        'core/ajax',\r\n        'block_learnerscript/highcharts',\r\n        'block_learnerscript/smartfilter',\r\n        'block_learnerscript/report'\r\n    ],\r\n    function($, Ajax, Highcharts, smartfilter, report) {\r\n        /**\r\n         * Get highchart report for report with Ajax request\r\n         * @param object reportid and reportdata\r\n         * @return Generate highchart report\r\n         */\r\n        return chart = {\r\n            HighchartsAjax: function(args) {\r\n                args.cols = JSON.stringify(args.cols);\r\n                args.instanceid = args.reportid;\r\n                args.filters = smartfilter.FilterData(args.instanceid);\r\n                args.basicparams = JSON.stringify(smartfilter.BasicparamsData(args.instanceid));\r\n                args.filters['ls_fstartdate'] = $('#ls_fstartdate').val();\r\n                args.filters['ls_fenddate'] = $('#ls_fenddate').val();\r\n                if (typeof args.filters['filter_courses'] == 'undefined') {\r\n                    var filter_courses = $('.dashboardcourses').val();\r\n                    if (filter_courses != 1) {\r\n                        args.filters['filter_courses'] = filter_courses;\r\n                    }\r\n                }\r\n                args.filters = JSON.stringify(args.filters);\r\n\r\n                //Request\r\n                var promise = Ajax.call([{\r\n                    methodname: 'block_learnerscript_generate_plotgraph',\r\n                    args: args,\r\n                }]);\r\n\r\n                //Preload\r\n                $('#report_plottabs').show();\r\n                $(\"#plotreportcontainer\" + args.instanceid).html('<img src=\"' + M.util.image_url('loading', 'block_learnerscript') + '\" id=\"reportloadingimage\" />');\r\n\r\n                //Response process\r\n                promise[0].done(function(response) {\r\n                    response = JSON.parse(response);\r\n                    if (response.plot) {\r\n                        if (response.plot.error === true) {\r\n                            $('#plotreportcontainer' + args.instanceid).html(\"<div class='alert alert-warning'>No data available</div>\");\r\n                        } else {\r\n                            response.plot.reportid = args.reportid;\r\n                            response.plot.reportinstance = args.reportid;\r\n                            if (response.plot.data && response.plot.data.length > 0) {\r\n                                require(['block_learnerscript/report'], function(report) {\r\n                                    report.generate_plotgraph(response.plot);\r\n                                });\r\n                            } else {\r\n                                $('#plotreportcontainer' + args.instanceid).html(\"<div class='alert alert-warning'>No data available</div>\");\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n\r\n            //Piechart\r\n            piechart: function(chartdata) {\r\n                var chart = Highcharts.chart(chartdata.containerid, {\r\n                    chart: {\r\n                        plotBackgroundColor: null,\r\n                        plotBorderWidth: null,\r\n                        plotShadow: false,\r\n                        type: 'pie',\r\n                        width: chartdata.width || null,\r\n                        height: chartdata.height || null,\r\n                        margin: chartdata.margin || null\r\n                    },\r\n                    credits: {\r\n                        enabled: false\r\n                    },\r\n                    exporting: {\r\n                        enabled: false\r\n                    },\r\n                    title: {\r\n                        text: chartdata.title\r\n                    },\r\n                    tooltip: {\r\n                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n                    },\r\n                    plotOptions: {\r\n                        pie: {\r\n                            allowPointSelect: true,\r\n                            cursor: 'pointer',\r\n                            shadow: false,\r\n                            dataLabels: {\r\n                                enabled: chartdata.datalabels\r\n                            },\r\n                            showInLegend: chartdata.showlegend\r\n                        }\r\n                    },\r\n                    series: [{\r\n                        name: chartdata.serieslabel,\r\n                        colorByPoint: true,\r\n                        data: chartdata.data,\r\n                    }]\r\n                });\r\n            },\r\n            //Line, Bar and column charts\r\n            lbchart: function(chartdata) {\r\n                var charttype = chartdata.type;\r\n                var chartcolors = ['#336B87', '#90AFC5', '#688B8A', '#A0B084', '#FAEFD4','#A57C65', '#1aadce', '#492970', '#f28f43', '#77a1e5', '#c42525', '#a6c96a'];\r\n                if (typeof $(chartdata.container).data('chartcolor') != 'undefined') {\r\n                    chartcolors = ['#' + $(chartdata.container).data('chartcolor') + ''];\r\n                }\r\n                var chart = Highcharts.chart(chartdata.containerid, {\r\n                    chart: {\r\n                        type: charttype,\r\n                        height: chartdata.height || null,\r\n                        zoomType: 'x',\r\n                        styledMode: true\r\n                    },\r\n                    colors: chartcolors,\r\n                    credits: {\r\n                        enabled: false\r\n                    },\r\n                    exporting: {\r\n                        enabled: false\r\n                    },\r\n                    title: {\r\n                        text: chartdata.title\r\n                    },\r\n                    xAxis: {\r\n                        categories: chartdata.categorydata,\r\n                        labels: {\r\n                            enabled: chartdata.datalabels == 1 ? true : false\r\n                        },\r\n                        title: {\r\n                            text: chartdata.ylabel\r\n                        }\r\n                    },\r\n                    yAxis: {\r\n\r\n                        title: {\r\n                            text: chartdata.pcalcs ? chartdata.pcalcs : chartdata.title                        }\r\n                    },\r\n                    plotOptions: {\r\n                        bar: {\r\n                            dataLabels: {\r\n                                enabled: chartdata.datalabels == 1 ? true : false,\r\n                                formatter: function () {\r\n                                  return this.point.label;\r\n                                }\r\n                            },\r\n                            enableMouseTracking: chartdata.datalabels == 1 ? false : true,\r\n                            borderRadius: 5\r\n                        },\r\n                        spline: {\r\n                            dataLabels: {\r\n                                enabled: chartdata.datalabels == 1 ? true : false,\r\n                                 formatter: function () {\r\n                                  return this.point.label;\r\n                                }\r\n                            },\r\n                            enableMouseTracking: chartdata.datalabels == 1 ? false : true\r\n                        },\r\n                        column: {\r\n                            dataLabels: {\r\n                                enabled: chartdata.datalabels === 1 ? true : false,\r\n                                formatter: function () {\r\n                                  return this.point.label;\r\n                                }\r\n                            },\r\n                            enableMouseTracking: chartdata.datalabels === 1 ? false : true,\r\n                            borderRadius: 5\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        pointFormatter: function () {\r\n                            return '<span style=\"color:' + this.series.color + ';\">\\u25CF</span> ' + this.series.name + ' - ' + this.label;\r\n                        }\r\n                    },\r\n                    credits: {\r\n                        enabled: true\r\n                    },\r\n                    legend: {\r\n                        enabled: chartdata.showlegend,\r\n                    },\r\n                    series: chartdata.data,\r\n                    responsive: {\r\n                        rules: [{\r\n                            condition: {\r\n                                maxWidth: 500\r\n                            },\r\n                            chartOptions: {\r\n                                legend: {\r\n                                    align: 'center',\r\n                                    verticalAlign: 'bottom',\r\n                                    layout: 'horizontal'\r\n                                },\r\n                                yAxis: {\r\n                                    labels: {\r\n                                        align: 'left',\r\n                                        x: 0,\r\n                                        y: 10\r\n                                    },\r\n                                    title: {\r\n                                        text: null\r\n                                    }\r\n                                },\r\n                                subtitle: {\r\n                                    text: null\r\n                                },\r\n                                credits: {\r\n                                    enabled: false\r\n                                }\r\n                            }\r\n                        }]\r\n                    }\r\n                });\r\n            },\r\n            //Combination chart with line,bar and pie\r\n            combinationchart: function(chartdata) {\r\n                var chartcolors = ['#90AFC5', '#336B87', '#FAEFD4','#A57C65', '#1aadce', '#492970', '#f28f43', '#77a1e5', '#c42525', '#a6c96a'];\r\n                if (typeof $(chartdata.container).data('chartcolor') != 'undefined') {\r\n                    chartcolors = ['#' + $(chartdata.container).data('chartcolor') + ''];\r\n                }\r\n                Highcharts.chart(chartdata.containerid, {\r\n                    zoomType: 'xy',\r\n                    title: {\r\n                        text: chartdata.title\r\n                    },\r\n                    colors: chartcolors,\r\n                    xAxis: {\r\n                        categories: chartdata.categorydata,\r\n                        crosshair: true,\r\n                        labels: {\r\n                            enabled: chartdata.datalabels == 1 ? true : false\r\n                        }\r\n                    },\r\n                     yAxis: [{\r\n                            title: {\r\n                                text: chartdata.name\r\n                            }\r\n                            }, {\r\n                                opposite: true, //optional, you can have it on the same side.\r\n                                title: {\r\n                                    text: chartdata.name\r\n                                }\r\n                            }],\r\n                    credits: {\r\n                        enabled: false\r\n                    },\r\n                    exporting: {\r\n                        enabled: false\r\n                    },\r\n                    tooltip: {\r\n                       useHTML: true,\r\n                        pointFormatter: function () {\r\n                            return '<span style=\"color:' + this.series.color + ';\">\\u25CF</span> ' + this.series.name + ' - ' + this.label;\r\n                        }\r\n                    },\r\n                    dataLabels: {\r\n                        enabled: chartdata.datalabels == 1 ? true : false,\r\n                        formatter: function () {\r\n                            return this.point.label;\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        enabled: chartdata.showlegend == 1 ? true : false\r\n                    },\r\n                    series: chartdata.data\r\n                });\r\n            },\r\n            WorldMap: function(chartdata) {\r\n                // Instanciate the map\r\n                Highcharts.mapChart(chartdata.containerid, {\r\n                    chart: {\r\n                        borderWidth: 1\r\n                    },\r\n                    colors: ['#07575B', '#66A5AD', '#C4DFE6','#003B46', 'rgba(19,64,117,0.6)', 'rgba(19,64,117,0.8)', 'rgba(19,64,117,1)'\r\n                    ],\r\n                    title: {\r\n                        text: chartdata.title\r\n                    },\r\n                    credits: {\r\n                        enabled: false\r\n                    },\r\n                    exporting: {\r\n                        enabled: false\r\n                    },\r\n                    mapNavigation: {\r\n                        enabled: true,\r\n                        enableMouseWheelZoom: false,\r\n                        enableDoubleClickZoom: true\r\n                    },\r\n                    legend: {\r\n                        title: {\r\n                            text: chartdata.serieslabel,\r\n                            style: {\r\n                                color: (Highcharts.theme && Highcharts.theme.textColor) || 'black'\r\n                            }\r\n                        },\r\n                        align: 'left',\r\n                        verticalAlign: 'bottom',\r\n                        floating: true,\r\n                        layout: 'vertical',\r\n                        valueDecimals: 0,\r\n                        symbolRadius: 0,\r\n                        symbolHeight: 14\r\n                    },\r\n                    colorAxis: {\r\n                        dataClasses: [{\r\n                            to: 3\r\n                        }, {\r\n                            from: 3,\r\n                            to: 10\r\n                        }, {\r\n                            from: 10,\r\n                            to: 30\r\n                        }, {\r\n                            from: 30,\r\n                            to: 100\r\n                        }, {\r\n                            from: 100,\r\n                            to: 300\r\n                        }, {\r\n                            from: 300,\r\n                            to: 1000\r\n                        }, {\r\n                            from: 1000\r\n                        }]\r\n                    },\r\n                    series: [{\r\n                        data: chartdata.data,\r\n                        mapData: Highcharts.maps['custom/world'],\r\n                        joinBy: ['iso-a2', 'code'],\r\n                        name: chartdata.serieslabel,\r\n                        states: {\r\n                            hover: {\r\n                                color: '#a4edba'\r\n                            }\r\n                        },\r\n                        shadow: false\r\n                    }]\r\n                });\r\n            },\r\n            TreeMap: function(chartdata) {\r\n                // Instanciate the map\r\n                Highcharts.mapChart(chartdata.containerid, {\r\n                    credits: {\r\n                        enabled: false\r\n                    },\r\n                    exporting: {\r\n                        enabled: false\r\n                    },\r\n                     title: {\r\n                        text: chartdata.title\r\n                    },\r\n                    series: [{\r\n                        type: \"treemap\",\r\n                        allowDrillToNode: true,\r\n                        layoutAlgorithm: 'squarified',\r\n                        events: {\r\n                            click: function(event) {\r\n                                $(\"#ls_courseid\").val(event.point.id);\r\n                                report.DashboardTiles();\r\n                                report.DashboardWidgets();\r\n                            }\r\n                        },\r\n                        levelIsConstant: false,\r\n                        levels: [{\r\n                            level: 1,\r\n                            dataLabels: {\r\n                                enabled: true,\r\n                                align: 'left',\r\n                                verticalAlign: 'top',\r\n                                style: {\r\n                                    fontSize: '11px'\r\n                                }\r\n                            }\r\n                        }],\r\n                        data: chartdata.data\r\n                    }]\r\n                });\r\n            },\r\n             SparkLines: function(chartdata) {\r\n            Highcharts.SparkLine = function(a, b, c) {\r\n                var hasRenderToArg = typeof a === 'string' || a.nodeName,\r\n                    options = arguments[hasRenderToArg ? 1 : 0],\r\n                    defaultOptions = {\r\n                        chart: {\r\n                            renderTo: (options.chart && options.chart.renderTo) || this,\r\n                            backgroundColor: null,\r\n                            borderWidth: 0,\r\n                            type: 'area',\r\n                            margin: [2, 0, 2, 0],\r\n                            width: 120,\r\n                            height: 100,\r\n                            style: {\r\n                                overflow: 'visible'\r\n                            },\r\n                            // small optimalization, saves 1-2 ms each sparkline\r\n                            skipClone: true\r\n                        },\r\n                        title: {\r\n                            text: ''\r\n                        },\r\n                        credits: {\r\n                            enabled: false\r\n                        },\r\n                        exporting: {\r\n                            enabled: false\r\n                        },\r\n                        xAxis: {\r\n                            labels: {\r\n                                enabled: false\r\n                            },\r\n                            title: {\r\n                                text: null\r\n                            },\r\n                            startOnTick: false,\r\n                            endOnTick: false,\r\n                            tickPositions: []\r\n                        },\r\n                        yAxis: {\r\n                            endOnTick: false,\r\n                            startOnTick: false,\r\n                            labels: {\r\n                                enabled: false\r\n                            },\r\n                            title: {\r\n                                text: null\r\n                            },\r\n                            tickPositions: [0]\r\n                        },\r\n                        legend: {\r\n                            enabled: false\r\n                        },\r\n                        tooltip: {\r\n                            backgroundColor: null,\r\n                            borderWidth: 0,\r\n                            shadow: false,\r\n                            useHTML: true,\r\n                            hideDelay: 0,\r\n                            shared: true,\r\n                            padding: 0,\r\n                            positioner: function(w, h, point) {\r\n                                return {\r\n                                    x: point.plotX - w / 2,\r\n                                    y: point.plotY - h\r\n                                };\r\n                            }\r\n                        },\r\n                        plotOptions: {\r\n                            series: {\r\n                                animation: false,\r\n                                lineWidth: 1,\r\n                                shadow: false,\r\n                                states: {\r\n                                    hover: {\r\n                                        lineWidth: 1\r\n                                    }\r\n                                },\r\n                                marker: {\r\n                                    radius: 1,\r\n                                    states: {\r\n                                        hover: {\r\n                                            radius: 2\r\n                                        }\r\n                                    }\r\n                                },\r\n                                fillOpacity: 0.25\r\n                            },\r\n                            column: {\r\n                                negativeColor: '#910000',\r\n                                borderColor: 'silver',\r\n                                borderRadius: 15\r\n                            }\r\n                        }\r\n                    };\r\n                options = Highcharts.merge(defaultOptions, options);\r\n                return hasRenderToArg ? new Highcharts.Chart(a, options, c) : new Highcharts.Chart(options, b);\r\n            };\r\n        },\r\n        ProgressBar: function(chartdata) {\r\n            Highcharts.chart(chartdata.containerid, {\r\n                title: {\r\n                    text: chartdata.title\r\n                },\r\n                credits: {\r\n                    enabled: false\r\n                },\r\n                chart: {\r\n                    renderTo: chartdata.containerid,\r\n                    type: 'bar',\r\n                    height: chartdata.height || 15,\r\n                    backgroundColor: chartdata.backgroundColor || 'transparent',\r\n                    margin: chartdata.margin || null\r\n                },\r\n                plotOptions: {\r\n                    bar: { borderRadius: 5 },\r\n                    series: {\r\n                        cursor: 'pointer',\r\n                        point: {\r\n                            events: {\r\n                                click: function() {\r\n                                    if (typeof chartdata.data.link !== 'undefined') {\r\n                                        require('block_learnerscript/helper').ReportModelFromLink({\r\n                                            container: $(\"#\" + chartdata.containerid),\r\n                                            url: chartdata.data.link\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                    }\r\n                },\r\n                exporting: {\r\n                    enabled: false\r\n                },\r\n                credits: chartdata.credits || false,\r\n                tooltip: chartdata.tooltip || false,\r\n                legend: chartdata.legend || false,\r\n                xAxis: {\r\n                    visible: false,\r\n                },\r\n                yAxis: {\r\n                    visible: false,\r\n                    min: 0,\r\n                    max: 100,\r\n                },\r\n                series: [{\r\n                    data: [100],\r\n                    grouping: false,\r\n                    animation: false,\r\n                    enableMouseTracking: false,\r\n                    showInLegend: false,\r\n                    color: '#CCC',\r\n                    pointWidth: 15,\r\n                    dataLabels: {\r\n                        className: 'highlight',\r\n                        format: chartdata.format || null,\r\n                        enabled: false,\r\n                        align: 'left',\r\n                        style: {\r\n                            color: '#0294A5',\r\n                            textOutline: false,\r\n                            fontSize: '9px',\r\n                            fontWeight: 'normal'\r\n                        }\r\n                    }\r\n                }, {\r\n                    enableMouseTracking: true,\r\n                    data: chartdata.data || [0],\r\n                    color: '#0294A5',\r\n                    pointWidth: 15,\r\n                    animation: {\r\n                        duration: 250,\r\n                    },\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        inside: true,\r\n                        align: 'right',\r\n                        format: '{point.y}%',\r\n                        style: {\r\n                            color: '#FFF',\r\n                            textOutline: false,\r\n                            fontSize: '9px',\r\n                            fontWeight: 'normal'\r\n                        }\r\n                    }\r\n                }]\r\n            });\r\n        },\r\n        SparkLineReport: function() {\r\n            var start = +new Date(),\r\n                $tds = $('.spark-report'),\r\n                fullLen = $tds.length,\r\n                n = 0;\r\n            var time = +new Date(),\r\n                i,\r\n                $td,\r\n                len = $tds.length,\r\n                stringdata,\r\n                arr,\r\n                data,\r\n                chart;\r\n            for (i = 0; i < len; i += 1) {\r\n                $td = $($tds[i]);\r\n                stringdata = $td.data('sparkline');\r\n                stringLabels = $td.data('labels');\r\n                stringlink = $td.data('link');\r\n                arr = stringdata.split('; ');\r\n                datalabels = stringLabels.split(', ');\r\n                data = $.map(arr[0].split(', '), parseFloat);\r\n                data.link = stringlink;\r\n                chart = {};\r\n                if (arr[1]) {\r\n                    chart.type = arr[1];\r\n                }\r\n                chart.containerid = $td.attr('id');\r\n                chart.chartname = '';\r\n                chart.datalabels = false;\r\n                chart.showlegend = false;\r\n                chart.serieslabel = false;\r\n                chart.categorydata = $td.text();\r\n                switch (arr[1]) {\r\n                    case 'pie':\r\n                        chart.data = data;\r\n                        chart.width = '65',\r\n                            chart.height = '65';\r\n                        chart.margin = [0, 0, 0, 0],\r\n                            this.piechart(chart);\r\n                        break;\r\n                    case 'spline':\r\n                    case 'bar':\r\n                    case 'column':\r\n                        chart.data = {\r\n                            data: data,\r\n                            name: $td.data('name'),\r\n                            type: 'bar'\r\n                        };\r\n                        chart.serieslabel = $td.data('serieslabel');\r\n                        chart.title = $td.data('title');\r\n                        this.lbchart(chart);\r\n                        break;\r\n                    case 'progressbar':\r\n                        chart.data = data;\r\n                        chart.title = $td.data('title');\r\n                        chart.width = '100',\r\n                            chart.height = '15';\r\n                        chart.margin = [0, 0, 0, 0];\r\n\r\n                        this.ProgressBar(chart);\r\n                        break;\r\n                    default:\r\n                        this.SparkLines();\r\n                        Highcharts.SparkLine($td.attr('id'), {\r\n                            title: {\r\n                                text: ''\r\n                            },\r\n                            credits: {\r\n                                enabled: false\r\n                            },\r\n                            series: [{\r\n                                data: data,\r\n                                pointStart: 1,\r\n                                dataLabels: {\r\n                                    enabled: false\r\n                                }\r\n                            }],\r\n                            tooltip: {\r\n                                headerFormat: '<span style=\"font-size: 10px\">' + $td.parent().find('th').html() + '<br/> Q{point.x}: </span>',\r\n                                pointFormat: ' <b>{point.y}</b>'\r\n                            },\r\n                            chart: chart\r\n                        });\r\n                        break;\r\n                }\r\n                n += 1;\r\n                // If the process takes too much time, run a timeout to allow interaction with the browser\r\n                if (new Date() - time > 500) {\r\n                    $tds.splice(0, i + 1);\r\n                    setTimeout(this.SparkLineReport, 0);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        }\r\n    });\r\n"],"names":["define","$","Ajax","Highcharts","smartfilter","report","chart","HighchartsAjax","args","cols","JSON","stringify","instanceid","reportid","filters","FilterData","basicparams","BasicparamsData","val","filter_courses","promise","call","methodname","show","html","M","util","image_url","done","response","parse","plot","error","reportinstance","data","length","require","generate_plotgraph","piechart","chartdata","containerid","plotBackgroundColor","plotBorderWidth","plotShadow","type","width","height","margin","credits","enabled","exporting","title","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","shadow","dataLabels","datalabels","showInLegend","showlegend","series","name","serieslabel","colorByPoint","lbchart","charttype","chartcolors","container","zoomType","styledMode","colors","xAxis","categories","categorydata","labels","ylabel","yAxis","pcalcs","bar","formatter","this","point","label","enableMouseTracking","borderRadius","spline","column","pointFormatter","color","legend","responsive","rules","condition","maxWidth","chartOptions","align","verticalAlign","layout","x","y","subtitle","combinationchart","crosshair","opposite","useHTML","WorldMap","mapChart","borderWidth","mapNavigation","enableMouseWheelZoom","enableDoubleClickZoom","style","theme","textColor","floating","valueDecimals","symbolRadius","symbolHeight","colorAxis","dataClasses","to","from","mapData","maps","joinBy","states","hover","TreeMap","allowDrillToNode","layoutAlgorithm","events","click","event","id","DashboardTiles","DashboardWidgets","levelIsConstant","levels","level","fontSize","SparkLines","SparkLine","a","b","c","hasRenderToArg","nodeName","options","arguments","defaultOptions","renderTo","backgroundColor","overflow","skipClone","startOnTick","endOnTick","tickPositions","hideDelay","shared","padding","positioner","w","h","plotX","plotY","animation","lineWidth","marker","radius","fillOpacity","negativeColor","borderColor","merge","Chart","ProgressBar","link","ReportModelFromLink","url","visible","min","max","grouping","pointWidth","className","format","textOutline","fontWeight","duration","inside","SparkLineReport","Date","i","$td","stringdata","arr","$tds","time","len","stringLabels","stringlink","split","map","parseFloat","attr","chartname","pointStart","headerFormat","parent","find","splice","setTimeout"],"mappings":"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"}