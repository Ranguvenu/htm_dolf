{"version":3,"file":"reportwidget.min.js","sources":["../src/reportwidget.js"],"sourcesContent":["define(['jquery',\r\n        'core/ajax',\r\n        'block_learnerscript/report',\r\n        'block_learnerscript/smartfilter'\r\n    ], function($, Ajax, report, smartfilter) {\r\n    return reportwidget = {\r\n        /**\r\n         * Creates dashboard widgets for configured widgets of dashboard depends on type\r\n         * @param object args reportcontainer\r\n         * @return Creates and render widgets with given congurations and locations\r\n         */\r\n        DashboardWidgets: function(args) {\r\n            var self = this;\r\n            var args = args || {\r\n                container: '.report_dashboard_container'\r\n            };\r\n            var filterdata = smartfilter.FilterData(args.reportid);\r\n            $('.loader').show();\r\n            $(args.container).each(function() {\r\n                var reporttype;\r\n                var reportid = $(this).data('reportid');\r\n                var blockinstance = $(this).data('blockinstance');\r\n                if ($(this).val() != '') {\r\n                    var blockinstance = $(\"#reportcontainer\" + reportinstance).data('blockinstance');\r\n                    args.reporttype = $(\"#reporttype_\" + blockinstance + \"  :selected\").val();\r\n                    var params = {\r\n                        reportid: reportid,\r\n                        reporttype: args.reporttype\r\n                    };\r\n                    $.extend(params, filterdata);\r\n                    self.CreateDashboardwidget(params);\r\n                    return false;\r\n                }\r\n                args.reporttype = $(\"#reporttype_\" + blockinstance + \"  :selected\").val();\r\n\r\n                if (typeof(args.reporttype) == 'undefined') {\r\n                    args.reporttype = $(this).data('reporttype');\r\n                }\r\n\r\n                self.CreateDashboardwidget({\r\n                    reportid: reportid,\r\n                    reporttype: args.reporttype,\r\n                    instanceid: blockinstance\r\n                });\r\n            });\r\n        },\r\n        DashboardTiles: function() {\r\n            var self = this;\r\n            ls_fstartdate = $('#ls_fstartdate').val();\r\n            ls_fenddate = $('#ls_fenddate').val();\r\n            var courseid = $('#ls_courseid').val();\r\n            $(\".tiles_information\").each(function() {\r\n                self.CreateDashboardTile({\r\n                    blockinstanceid: $(this).data('instanceid'),\r\n                    reportid: $(this).data('reportid'),\r\n                    reporttype: $(this).data('reporttype'),\r\n                    ls_fstartdate: ls_fstartdate,\r\n                    ls_fenddate: ls_fenddate,\r\n                    courseid: courseid\r\n                })\r\n            });\r\n        },\r\n        CreateDashboardTile: function(args) {\r\n            var self = this;\r\n            $(\"#inst\" + args.blockinstanceid + \" .tiles_information table tr\").html(\"\");\r\n            var reportinstance = args.blockinstanceid;\r\n            var filters = {};\r\n            filters['ls_fstartdate'] = $('#ls_fstartdate'+args.blockinstanceid).val();\r\n            filters['ls_fenddate'] = $('#ls_fenddate'+args.blockinstanceid).val();\r\n\r\n            $.urlParam = function(name){\r\n                var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\r\n                if (results === null || results == ' ' ){\r\n                    return null;\r\n                } else {\r\n                    return results[1] || 0;\r\n                }\r\n            }\r\n            var dashboardurl = $.urlParam('dashboardurl');\r\n            if (typeof filters['filter_courses'] == 'undefined') {\r\n                var filter_courses = $('.report_courses').val();\r\n                if (dashboardurl == 'Course') {\r\n                    args.courseid = filter_courses;\r\n                }\r\n                if (filter_courses != 1) {\r\n                    filters['filter_courses'] = filter_courses;\r\n                }\r\n            }\r\n            \r\n            var promise = Ajax.call([{\r\n                methodname: 'block_learnerscript_generate_plotgraph',\r\n                args: {\r\n                    instanceid: args.blockinstanceid,\r\n                    reportid: args.reportid,\r\n                    courseid: args.courseid,\r\n                    filters: JSON.stringify(filters),\r\n                    // filter_courseid: args.courseid,\r\n                    reporttype: args.reporttype\r\n                },\r\n                loading: '#reportloading_' + args.blockinstanceid\r\n            }]);\r\n            promise[0].done(function(data) {\r\n                data = JSON.parse(data);\r\n                var heads = [];\r\n                var tabledata = [];\r\n                if (args.reporttype != 'table') {\r\n                    // if (typeof args.ls_fstartdate == 'undefined') {\r\n                        $.extend(data.plot, args);\r\n                        data.plot.container = \"#plotreportcontainer\" + reportinstance;\r\n                        if (data.plot.error === true) {\r\n                            $('#plotreportcontainer' + reportinstance).html('<p class=\"alert alert-warning\">' + data.plot.messages + '</p>');\r\n                        } else {\r\n                            if (data.plot.data.length == 0) {\r\n                                $(data.plot.container).html(\"<div class='alert alert-info'>Data Not Available.</div>\");\r\n                            } else {\r\n                                data.plot.reportinstance = reportinstance;\r\n                                require(['block_learnerscript/report'], function(report) {\r\n                                    report.generate_plotgraph(data.plot);\r\n                                });\r\n                            }\r\n                        }\r\n                    // }\r\n                } else {\r\n                    if (typeof data.plot != 'undefined') {\r\n                        if (data.plot.data.length > 0) {\r\n                            $(data.plot.data).each(function(key, value) {\r\n                                heads = [];\r\n                                tabledata = [];\r\n                                heads = value.head;\r\n                                tabledata = value.data;\r\n                            });\r\n                            $(data.plot.categorydata).each(function(k, v) {\r\n                                if (data.plot.categorydata.length == 1) {\r\n                                    if (!isNaN(tabledata[0][k])) {\r\n                                        $(\"#inst\" + args.blockinstanceid + \" .tiles_information table tr\").append('<td><h1 ' + args.styletilescolour + '> ' + tabledata[0][k] + ' </h1></td>');\r\n                                    } else {\r\n                                        $(\"#inst\" + args.blockinstanceid + \" .tiles_information table tr\").append('<td><h6 ' + args.styletilescolour + '> ' + tabledata[0][k] + ' </h6></td>');\r\n                                    }\r\n                                } else {\r\n                                    $(\"#inst\" + args.blockinstanceid + \" .tiles_information table tr\").append('<td>' + v + ' : <b> ' + tabledata[k] + ' </b></td>');\r\n                                }\r\n                            });\r\n                        } else {\r\n                                $(\"#inst\" + args.blockinstanceid + \" .tiles_information table tr\").html(\"<div class='alert alert-info'> No Data Available.</div>\");\r\n                                $(\"#inst\" + args.blockinstanceid + \" .dashboard_tiles\").css('color', '#4B4B4B');\r\n                                // $(\"#inst\" + args.blockinstanceid + \" .tiles_information\").html(\"<div class='alert alert-info'> No Data Available.</div>\");\r\n                        }\r\n                        $(\"#reportloading_\" + args.blockinstanceid).css('display', 'none');\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * Creates single dashboard widget for requested report and type\r\n         * @param object args reportid and reporttype\r\n         * @return Creates report widget depends on type table,pie chart etc...\r\n         */\r\n        CreateDashboardwidget: function(args) {\r\n            var self = this;\r\n            console.log(args);\r\n            if(args.reportdashboard == false){\r\n                args.instanceid = '';\r\n            }\r\n            var reportinstance = args.instanceid || args.reportid;\r\n            args.filters = smartfilter.FilterData(reportinstance);\r\n            args.columnDefs = '';\r\n            args.filters['ls_fstartdate'] = $('#ls_fstartdate'+args.instanceid).val();\r\n            args.filters['ls_fenddate'] = $('#ls_fenddate'+args.instanceid).val();\r\n            if (typeof args.filters['filter_courses'] == 'undefined') {\r\n                var filter_courses = $('.report_courses').val();\r\n                if (filter_courses != 1) {\r\n                    args.filters['filter_courses'] = filter_courses;\r\n                }\r\n            }\r\n            if (args.reporttype == 'table') {\r\n            } else {\r\n                $('.plotgraphcontainer').removeClass('hide').addClass('show');\r\n            }\r\n            if (args.selectreport) {\r\n                $(\"#reportcontainer\" + reportinstance).attr('data-reporttype', args.singleplot);\r\n                $(\"#plotreportcontainer\" + reportinstance).attr('data-reporttype', args.singleplot);\r\n                delete args.selectreport;\r\n            }\r\n\r\n            args.filters = JSON.stringify(args.filters);\r\n\r\n            args.action = 'generate_plotgraph';\r\n            $('.download_menu' + reportinstance + ' li a').each(function(index) {\r\n                var link = $(this).attr('href');\r\n                if (typeof args.basicparams != 'undefined') {\r\n                    var basicparamsdata = JSON.parse(args.basicparams);\r\n                    $.each(basicparamsdata, function(key, value) {\r\n                        if (key.indexOf('filter_') == 0) {\r\n                            link += '&' + key + '=' + value;\r\n                        }\r\n                    });\r\n                }\r\n                if (typeof(args.filters) != 'undefined') {\r\n                    var filters = JSON.parse(args.filters);\r\n                    $.each(filters, function(key, value) {\r\n                        if (key.indexOf('filter_') == 0) {\r\n                            link += '&' + key + '=' + value;\r\n                        }\r\n                        if(key.indexOf('ls_') == 0) {\r\n                            link += '&' + key + '=' + value;\r\n                        }\r\n                    });\r\n                }\r\n                $(this).attr('href', link);\r\n            });\r\n            args.basicparams = args.basicparams || JSON.stringify(smartfilter.BasicparamsData(reportinstance));\r\n            if (typeof args.reportdashboard != 'undefined' && typeof args.reporttype != 'undefined') {\r\n                $(\"#reportcontainer\" + reportinstance).html(\"\");\r\n                $(\"#plotreportcontainer\" + reportinstance).html(\"\");\r\n            } else {\r\n                if (typeof args.reportdashboard != 'undefined' && args.reporttype == 'table') {\r\n                    $(\"#reportcontainer\" + reportinstance).html(\"\");\r\n                } else {\r\n                    $(\"#plotreportcontainer\" + reportinstance).html(\"\");\r\n                }\r\n            }\r\n            var promise = Ajax.call([{\r\n                methodname: 'block_learnerscript_generate_plotgraph',\r\n                args: args,\r\n                loading: '#reportloading_' + args.reportid\r\n            }]);\r\n            if ($(\"#reportloadingimage\").length <= 0) {\r\n                if (args.reporttype == 'table') {\r\n                    $(\"#reportcontainer\" + args.reportid).prepend('<img src=\"' + M.util.image_url('loading', 'block_learnerscript') + '\" id=\"reportloadingimage\" />');\r\n                } else {\r\n                    $(\"#plotreportcontainer\" + args.reportid).prepend('<img src=\"' + M.util.image_url('loading', 'block_learnerscript') + '\" id=\"reportloadingimage\" />');\r\n                }\r\n            }\r\n            promise[0].done(function(chartdata) {\r\n                chartdata = $.parseJSON(chartdata);\r\n                var reporttype = chartdata.reporttype || args.reporttype;\r\n                if (reporttype == 'table') {\r\n                    if (typeof(chartdata.data) == 'undefined' && chartdata.emptydata) {\r\n                        if (!$('#reporttable_' + args.reportid).length) {\r\n                            $(\"#reportcontainer\" + reportinstance).html(chartdata.tdata);\r\n                        }\r\n                        $(document).ajaxStop(function() {\r\n                            $(\"#reportloadingimage\").remove();\r\n                        });\r\n                        args.reportname = chartdata.reportname;\r\n                        require(['block_learnerscript/report'], function(report) {\r\n                            report.ReportDatatable(args);\r\n                        });\r\n                    } else {\r\n                        if (!$('#reporttable_' + args.reportid).length) {\r\n                            $(\"#reportcontainer\" + reportinstance).html(chartdata.tdata);\r\n                        }\r\n                        $(document).ajaxStop(function() {\r\n                            $(\"#reportloadingimage\").remove();\r\n                        });\r\n                        args.columnDefs = chartdata.columnDefs;\r\n                        args.data = chartdata.data;\r\n                        args.reportname = chartdata.reportname;\r\n                        require(['block_learnerscript/report'], function(report) {\r\n                            report.ReportDatatable(args);\r\n                        });\r\n                    }\r\n                } else {\r\n                    $.extend(chartdata.plot, args);\r\n                    chartdata.plot.container = \"#plotreportcontainer\" + reportinstance;\r\n                    $(document).ajaxStop(function() {\r\n                        $(\"#reportloadingimage\").remove();\r\n                    });\r\n                    if (chartdata.plot.error === true) {\r\n                        $('#plotreportcontainer' + reportinstance).html('<p class=\"alert alert-warning\">' + chartdata.plot.messages + '</p>');\r\n                    } else {\r\n                        if (chartdata.plot.data && chartdata.plot.data.length > 0) {\r\n                            chartdata.plot.reportinstance = reportinstance;\r\n                            $(\".drilldown\" + reportinstance + \" .ui-dialog-title\").html(chartdata.reportname);\r\n                            args.reportname = chartdata.reportname;                            \r\n                            require(['block_learnerscript/report'], function(report) {\r\n                                report.generate_plotgraph(chartdata.plot);\r\n                            });\r\n                        } else {\r\n                            $(chartdata.plot.container).html('<p class=\"alert alert-warning\">No data available</p>');\r\n                        }\r\n                    }\r\n                }\r\n            }).fail(function(ex) {\r\n                // do something with the exception\r\n            });\r\n        }\r\n    }\r\n});\r\n"],"names":["define","$","Ajax","report","smartfilter","reportwidget","DashboardWidgets","args","self","this","filterdata","container","FilterData","reportid","show","each","data","blockinstance","val","reportinstance","reporttype","params","extend","CreateDashboardwidget","instanceid","DashboardTiles","ls_fstartdate","ls_fenddate","courseid","CreateDashboardTile","blockinstanceid","html","filters","urlParam","name","results","RegExp","exec","window","location","href","dashboardurl","filter_courses","call","methodname","JSON","stringify","loading","done","parse","tabledata","plot","error","messages","length","require","generate_plotgraph","key","value","head","categorydata","k","v","isNaN","append","styletilescolour","css","console","log","reportdashboard","columnDefs","removeClass","addClass","selectreport","attr","singleplot","action","index","link","basicparams","basicparamsdata","indexOf","BasicparamsData","promise","prepend","M","util","image_url","chartdata","parseJSON","emptydata","tdata","document","ajaxStop","remove","reportname","ReportDatatable","fail","ex"],"mappings":"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"}